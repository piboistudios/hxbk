// Generated by Haxe 4.0.0-rc.2+77068e10c

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace hxbk {
	public class Engine : global::haxe.lang.HxObject {
		
		public Engine(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public Engine() {
			global::hxbk.Engine.__hx_ctor_hxbk_Engine(this);
		}
		
		
		protected static void __hx_ctor_hxbk_Engine(global::hxbk.Engine __hx_this) {
			unchecked {
				object __temp_stmt2 = null;
				{
					object __temp_odecl1 = new global::haxe.lang.DynamicObject(new int[]{}, new object[]{}, new int[]{766501982, 1427864240}, new double[]{((double) (250) ), ((double) (8000) )});
					__temp_stmt2 = new global::haxe.lang.DynamicObject(new int[]{1092322345, 1246881189}, new object[]{__temp_odecl1, ""}, new int[]{}, new double[]{});
				}
				
				__hx_this.cfg = ((object) (__temp_stmt2) );
				{
				}
				
			}
		}
		
		
		public static global::hxbk.Engine instance;
		
		
		
		public static object get_config() {
			return global::hxbk.Engine.instance.cfg;
		}
		
		
		
		
		public static string get_path() {
			return global::haxe.lang.Runtime.toString(global::haxe.lang.Runtime.getField(global::hxbk.Engine.instance.cfg, "path", 1246881189, true));
		}
		
		
		public static void start(object config) {
			unchecked {
				global::hxbk.Engine.instance = new global::hxbk.Engine();
				if (( config == null )) {
					return;
				}
				
				object dAccessConfig = global::hxbk.Engine.instance.cfg;
				{
					int _g = 0;
					global::Array<object> _g1 = global::Reflect.fields(((object) (config) ));
					while (( _g < _g1.length )) {
						string key = global::haxe.lang.Runtime.toString(_g1[_g]);
						 ++ _g;
						global::haxe.Log.trace.__hx_invoke2_o(default(double), key, default(double), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"start", "hxbk.Engine", "src/hxbk/Engine.hx"}, new int[]{1981972957}, new double[]{((double) (46) )}));
						global::haxe.Log.trace.__hx_invoke2_o(default(double), dAccessConfig, default(double), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"start", "hxbk.Engine", "src/hxbk/Engine.hx"}, new int[]{1981972957}, new double[]{((double) (47) )}));
						global::haxe.Log.trace.__hx_invoke2_o(default(double), config, default(double), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"start", "hxbk.Engine", "src/hxbk/Engine.hx"}, new int[]{1981972957}, new double[]{((double) (48) )}));
						{
							object @value = ((object) (global::Reflect.field(((object) (config) ), key)) );
							global::Reflect.setField(((object) (dAccessConfig) ), key, @value);
						}
						
						global::haxe.Log.trace.__hx_invoke2_o(default(double), dAccessConfig, default(double), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"start", "hxbk.Engine", "src/hxbk/Engine.hx"}, new int[]{1981972957}, new double[]{((double) (50) )}));
					}
					
				}
				
			}
		}
		
		
		public static void ensure() {
			unchecked {
				if (( global::hxbk.Engine.instance == null )) {
					throw global::haxe.lang.HaxeException.wrap(new global::tink.core.TypedError<object>(new global::haxe.lang.Null<int>(((int) (500) ), true), ((string) ("Engine must be initialized before beginning operation.") ), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"ensure", "hxbk.Engine", "src/hxbk/Engine.hx"}, new int[]{1981972957}, new double[]{((double) (56) )})));
				}
				
				if ( ! (global::sys.FileSystem.exists(global::haxe.lang.Runtime.concat("./", global::hxbk.Engine.get_path()))) ) {
					global::sys.FileSystem.createDirectory(global::haxe.lang.Runtime.concat("./", global::hxbk.Engine.get_path()));
				}
				
			}
		}
		
		
		public object cfg;
		
		public virtual void setConfig(object c) {
			this.cfg = c;
		}
		
		
		public override double __hx_setField_f(string field, int hash, double @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 4946020:
					{
						this.cfg = ((object) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField_f(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 4946020:
					{
						this.cfg = ((object) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 662293508:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "setConfig", 662293508)) );
					}
					
					
					case 4946020:
					{
						return this.cfg;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override double __hx_getField_f(string field, int hash, bool throwErrors, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 4946020:
					{
						return ((double) (global::haxe.lang.Runtime.toDouble(this.cfg)) );
					}
					
					
					default:
					{
						return base.__hx_getField_f(field, hash, throwErrors, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, object[] dynargs) {
			unchecked {
				switch (hash) {
					case 662293508:
					{
						this.setConfig(dynargs[0]);
						break;
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
		public override void __hx_getFields(global::Array<object> baseArr) {
			baseArr.push("cfg");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}


