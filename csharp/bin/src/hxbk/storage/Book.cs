// Generated by Haxe 4.0.0-rc.2+77068e10c

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace hxbk.storage {
	public class Book : global::haxe.lang.HxObject {
		
		public Book(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public Book(string n) {
			global::hxbk.storage.Book.__hx_ctor_hxbk_storage_Book(this, n);
		}
		
		
		protected static void __hx_ctor_hxbk_storage_Book(global::hxbk.storage.Book __hx_this, string n) {
			__hx_this.deserializationHooks = new global::Array<object>(new object[]{});
			__hx_this.serializationHooks = new global::Array<object>(new object[]{});
			__hx_this.dirtyPages = new global::haxe.ds.IntMap<object>();
			__hx_this.preDeserialization = new global::hxbk.storage.Book___hx_ctor_hxbk_storage_Book_100__Fun(__hx_this);
			__hx_this.postSerialization = new global::hxbk.storage.Book___hx_ctor_hxbk_storage_Book_92__Fun(__hx_this);
			{
				__hx_this.name = n;
			}
			
		}
		
		
		public static global::hxbk.storage.Book open(string name) {
			global::hxbk.storage.Book book = new global::hxbk.storage.Book(((string) (name) ));
			book.ensure();
			book.pageSize = ((int) (global::haxe.lang.Runtime.toInt(global::haxe.lang.Runtime.getField(global::haxe.lang.Runtime.getField(global::hxbk.Engine.get_config(), "book", 1092322345, true), "pageSize", 1427864240, true))) );
			return book;
		}
		
		
		public global::haxe.ds.IntMap<object> dirtyPages;
		
		public string name;
		
		public int pageSize;
		
		
		
		public object _stat;
		
		public virtual string get_file() {
			global::hxbk.Engine.ensure();
			return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("./", global::hxbk.Engine.get_path()), "/"), this.name), ".hxbk");
		}
		
		
		
		
		public virtual object get_stat() {
			this.ensure();
			if (( this._stat == null )) {
				this._stat = global::sys.FileSystem.stat(this.get_file());
			}
			
			return this._stat;
		}
		
		
		
		
		public virtual int get_size() {
			return ((int) (global::haxe.lang.Runtime.getField_f(this.get_stat(), "size", 1280549057, true)) );
		}
		
		
		
		
		public virtual int get_pages() {
			return ( this.get_size() / this.pageSize );
		}
		
		
		public virtual void ensure() {
			if ( ! (global::sys.FileSystem.exists(this.get_file())) ) {
				global::sys.io.FileOutput output = global::sys.io.File.write(this.get_file(), new global::haxe.lang.Null<bool>(true, true));
				output.writeString("", null);
				output.flush();
				output.close();
			}
			
		}
		
		
		public virtual global::hxbk.storage.Page createPage() {
			unchecked {
				global::hxbk.storage.Page newPage = new global::hxbk.storage.Page(((global::hxbk.storage.Book) (this) ));
				int[] this1 = new int[1];
				int[] this2 = ((int[]) (this1) );
				int[] ret = ((int[]) (this2) );
				((int[]) (ret) )[0] = -1;
				newPage.setNumber(ret);
				return newPage;
			}
		}
		
		
		public virtual global::tink.core._Future.FutureObject<object> getFreePage() {
			{
				int _g = 0;
				int _g1 = this.get_pages();
				while (( _g < _g1 )) {
					int pageNo = _g++;
					if ( ! (global::hxbk.concurrency.SharedAccess.locked(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("book-", this.name), "-page-"), global::haxe.lang.Runtime.toString(pageNo)))) ) {
						return this.read(pageNo);
					}
					
				}
				
			}
			
			return ((global::tink.core._Future.FutureObject<object>) (new global::tink.core._Future.SyncFuture<object>(((global::tink.core._Lazy.LazyObject<object>) (new global::tink.core._Lazy.LazyConst<object>(((object) (this.createPage()) ))) ))) );
		}
		
		
		public global::Array<object> serializationHooks;
		
		public global::Array<object> deserializationHooks;
		
		[global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
		public global::haxe.lang.Function postSerialization;
		
		[global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
		public global::haxe.lang.Function preDeserialization;
		
		public virtual void addStoragePlan(global::haxe.lang.Function serialize, global::haxe.lang.Function deserialize) {
			this.serializationHooks.push(serialize);
			this.deserializationHooks.insert(0, deserialize);
		}
		
		
		public virtual global::tink.core._Future.FutureObject<object> write(global::hxbk.storage.Page page) {
			global::hxbk.storage.Book _gthis = this;
			global::tink.core.FutureTrigger<object> done = new global::tink.core.FutureTrigger<object>();
			global::hxbk.concurrency.SharedAccess.acquire(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("book-", this.name), "-page-"), global::tink.core._Ref.Ref_Impl_.toString<int>(((int[]) (page.number) )))).handle(new global::hxbk.storage.Book_write_115__Fun(page, done, _gthis));
			return ((global::tink.core._Future.FutureObject<object>) (done) );
		}
		
		
		public virtual global::tink.core._Future.FutureObject<object> read(int pageNo) {
			global::hxbk.storage.Book _gthis = this;
			global::tink.core.FutureTrigger<object> done = new global::tink.core.FutureTrigger<object>();
			global::hxbk.concurrency.SharedAccess.acquire(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("book-", this.name), "-page-"), global::haxe.lang.Runtime.toString(pageNo))).handle(new global::hxbk.storage.Book_read_138__Fun(pageNo, done, _gthis));
			return ((global::tink.core._Future.FutureObject<object>) (done) );
		}
		
		
		public virtual int peek(int pageNo) {
			unchecked {
				global::haxe.Log.trace.__hx_invoke2_o(default(double), "peek", default(double), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"peek", "hxbk.storage.Book", "src/hxbk/storage/Book.hx"}, new int[]{1981972957}, new double[]{((double) (158) )}));
				global::sys.io.FileInput read = global::sys.io.File.read(this.get_file(), new global::haxe.lang.Null<bool>(true, true));
				read.seek(( pageNo * this.pageSize ), global::sys.io.FileSeek.SeekBegin);
				int size = read.readInt16();
				read.close();
				global::haxe.Log.trace.__hx_invoke2_o(default(double), global::haxe.lang.Runtime.concat("done peeking ", global::haxe.lang.Runtime.toString(size)), default(double), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"peek", "hxbk.storage.Book", "src/hxbk/storage/Book.hx"}, new int[]{1981972957}, new double[]{((double) (163) )}));
				if (( size == 0 )) {
					return 0;
				}
				else {
					return ( size + 2 );
				}
				
			}
		}
		
		
		public virtual global::Array<int> peekAll() {
			global::sys.io.FileInput read = global::sys.io.File.read(this.get_file(), new global::haxe.lang.Null<bool>(true, true));
			global::Array<int> result = new global::Array<int>(new int[]{});
			{
				int _g = 0;
				int _g1 = this.get_pages();
				while (( _g < _g1 )) {
					int i = _g++;
					read.seek(( i * this.pageSize ), global::sys.io.FileSeek.SeekBegin);
					result.push(read.readInt16());
				}
				
			}
			
			read.close();
			return result;
		}
		
		
		public virtual global::tink.core._Future.FutureObject<int> count() {
			unchecked {
				global::hxbk.storage.Book _gthis = this;
				global::tink.core.FutureTrigger<int> done = new global::tink.core.FutureTrigger<int>();
				string stackEntry = global::haxe.CallStack.toString(global::haxe.CallStack.callStack().slice(0, new global::haxe.lang.Null<int>(1, true)));
				int[] total = new int[]{0};
				global::tink.core._Promise.Promise_Impl_.iterate<object, object>(((object) (global::hxbk.IteratorTools.toArray(new global::IntIterator(0, this.get_pages())).map<object>(((global::haxe.lang.Function) (new global::hxbk.storage.Book_count_184__Fun(_gthis)) ))) ), ((global::haxe.lang.Function) (new global::hxbk.storage.Book_count_186__Fun(total)) ), ((global::tink.core._Future.FutureObject<object>) (new global::tink.core._Future.SyncFuture<object>(((global::tink.core._Lazy.LazyObject<object>) (new global::tink.core._Lazy.LazyConst<object>(((object) (global::tink.core.Outcome.Success(new global::hxbk.storage.Book_count_189__Fun(total, done))) ))) ))) ), default(global::haxe.lang.Null<bool>));
				return ((global::tink.core._Future.FutureObject<int>) (done) );
			}
		}
		
		
		public virtual global::tink.core._Future.FutureObject<object> commit() {
			global::hxbk.storage.Book _gthis = this;
			global::Array<int> _g = new global::Array<int>(new int[]{});
			{
				object key = ((object) (new global::haxe.ds._IntMap.IntMapKeyIterator<object>(((global::haxe.ds.IntMap<object>) (global::haxe.ds.IntMap<object>.__hx_cast<object>(((global::haxe.ds.IntMap) (((global::haxe.IMap<int, object>) (this.dirtyPages) )) ))) ))) );
				while (global::haxe.lang.Runtime.toBool(global::haxe.lang.Runtime.callField(key, "hasNext", 407283053, null))) {
					int key1 = ((int) (global::haxe.lang.Runtime.toInt(global::haxe.lang.Runtime.callField(key, "next", 1224901875, null))) );
					_g.push(key1);
				}
				
			}
			
			global::tink.core._Future.FutureObject<object> ret = ((global::tink.core._Future.FutureObject<object>) (global::tink.core._Future.Future_Impl_.ofMany<object>(((global::Array<object>) (_g.map<object>(((global::haxe.lang.Function) (new global::hxbk.storage.Book_commit_197__Fun(_gthis)) )).map<object>(((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "write", 1348037855)) ))) ), default(global::haxe.lang.Null<bool>))) ).flatMap<object>(((global::haxe.lang.Function) (new global::hxbk.storage.Book_commit_197__Fun_0(_gthis)) ));
			return ret.gather();
		}
		
		
		public virtual void create(global::Array<object> records, global::tink.core.SignalTrigger<object> emitter, global::haxe.lang.Null<int> depth) {
			unchecked {
				int depth1 = ( ( ! (depth.hasValue) ) ? (0) : ((depth).@value) );
				global::haxe.lang.Function emit = new global::hxbk.storage.Book_create_209__Fun(emitter);
				global::haxe.lang.Function result1 = new global::hxbk.storage.Book_create_214__Fun(depth1);
				if (( ( records == null ) || ( records.length == 0 ) )) {
					object tmp = ((object) (result1.__hx_invoke1_o(default(double), null)) );
					emit.__hx_invoke1_o(default(double), tmp);
					return;
				}
				
				bool[] done = new bool[]{false};
				bool reverse = ( global::Std.random(2) == 1 );
				global::Array<int> sizes = this.peekAll();
				global::haxe.ds.BalancedTree<int, object> recordTree = new global::haxe.ds.BalancedTree<int, object>();
				int[] index = new int[]{0};
				global::Lambda.iter<object>(((object) (records) ), ((global::haxe.lang.Function) (new global::hxbk.storage.Book_create_224__Fun(recordTree, index)) ));
				int recordSize = global::hxbk.StorageTools.size<object>(((object) (recordTree) ));
				global::Array<int> a = global::hxbk.IteratorTools.toArray(new global::IntIterator(0, this.get_pages()));
				if (reverse) {
					a.reverse();
				}
				
				{
					int _g = 0;
					while (( _g < a.length )) {
						int pageNo = a[_g];
						 ++ _g;
						if (( ( sizes[pageNo] + recordSize ) < this.pageSize )) {
							this.read(pageNo).handle(new global::hxbk.storage.Book_create_233__Fun(sizes, result1, records, recordSize, pageNo, emit, done));
							return;
						}
						
					}
					
				}
				
				global::hxbk.storage.Page newPage = this.createPage();
				if (( ( recordSize < this.pageSize ) && newPage.create(records) )) {
					object tmp2 = ((object) (result1.__hx_invoke1_o(default(double), newPage)) );
					emit.__hx_invoke1_o(default(double), tmp2);
					return;
				}
				else {
					int overflowFactor = ( ((int) (( ( ((double) (recordSize) ) / this.pageSize ) / 2 )) ) + 1 );
					global::Array<object> segments = ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::Lambda.fold<int, object>(((object) (global::hxbk.IteratorTools.toArray(new global::IntIterator(0, overflowFactor))) ), ((global::haxe.lang.Function) (( (( global::hxbk.storage.Book_create_259__Fun.__hx_current != null )) ? (global::hxbk.storage.Book_create_259__Fun.__hx_current) : (global::hxbk.storage.Book_create_259__Fun.__hx_current = ((global::hxbk.storage.Book_create_259__Fun) (new global::hxbk.storage.Book_create_259__Fun()) )) )) ), ((object) (new global::Array<object>(new object[]{records})) ))) ))) );
					{
						int _g11 = 0;
						while (( _g11 < segments.length )) {
							global::Array<object> segment = ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (segments[_g11]) ))) );
							 ++ _g11;
							this.create(segment, emitter, new global::haxe.lang.Null<int>(( depth1 + 1 ), true));
						}
						
					}
					
					return;
				}
				
			}
		}
		
		
		public override double __hx_setField_f(string field, int hash, double @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 2137849779:
					{
						this._stat = ((object) (@value) );
						return @value;
					}
					
					
					case 1427864240:
					{
						this.pageSize = ((int) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField_f(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1720573100:
					{
						this.preDeserialization = ((global::haxe.lang.Function) (@value) );
						return @value;
					}
					
					
					case 656005424:
					{
						this.postSerialization = ((global::haxe.lang.Function) (@value) );
						return @value;
					}
					
					
					case 1954803489:
					{
						this.deserializationHooks = ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (@value) ))) );
						return @value;
					}
					
					
					case 1997185888:
					{
						this.serializationHooks = ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (@value) ))) );
						return @value;
					}
					
					
					case 2137849779:
					{
						this._stat = ((object) (@value) );
						return @value;
					}
					
					
					case 1427864240:
					{
						this.pageSize = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					case 1224700491:
					{
						this.name = global::haxe.lang.Runtime.toString(@value);
						return @value;
					}
					
					
					case 603245010:
					{
						this.dirtyPages = ((global::haxe.ds.IntMap<object>) (global::haxe.ds.IntMap<object>.__hx_cast<object>(((global::haxe.ds.IntMap) (@value) ))) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 2081384188:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "create", 2081384188)) );
					}
					
					
					case 1194225655:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "commit", 1194225655)) );
					}
					
					
					case 1248019663:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "count", 1248019663)) );
					}
					
					
					case 30638662:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "peekAll", 30638662)) );
					}
					
					
					case 1247076763:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "peek", 1247076763)) );
					}
					
					
					case 1269254998:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "read", 1269254998)) );
					}
					
					
					case 1348037855:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "write", 1348037855)) );
					}
					
					
					case 1471347235:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "addStoragePlan", 1471347235)) );
					}
					
					
					case 1720573100:
					{
						return this.preDeserialization;
					}
					
					
					case 656005424:
					{
						return this.postSerialization;
					}
					
					
					case 1954803489:
					{
						return this.deserializationHooks;
					}
					
					
					case 1997185888:
					{
						return this.serializationHooks;
					}
					
					
					case 860564433:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "getFreePage", 860564433)) );
					}
					
					
					case 1558158187:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "createPage", 1558158187)) );
					}
					
					
					case 75232702:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "ensure", 75232702)) );
					}
					
					
					case 16156571:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_pages", 16156571)) );
					}
					
					
					case 1028467524:
					{
						return this.get_pages();
					}
					
					
					case 1276009546:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_size", 1276009546)) );
					}
					
					
					case 1280549057:
					{
						return this.get_size();
					}
					
					
					case 1276551005:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_stat", 1276551005)) );
					}
					
					
					case 1281090516:
					{
						return this.get_stat();
					}
					
					
					case 1131842053:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "get_file", 1131842053)) );
					}
					
					
					case 2137849779:
					{
						return this._stat;
					}
					
					
					case 1136381564:
					{
						return this.get_file();
					}
					
					
					case 1427864240:
					{
						return this.pageSize;
					}
					
					
					case 1224700491:
					{
						return this.name;
					}
					
					
					case 603245010:
					{
						return this.dirtyPages;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override double __hx_getField_f(string field, int hash, bool throwErrors, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1028467524:
					{
						return ((double) (this.get_pages()) );
					}
					
					
					case 1280549057:
					{
						return ((double) (this.get_size()) );
					}
					
					
					case 1281090516:
					{
						return ((double) (global::haxe.lang.Runtime.toDouble(this.get_stat())) );
					}
					
					
					case 2137849779:
					{
						return ((double) (global::haxe.lang.Runtime.toDouble(this._stat)) );
					}
					
					
					case 1427864240:
					{
						return ((double) (this.pageSize) );
					}
					
					
					default:
					{
						return base.__hx_getField_f(field, hash, throwErrors, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, object[] dynargs) {
			unchecked {
				switch (hash) {
					case 2081384188:
					{
						this.create(((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (dynargs[0]) ))) ), ((global::tink.core.SignalTrigger<object>) (global::tink.core.SignalTrigger<object>.__hx_cast<object>(((global::tink.core.SignalTrigger) (dynargs[1]) ))) ), global::haxe.lang.Null<object>.ofDynamic<int>(dynargs[2]));
						break;
					}
					
					
					case 1194225655:
					{
						return this.commit();
					}
					
					
					case 1248019663:
					{
						return this.count();
					}
					
					
					case 30638662:
					{
						return this.peekAll();
					}
					
					
					case 1247076763:
					{
						return this.peek(((int) (global::haxe.lang.Runtime.toInt(dynargs[0])) ));
					}
					
					
					case 1269254998:
					{
						return this.read(((int) (global::haxe.lang.Runtime.toInt(dynargs[0])) ));
					}
					
					
					case 1348037855:
					{
						return this.write(((global::hxbk.storage.Page) (dynargs[0]) ));
					}
					
					
					case 1471347235:
					{
						this.addStoragePlan(((global::haxe.lang.Function) (dynargs[0]) ), ((global::haxe.lang.Function) (dynargs[1]) ));
						break;
					}
					
					
					case 860564433:
					{
						return this.getFreePage();
					}
					
					
					case 1558158187:
					{
						return this.createPage();
					}
					
					
					case 75232702:
					{
						this.ensure();
						break;
					}
					
					
					case 16156571:
					{
						return this.get_pages();
					}
					
					
					case 1276009546:
					{
						return this.get_size();
					}
					
					
					case 1276551005:
					{
						return this.get_stat();
					}
					
					
					case 1131842053:
					{
						return this.get_file();
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
		public override void __hx_getFields(global::Array<object> baseArr) {
			baseArr.push("preDeserialization");
			baseArr.push("postSerialization");
			baseArr.push("deserializationHooks");
			baseArr.push("serializationHooks");
			baseArr.push("pages");
			baseArr.push("size");
			baseArr.push("stat");
			baseArr.push("_stat");
			baseArr.push("file");
			baseArr.push("pageSize");
			baseArr.push("name");
			baseArr.push("dirtyPages");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace hxbk.storage {
	public class Book_write_115__Fun : global::haxe.lang.Function {
		
		public Book_write_115__Fun(global::hxbk.storage.Page page, global::tink.core.FutureTrigger<object> done, global::hxbk.storage.Book _gthis) : base(1, 0) {
			this.page = page;
			this.done = done;
			this._gthis = _gthis;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				global::haxe.lang.Function unlock = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float1) )) )) : (((global::haxe.lang.Function) (__fn_dyn1) )) );
				{
					if (( ((int) (((int[]) (this.page.number) )[0]) ) == -1 )) {
						int v = this._gthis.get_pages();
						int[] this1 = new int[1];
						int[] this2 = ((int[]) (this1) );
						int[] ret = ((int[]) (this2) );
						((int[]) (ret) )[0] = v;
						this.page.setNumber(ret);
						global::sys.io.FileOutput appendStream = global::sys.io.File.append(this._gthis.get_file(), new global::haxe.lang.Null<bool>(true, true));
						appendStream.write(global::haxe.io.Bytes.alloc(8000));
						appendStream.flush();
						appendStream.close();
					}
					
					global::sys.io.FileOutput stream = global::sys.io.File.update(this._gthis.get_file(), new global::haxe.lang.Null<bool>(true, true));
					stream.seek(( ((int) (((int[]) (this.page.number) )[0]) ) * this._gthis.pageSize ), global::sys.io.FileSeek.SeekBegin);
					stream.writeInt16(this.page.get_bytes().length);
					stream.write(this.page.get_bytes());
					stream.flush();
					stream.close();
					this._gthis._stat = null;
					this.done.trigger(global::tink.core.TinkNoise.Noise);
					unlock.__hx_invoke0_o();
				}
				
				return null;
			}
		}
		
		
		public global::hxbk.storage.Page page;
		
		public global::tink.core.FutureTrigger<object> done;
		
		public global::hxbk.storage.Book _gthis;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace hxbk.storage {
	public class Book_read_138__Fun : global::haxe.lang.Function {
		
		public Book_read_138__Fun(int pageNo, global::tink.core.FutureTrigger<object> done, global::hxbk.storage.Book _gthis) : base(1, 0) {
			this.pageNo = pageNo;
			this.done = done;
			this._gthis = _gthis;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				global::haxe.lang.Function unlock = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float1) )) )) : (((global::haxe.lang.Function) (__fn_dyn1) )) );
				{
					global::sys.io.FileInput read = global::sys.io.File.read(this._gthis.get_file(), new global::haxe.lang.Null<bool>(true, true));
					read.seek(( this.pageNo * this._gthis.pageSize ), global::sys.io.FileSeek.SeekBegin);
					int length = read.readInt16();
					global::haxe.io.Bytes pageBytes = read.read(length);
					if (( pageBytes.length > 0 )) {
						global::hxbk.storage.Page page = global::hxbk.storage.Serializer.deserialize(pageBytes, this._gthis.preDeserialization);
						int[] this1 = new int[1];
						int[] this2 = ((int[]) (this1) );
						int[] ret = ((int[]) (this2) );
						((int[]) (ret) )[0] = this.pageNo;
						page.setNumber(ret);
						page.book = this._gthis;
						this.done.trigger(page);
					}
					else {
						this.done.trigger(null);
					}
					
					read.close();
					unlock.__hx_invoke0_o();
				}
				
				return null;
			}
		}
		
		
		public int pageNo;
		
		public global::tink.core.FutureTrigger<object> done;
		
		public global::hxbk.storage.Book _gthis;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace hxbk.storage {
	public class Book_count_185__Fun_0 : global::haxe.lang.Function {
		
		public Book_count_185__Fun_0(int pageNo, global::hxbk.storage.Book _gthis) : base(0, 0) {
			this.pageNo = pageNo;
			this._gthis = _gthis;
		}
		
		
		public override object __hx_invoke0_o() {
			return this._gthis.read(this.pageNo);
		}
		
		
		public int pageNo;
		
		public global::hxbk.storage.Book _gthis;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace hxbk.storage {
	public class Book_count_185__Fun : global::haxe.lang.Function {
		
		public Book_count_185__Fun(global::tink.core._Lazy.LazyObject<object> p) : base(1, 0) {
			this.p = p;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::haxe.lang.Function cb = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float1) )) )) : (((global::haxe.lang.Function) (__fn_dyn1) )) );
			((global::tink.core._Future.FutureObject<object>) (global::tink.core._Future.FutureObject__Statics_.__hx_cast<object>(((global::tink.core._Future.FutureObject) (((global::tink.core._Lazy.LazyObject<object>) (this.p) ).@get()) ))) ).handle(cb);
			return null;
		}
		
		
		public global::tink.core._Lazy.LazyObject<object> p;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace hxbk.storage {
	public class Book_count_184__Fun : global::haxe.lang.Function {
		
		public Book_count_184__Fun(global::hxbk.storage.Book _gthis) : base(1, 0) {
			this._gthis = _gthis;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			int pageNo = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float1) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn1)) )) );
			global::tink.core._Lazy.LazyObject<object> p = ((global::tink.core._Lazy.LazyObject<object>) (new global::tink.core._Lazy.LazyFunc<object>(((global::haxe.lang.Function) (new global::hxbk.storage.Book_count_185__Fun_0(pageNo, this._gthis)) ))) );
			return global::tink.core._Future.Future_Impl_.async<object>(((global::haxe.lang.Function) (new global::hxbk.storage.Book_count_185__Fun(p)) ), new global::haxe.lang.Null<bool>(true, true));
		}
		
		
		public global::hxbk.storage.Book _gthis;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace hxbk.storage {
	public class Book_count_186__Fun : global::haxe.lang.Function {
		
		public Book_count_186__Fun(int[] total) : base(1, 0) {
			this.total = total;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			object page = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			this.total[0] += ((int) (global::haxe.lang.Runtime.toInt(global::haxe.lang.Runtime.callField(global::haxe.lang.Runtime.getField(page, "records", 821774530, true), "count", 1248019663, null))) );
			return ((global::tink.core._Future.FutureObject<object>) (new global::tink.core._Future.SyncFuture<object>(((global::tink.core._Lazy.LazyObject<object>) (new global::tink.core._Lazy.LazyConst<object>(((object) (global::tink.core.Outcome.Success(global::haxe.ds.Option.None)) ))) ))) );
		}
		
		
		public int[] total;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace hxbk.storage {
	public class Book_count_189__Fun : global::haxe.lang.Function {
		
		public Book_count_189__Fun(int[] total, global::tink.core.FutureTrigger<int> done) : base(0, 0) {
			this.total = total;
			this.done = done;
		}
		
		
		public override object __hx_invoke0_o() {
			this.done.trigger(this.total[0]);
			return new global::tink.core._Future.SyncFuture<object>(((global::tink.core._Lazy.LazyObject<object>) (new global::tink.core._Lazy.LazyConst<object>(((object) (global::haxe.ds.Option.Some(true)) ))) ));
		}
		
		
		public int[] total;
		
		public global::tink.core.FutureTrigger<int> done;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace hxbk.storage {
	public class Book_commit_197__Fun_0 : global::haxe.lang.Function {
		
		public Book_commit_197__Fun_0(global::hxbk.storage.Book _gthis) : base(1, 0) {
			this._gthis = _gthis;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::Array<object> results = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (((object) (__fn_float1) )) ))) )) : (((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (__fn_dyn1) ))) )) );
			object keys = ((object) (new global::haxe.ds._IntMap.IntMapKeyIterator<object>(((global::haxe.ds.IntMap<object>) (global::haxe.ds.IntMap<object>.__hx_cast<object>(((global::haxe.ds.IntMap) (((global::haxe.IMap<int, object>) (this._gthis.dirtyPages) )) ))) ))) );
			{
				object key3 = keys;
				while (global::haxe.lang.Runtime.toBool(global::haxe.lang.Runtime.callField(key3, "hasNext", 407283053, null))) {
					int key4 = ((int) (global::haxe.lang.Runtime.toInt(global::haxe.lang.Runtime.callField(key3, "next", 1224901875, null))) );
					((global::hxbk.storage.Page) ((((global::haxe.ds.IntMap<object>) (global::haxe.ds.IntMap<object>.__hx_cast<object>(((global::haxe.ds.IntMap) (((global::haxe.IMap<int, object>) (this._gthis.dirtyPages) )) ))) ).@get(key4)).@value) ).cleanse();
				}
				
			}
			
			this._gthis.dirtyPages = new global::haxe.ds.IntMap<object>();
			return ((global::tink.core._Future.FutureObject<object>) (new global::tink.core._Future.SyncFuture<object>(((global::tink.core._Lazy.LazyObject<object>) (new global::tink.core._Lazy.LazyConst<object>(((object) (global::tink.core.TinkNoise.Noise) ))) ))) );
		}
		
		
		public global::hxbk.storage.Book _gthis;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace hxbk.storage {
	public class Book_commit_197__Fun : global::haxe.lang.Function {
		
		public Book_commit_197__Fun(global::hxbk.storage.Book _gthis) : base(1, 0) {
			this._gthis = _gthis;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			int key2 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float1) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn1)) )) );
			return ((global::hxbk.storage.Page) ((((global::haxe.ds.IntMap<object>) (global::haxe.ds.IntMap<object>.__hx_cast<object>(((global::haxe.ds.IntMap) (((global::haxe.IMap<int, object>) (this._gthis.dirtyPages) )) ))) ).@get(key2)).@value) );
		}
		
		
		public global::hxbk.storage.Book _gthis;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace hxbk.storage {
	public class Book_create_209__Fun : global::haxe.lang.Function {
		
		public Book_create_209__Fun(global::tink.core.SignalTrigger<object> emitter) : base(1, 0) {
			this.emitter = emitter;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				object result = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
				{
					global::tink.core._Callback.CallbackList_Impl_.invoke<object>(((global::Array<object>) (this.emitter.handlers) ), ((object) (result) ));
					global::haxe.Log.trace.__hx_invoke2_o(default(double), global::haxe.lang.Runtime.concat("result: ", global::Std.@string(result)), default(double), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"create", "hxbk.storage.Book", "src/hxbk/storage/Book.hx"}, new int[]{1981972957}, new double[]{((double) (211) )}));
					global::haxe.Log.trace.__hx_invoke2_o(default(double), global::haxe.CallStack.toString(global::haxe.CallStack.callStack().slice(0, new global::haxe.lang.Null<int>(5, true))), default(double), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"create", "hxbk.storage.Book", "src/hxbk/storage/Book.hx"}, new int[]{1981972957}, new double[]{((double) (212) )}));
				}
				
				return null;
			}
		}
		
		
		public global::tink.core.SignalTrigger<object> emitter;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace hxbk.storage {
	public class Book_create_214__Fun : global::haxe.lang.Function {
		
		public Book_create_214__Fun(int depth1) : base(1, 0) {
			this.depth1 = depth1;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::hxbk.storage.Page page = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::hxbk.storage.Page) (((object) (__fn_float1) )) )) : (((global::hxbk.storage.Page) (__fn_dyn1) )) );
			return new global::haxe.lang.DynamicObject(new int[]{1246878287}, new object[]{page}, new int[]{1462366467}, new double[]{((double) (this.depth1) )});
		}
		
		
		public int depth1;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace hxbk.storage {
	public class Book_create_224__Fun : global::haxe.lang.Function {
		
		public Book_create_224__Fun(global::haxe.ds.BalancedTree<int, object> recordTree, int[] index) : base(1, 0) {
			this.recordTree = recordTree;
			this.index = index;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::hxbk.storage.Record record = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::hxbk.storage.Record) (((object) (__fn_float1) )) )) : (((global::hxbk.storage.Record) (__fn_dyn1) )) );
			this.recordTree.@set(this.index[0]++, record);
			return null;
		}
		
		
		public global::haxe.ds.BalancedTree<int, object> recordTree;
		
		public int[] index;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace hxbk.storage {
	public class Book_create_233__Fun : global::haxe.lang.Function {
		
		public Book_create_233__Fun(global::Array<int> sizes, global::haxe.lang.Function result1, global::Array<object> records, int recordSize, int pageNo, global::haxe.lang.Function emit, bool[] done) : base(1, 0) {
			this.sizes = sizes;
			this.result1 = result1;
			this.records = records;
			this.recordSize = recordSize;
			this.pageNo = pageNo;
			this.emit = emit;
			this.done = done;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				global::hxbk.storage.Page page1 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::hxbk.storage.Page) (((object) (__fn_float1) )) )) : (((global::hxbk.storage.Page) (__fn_dyn1) )) );
				if (page1.create(this.records)) {
					object tmp1 = ((object) (this.result1.__hx_invoke1_o(default(double), page1)) );
					this.emit.__hx_invoke1_o(default(double), tmp1);
					this.done[0] = true;
					global::haxe.Log.trace.__hx_invoke2_o(default(double), "done", default(double), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"create", "hxbk.storage.Book", "src/hxbk/storage/Book.hx"}, new int[]{1981972957}, new double[]{((double) (237) )}));
				}
				else {
					int @value = page1.get_size();
					throw global::haxe.lang.HaxeException.wrap(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("This should never happen. (", global::haxe.format.JsonPrinter.print(((object) (new global::haxe.lang.DynamicObject(new int[]{2094598290}, new object[]{this.sizes}, new int[]{1427864240, 1621516274, 1714983024}, new double[]{((double) (@value) ), ((double) (this.recordSize) ), ((double) (this.pageNo) )})) ), null, null)), ")"));
				}
				
				return null;
			}
		}
		
		
		public global::Array<int> sizes;
		
		public global::haxe.lang.Function result1;
		
		public global::Array<object> records;
		
		public int recordSize;
		
		public int pageNo;
		
		public global::haxe.lang.Function emit;
		
		public bool[] done;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace hxbk.storage {
	public class Book_create_259__Fun : global::haxe.lang.Function {
		
		public Book_create_259__Fun() : base(2, 0) {
		}
		
		
		public static global::hxbk.storage.Book_create_259__Fun __hx_current;
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			unchecked {
				global::Array aggregate = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (((global::Array) (((object) (__fn_float2) )) )) : (((global::Array) (__fn_dyn2) )) );
				int current = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float1) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn1)) )) );
				global::Array<object> tmpAggregate = new global::Array<object>(new object[]{});
				{
					int _g1 = 0;
					while (( _g1 < ((int) (global::haxe.lang.Runtime.getField_f(aggregate, "length", 520590566, true)) ) )) {
						object array = aggregate[_g1];
						 ++ _g1;
						int middle = ((int) (( ((double) (global::haxe.lang.Runtime.toDouble(global::haxe.lang.Runtime.getField(array, "length", 520590566, true))) ) / ((double) (2) ) )) );
						global::Array<object> a1 = ( (( middle > 0 )) ? (((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (((object) (global::haxe.lang.Runtime.callField(array, "slice", 2127021138, new object[]{0, middle})) )) ))) )) : (((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (array) ))) )) );
						global::Array<object> b = ( (( middle > 0 )) ? (((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (((object) (global::haxe.lang.Runtime.callField(array, "slice", 2127021138, new object[]{middle})) )) ))) )) : (new global::Array<object>(new object[]{})) );
						if (( a1.length != 0 )) {
							tmpAggregate.push(a1);
						}
						
						if (( b.length != 0 )) {
							tmpAggregate.push(b);
						}
						
					}
					
				}
				
				return tmpAggregate;
			}
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace hxbk.storage {
	public class Book___hx_ctor_hxbk_storage_Book_100__Fun : global::haxe.lang.Function {
		
		public Book___hx_ctor_hxbk_storage_Book_100__Fun(global::hxbk.storage.Book __hx_this) : base(1, 0) {
			this.__hx_this = __hx_this;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::haxe.io.Bytes _b = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.io.Bytes) (((object) (__fn_float1) )) )) : (((global::haxe.io.Bytes) (__fn_dyn1) )) );
			global::haxe.io.Bytes b = _b;
			{
				int _g = 0;
				global::Array<object> _g1 = this.__hx_this.deserializationHooks;
				while (( _g < _g1.length )) {
					global::haxe.lang.Function hook = ((global::haxe.lang.Function) (_g1[_g]) );
					 ++ _g;
					b = ((global::haxe.io.Bytes) (hook.__hx_invoke1_o(default(double), b)) );
				}
				
			}
			
			return b;
		}
		
		
		public global::hxbk.storage.Book __hx_this;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace hxbk.storage {
	public class Book___hx_ctor_hxbk_storage_Book_92__Fun : global::haxe.lang.Function {
		
		public Book___hx_ctor_hxbk_storage_Book_92__Fun(global::hxbk.storage.Book __hx_this) : base(1, 0) {
			this.__hx_this = __hx_this;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::haxe.io.Bytes _b = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.io.Bytes) (((object) (__fn_float1) )) )) : (((global::haxe.io.Bytes) (__fn_dyn1) )) );
			global::haxe.io.Bytes b = _b;
			{
				int _g = 0;
				global::Array<object> _g1 = this.__hx_this.serializationHooks;
				while (( _g < _g1.length )) {
					global::haxe.lang.Function hook = ((global::haxe.lang.Function) (_g1[_g]) );
					 ++ _g;
					b = ((global::haxe.io.Bytes) (hook.__hx_invoke1_o(default(double), b)) );
				}
				
			}
			
			return b;
		}
		
		
		public global::hxbk.storage.Book __hx_this;
		
	}
}


