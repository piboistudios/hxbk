// Generated by Haxe 4.0.0-rc.2+77068e10c

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace hxbk.storage {
	public class Record : global::haxe.lang.HxObject {
		
		public Record(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public Record(object d) {
			global::hxbk.storage.Record.__hx_ctor_hxbk_storage_Record(this, d);
		}
		
		
		protected static void __hx_ctor_hxbk_storage_Record(global::hxbk.storage.Record __hx_this, object d) {
			unchecked {
				__hx_this.index = -1;
				__hx_this.data = d;
			}
		}
		
		
		public int index;
		
		public object data;
		
		public virtual void hxSerialize(global::haxe.Serializer s) {
			s.serialize(this.index);
			s.serialize(this.data);
		}
		
		
		public virtual void hxUnserialize(global::haxe.Unserializer u) {
			try {
				this.index = ((int) (global::haxe.lang.Runtime.toInt(u.unserialize())) );
				this.data = u.unserialize();
			}
			catch (global::System.Exception catchallException){
				global::haxe.lang.Exceptions.exception = catchallException;
				object e = ( (( catchallException is global::haxe.lang.HaxeException )) ? (((global::haxe.lang.HaxeException) (catchallException) ).obj) : ((object) (catchallException) ) );
				throw global::haxe.lang.HaxeException.wrap(e);
			}
			
			
		}
		
		
		public override double __hx_setField_f(string field, int hash, double @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1113806378:
					{
						this.data = ((object) (@value) );
						return @value;
					}
					
					
					case 1041537810:
					{
						this.index = ((int) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField_f(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1113806378:
					{
						this.data = ((object) (@value) );
						return @value;
					}
					
					
					case 1041537810:
					{
						this.index = ((int) (global::haxe.lang.Runtime.toInt(@value)) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 112843575:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "hxUnserialize", 112843575)) );
					}
					
					
					case 336134320:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "hxSerialize", 336134320)) );
					}
					
					
					case 1113806378:
					{
						return this.data;
					}
					
					
					case 1041537810:
					{
						return this.index;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override double __hx_getField_f(string field, int hash, bool throwErrors, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1113806378:
					{
						return ((double) (global::haxe.lang.Runtime.toDouble(this.data)) );
					}
					
					
					case 1041537810:
					{
						return ((double) (this.index) );
					}
					
					
					default:
					{
						return base.__hx_getField_f(field, hash, throwErrors, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, object[] dynargs) {
			unchecked {
				switch (hash) {
					case 112843575:
					{
						this.hxUnserialize(((global::haxe.Unserializer) (dynargs[0]) ));
						break;
					}
					
					
					case 336134320:
					{
						this.hxSerialize(((global::haxe.Serializer) (dynargs[0]) ));
						break;
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
		public override void __hx_getFields(global::Array<object> baseArr) {
			baseArr.push("data");
			baseArr.push("index");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}


