// Generated by Haxe 4.0.0-rc.2+77068e10c

#pragma warning disable 109, 114, 219, 429, 168, 162
public class RunTests : global::haxe.lang.HxObject {
	
	public static void Main(){
		global::cs.Boot.init();
		{
			global::RunTests.main();
			global::haxe.EntryPoint.run();
		}
	}
	public RunTests(global::haxe.lang.EmptyObject empty) {
	}
	
	
	public RunTests() {
		global::RunTests.__hx_ctor__RunTests(this);
	}
	
	
	protected static void __hx_ctor__RunTests(global::RunTests __hx_this) {
	}
	
	
	public static void main() {
		global::tink.RunLoop.create(( (( global::RunTests_main_21__Fun.__hx_current != null )) ? (global::RunTests_main_21__Fun.__hx_current) : (global::RunTests_main_21__Fun.__hx_current = ((global::RunTests_main_21__Fun) (new global::RunTests_main_21__Fun()) )) ));
	}
	
	
}



#pragma warning disable 109, 114, 219, 429, 168, 162
public class RunTests_main_21__Fun : global::haxe.lang.Function {
	
	public RunTests_main_21__Fun() : base(0, 0) {
	}
	
	
	public static global::RunTests_main_21__Fun __hx_current;
	
	public override object __hx_invoke0_o() {
		global::Array<object> this1 = new global::Array<object>(new object[]{new global::tink.unit.TestSuiteBuilder0(new global::MainSuite(), null)});
		global::tink.testrunner.Runner.run(((global::Array<object>) (this1) ), null, null).handle(((global::haxe.lang.Function) (new global::haxe.lang.Closure(typeof(global::tink.testrunner.Runner), "exit", 1126037278)) ));
		return null;
	}
	
	
}



#pragma warning disable 109, 114, 219, 429, 168, 162
public class MainSuite : global::haxe.lang.HxObject {
	
	public MainSuite(global::haxe.lang.EmptyObject empty) {
	}
	
	
	public MainSuite() {
		global::MainSuite.__hx_ctor__MainSuite(this);
	}
	
	
	protected static void __hx_ctor__MainSuite(global::MainSuite __hx_this) {
	}
	
	
	public virtual global::tink.unit._AssertionBuffer.Impl test_create(int iterations, global::tink.unit._AssertionBuffer.Impl asserts) {
		global::hxbk.Engine.start(new global::haxe.lang.DynamicObject(new int[]{1246881189}, new object[]{((object) ("test") )}, new int[]{}, new double[]{}));
		global::hxbk.storage.Book book = global::hxbk.storage.Book.open("test");
		global::haxe.lang.Function done = new global::MainSuite_test_create_44__Fun(book, asserts);
		global::tink.core.SignalTrigger<object> listener = global::tink.core._Signal.Signal_Impl_.trigger<object>();
		global::Array<object> tmp = global::hxbk.IteratorTools.toArray(new global::IntIterator(0, iterations)).map<object>(((global::haxe.lang.Function) (( (( global::MainSuite_test_create_64__Fun.__hx_current != null )) ? (global::MainSuite_test_create_64__Fun.__hx_current) : (global::MainSuite_test_create_64__Fun.__hx_current = ((global::MainSuite_test_create_64__Fun) (new global::MainSuite_test_create_64__Fun()) )) )) ));
		book.create(tmp, listener, default(global::haxe.lang.Null<int>));
		global::Array<object> pages2 = new global::Array<object>(new object[]{});
		bool[] done1 = new bool[]{false};
		global::tink.core._Callback.CallbackList_Impl_.@add<object>(((global::Array<object>) (listener.handlers) ), ((global::haxe.lang.Function) (new global::MainSuite_test_create_67__Fun(pages2, done1, asserts)) ));
		global::tink.runloop.Worker worker = global::tink.RunLoop.current.createSlave();
		worker.work(global::tink.runloop._Task.Task_Impl_.ofFunction(new global::MainSuite_test_create_77__Fun(done1)));
		return asserts;
	}
	
	
	public virtual global::tink.unit._AssertionBuffer.Impl test_dump(global::tink.unit._AssertionBuffer.Impl asserts) {
		unchecked {
			global::hxbk.Engine.start(new global::haxe.lang.DynamicObject(new int[]{1246881189}, new object[]{((object) ("test") )}, new int[]{}, new double[]{}));
			global::hxbk.storage.Book book = global::hxbk.storage.Book.open("test");
			global::sys.io.FileOutput dump = global::sys.io.File.write("./dump.json", default(global::haxe.lang.Null<bool>));
			dump.writeString("[", null);
			global::haxe.Log.trace.__hx_invoke2_o(default(double), "Opening", default(double), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"test_dump", "MainSuite", "src/RunTests.hx"}, new int[]{1981972957}, new double[]{((double) (88) )}));
			dump.flush();
			dump.close();
			global::Array<object> tmp = global::hxbk.IteratorTools.toArray(new global::IntIterator(0, book.get_pages())).map<object>(((global::haxe.lang.Function) (new global::MainSuite_test_dump_91__Fun(book)) ));
			global::tink.core._Lazy.LazyObject<object> p = ((global::tink.core._Lazy.LazyObject<object>) (new global::tink.core._Lazy.LazyFunc<object>(((global::haxe.lang.Function) (new global::MainSuite_test_dump_102__Fun_0(asserts)) ))) );
			global::tink.core._Promise.Promise_Impl_.iterate<object, bool>(((object) (tmp) ), ((global::haxe.lang.Function) (new global::MainSuite_test_dump_93__Fun(book)) ), ((global::tink.core._Future.FutureObject<object>) (global::tink.core._Future.Future_Impl_.async<object>(((global::haxe.lang.Function) (new global::MainSuite_test_dump_102__Fun(p)) ), new global::haxe.lang.Null<bool>(true, true))) ), default(global::haxe.lang.Null<bool>));
			return asserts;
		}
	}
	
	
	public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
		unchecked {
			switch (hash) {
				case 727213953:
				{
					return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "test_dump", 727213953)) );
				}
				
				
				case 1509834377:
				{
					return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "test_create", 1509834377)) );
				}
				
				
				default:
				{
					return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
				}
				
			}
			
		}
	}
	
	
	public override object __hx_invokeField(string field, int hash, object[] dynargs) {
		unchecked {
			switch (hash) {
				case 727213953:
				{
					return this.test_dump(((global::tink.unit._AssertionBuffer.Impl) (dynargs[0]) ));
				}
				
				
				case 1509834377:
				{
					return this.test_create(((int) (global::haxe.lang.Runtime.toInt(dynargs[0])) ), ((global::tink.unit._AssertionBuffer.Impl) (dynargs[1]) ));
				}
				
				
				default:
				{
					return base.__hx_invokeField(field, hash, dynargs);
				}
				
			}
			
		}
	}
	
	
}



#pragma warning disable 109, 114, 219, 429, 168, 162
public class MainSuite_test_create_57__Fun : global::haxe.lang.Function {
	
	public MainSuite_test_create_57__Fun(global::tink.unit._AssertionBuffer.Impl asserts) : base(0, 0) {
		this.asserts = asserts;
	}
	
	
	public override object __hx_invoke0_o() {
		global::tink.core._Callback.CallbackList_Impl_.invoke<object>(((global::Array<object>) (((global::tink.unit._AssertionBuffer.Impl) (this.asserts) ).trigger.handlers) ), ((object) (global::tink.streams.Yield.End) ));
		return ((global::tink.unit._AssertionBuffer.Impl) (this.asserts) );
	}
	
	
	public global::tink.unit._AssertionBuffer.Impl asserts;
	
}



#pragma warning disable 109, 114, 219, 429, 168, 162
public class MainSuite_test_create_44__Fun : global::haxe.lang.Function {
	
	public MainSuite_test_create_44__Fun(global::hxbk.storage.Book book, global::tink.unit._AssertionBuffer.Impl asserts) : base(1, 0) {
		this.book = book;
		this.asserts = asserts;
	}
	
	
	public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
		unchecked {
			global::hxbk.operations.Result result = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::hxbk.operations.Result) (((object) (__fn_float1) )) )) : (((global::hxbk.operations.Result) (__fn_dyn1) )) );
			global::haxe.Log.trace.__hx_invoke2_o(default(double), "done", default(double), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"test_create", "MainSuite", "src/RunTests.hx"}, new int[]{1981972957}, new double[]{((double) (45) )}));
			global::Array<object> aggregate = new global::Array<object>(new object[]{});
			switch (result._hx_index) {
				case 0:
				{
					global::Array<object> pages = ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (( result as global::hxbk.operations.Result_Continue ).result) ))) );
					{
						aggregate = aggregate.concat(pages);
						global::haxe.Log.trace.__hx_invoke2_o(default(double), "done", default(double), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"test_create", "MainSuite", "src/RunTests.hx"}, new int[]{1981972957}, new double[]{((double) (51) )}));
						this.book.commit();
					}
					
					break;
				}
				
				
				case 1:
				{
					global::Array<object> pages1 = ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (( result as global::hxbk.operations.Result_Done ).result) ))) );
					{
						aggregate = aggregate.concat(pages1);
						{
							string lh = global::haxe.format.JsonPrinter.print(((object) (aggregate) ), null, null);
							string rh = null;
							global::tink.streams.Yield data = global::tink.streams.Yield.Data(new global::tink.testrunner.Assertion(global::tink.testrunner._Assertion.AssertionResult_Impl_.ofBool(( lh != rh )), global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("haxe.Json.stringify(aggregate) != null", " ("), global::tink.unit.Assert.stringify(lh)), " "), "!="), " "), global::tink.unit.Assert.stringify(rh)), ")"), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"test_create", "MainSuite", "src/RunTests.hx"}, new int[]{1981972957}, new double[]{((double) (55) )})));
							global::tink.core._Callback.CallbackList_Impl_.invoke<object>(((global::Array<object>) (((global::tink.unit._AssertionBuffer.Impl) (this.asserts) ).trigger.handlers) ), ((object) (data) ));
						}
						
						this.book.commit().handle(global::tink.core._Callback.Callback_Impl_.fromNiladic<object>(((global::haxe.lang.Function) (new global::MainSuite_test_create_57__Fun(this.asserts)) )));
					}
					
					break;
				}
				
				
			}
			
			return null;
		}
	}
	
	
	public global::hxbk.storage.Book book;
	
	public global::tink.unit._AssertionBuffer.Impl asserts;
	
}



#pragma warning disable 109, 114, 219, 429, 168, 162
public class MainSuite_test_create_64__Fun : global::haxe.lang.Function {
	
	public MainSuite_test_create_64__Fun() : base(1, 0) {
	}
	
	
	public static global::MainSuite_test_create_64__Fun __hx_current;
	
	public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
		int _ = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float1) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn1)) )) );
		return new global::hxbk.storage.Record(((object) (new global::haxe.lang.DynamicObject(new int[]{1224700491}, new object[]{"test"}, new int[]{}, new double[]{})) ));
	}
	
	
}



#pragma warning disable 109, 114, 219, 429, 168, 162
public class MainSuite_test_create_67__Fun : global::haxe.lang.Function {
	
	public MainSuite_test_create_67__Fun(global::Array<object> pages2, bool[] done1, global::tink.unit._AssertionBuffer.Impl asserts) : base(1, 0) {
		this.pages2 = pages2;
		this.done1 = done1;
		this.asserts = asserts;
	}
	
	
	public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
		unchecked {
			object result1 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((object) (__fn_float1) )) : (((object) (__fn_dyn1) )) );
			if (( ((int) (global::haxe.lang.Runtime.getField_f(result1, "depth", 1462366467, true)) ) == 0 )) {
				this.done1[0] = true;
				global::tink.core._Callback.CallbackList_Impl_.invoke<object>(((global::Array<object>) (((global::tink.unit._AssertionBuffer.Impl) (this.asserts) ).trigger.handlers) ), ((object) (global::tink.streams.Yield.End) ));
			}
			else {
				this.pages2.push(((global::hxbk.storage.Page) (global::haxe.lang.Runtime.getField(result1, "page", 1246878287, true)) ));
				{
					global::hxbk.storage.Page lh1 = ((global::hxbk.storage.Page) (global::haxe.lang.Runtime.getField(result1, "page", 1246878287, true)) );
					global::hxbk.storage.Page rh1 = null;
					global::tink.streams.Yield data1 = global::tink.streams.Yield.Data(new global::tink.testrunner.Assertion(global::tink.testrunner._Assertion.AssertionResult_Impl_.ofBool(( lh1 != rh1 )), global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("result.page != null", " ("), global::tink.unit.Assert.stringify(lh1)), " "), "!="), " "), global::tink.unit.Assert.stringify(rh1)), ")"), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"test_create", "MainSuite", "src/RunTests.hx"}, new int[]{1981972957}, new double[]{((double) (73) )})));
					global::tink.core._Callback.CallbackList_Impl_.invoke<object>(((global::Array<object>) (((global::tink.unit._AssertionBuffer.Impl) (this.asserts) ).trigger.handlers) ), ((object) (data1) ));
				}
				
			}
			
			return null;
		}
	}
	
	
	public global::Array<object> pages2;
	
	public bool[] done1;
	
	public global::tink.unit._AssertionBuffer.Impl asserts;
	
}



#pragma warning disable 109, 114, 219, 429, 168, 162
public class MainSuite_test_create_77__Fun : global::haxe.lang.Function {
	
	public MainSuite_test_create_77__Fun(bool[] done1) : base(0, 0) {
		this.done1 = done1;
	}
	
	
	public override object __hx_invoke0_o() {
		if ( ! (this.done1[0]) ) {
			return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(typeof(global::hxbk.operations.Result), "Continue", 192584839)) );
		}
		else {
			return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(typeof(global::hxbk.operations.Result), "Done", 759635106)) );
		}
		
	}
	
	
	public bool[] done1;
	
}



#pragma warning disable 109, 114, 219, 429, 168, 162
public class MainSuite_test_dump_91__Fun : global::haxe.lang.Function {
	
	public MainSuite_test_dump_91__Fun(global::hxbk.storage.Book book) : base(1, 0) {
		this.book = book;
	}
	
	
	public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
		int pageNo = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((int) (__fn_float1) )) : (((int) (global::haxe.lang.Runtime.toInt(__fn_dyn1)) )) );
		global::tink.core._Future.FutureObject<object> ret = ((global::tink.core._Future.FutureObject<object>) (this.book.read(pageNo)) ).map<object>(((global::haxe.lang.Function) (new global::haxe.lang.Closure(typeof(global::tink.core.Outcome), "Success", 94326179)) ));
		return ret.gather();
	}
	
	
	public global::hxbk.storage.Book book;
	
}



#pragma warning disable 109, 114, 219, 429, 168, 162
public class MainSuite_test_dump_102__Fun_0 : global::haxe.lang.Function {
	
	public MainSuite_test_dump_102__Fun_0(global::tink.unit._AssertionBuffer.Impl asserts) : base(0, 0) {
		this.asserts = asserts;
	}
	
	
	public override object __hx_invoke0_o() {
		unchecked {
			global::haxe.Log.trace.__hx_invoke2_o(default(double), "Done", default(double), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"test_dump", "MainSuite", "src/RunTests.hx"}, new int[]{1981972957}, new double[]{((double) (103) )}));
			global::sys.io.FileOutput dump1 = global::sys.io.File.append("./dump.json", default(global::haxe.lang.Null<bool>));
			dump1.writeString("]", null);
			dump1.flush();
			dump1.close();
			global::tink.core.FutureTrigger<bool> done = new global::tink.core.FutureTrigger<bool>();
			global::tink.core._Callback.CallbackList_Impl_.invoke<object>(((global::Array<object>) (((global::tink.unit._AssertionBuffer.Impl) (this.asserts) ).trigger.handlers) ), ((object) (global::tink.streams.Yield.End) ));
			done.trigger(true);
			return ((global::tink.core._Future.FutureObject<bool>) (done) );
		}
	}
	
	
	public global::tink.unit._AssertionBuffer.Impl asserts;
	
}



#pragma warning disable 109, 114, 219, 429, 168, 162
public class MainSuite_test_dump_93__Fun : global::haxe.lang.Function {
	
	public MainSuite_test_dump_93__Fun(global::hxbk.storage.Book book) : base(1, 0) {
		this.book = book;
	}
	
	
	public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
		unchecked {
			global::hxbk.storage.Page page = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::hxbk.storage.Page) (((object) (__fn_float1) )) )) : (((global::hxbk.storage.Page) (__fn_dyn1) )) );
			global::sys.io.FileOutput dump2 = global::sys.io.File.append("./dump.json", default(global::haxe.lang.Null<bool>));
			global::haxe.Log.trace.__hx_invoke2_o(default(double), "Adding tree", default(double), new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"test_dump", "MainSuite", "src/RunTests.hx"}, new int[]{1981972957}, new double[]{((double) (95) )}));
			dump2.writeString(global::haxe.lang.Runtime.concat(global::haxe.format.JsonPrinter.print(((object) (page.records) ), null, null), (( (( ((int) (((int[]) (page.number) )[0]) ) != ( this.book.get_pages() - 1 ) )) ? (",") : ("") ))), null);
			dump2.flush();
			dump2.close();
			return ((global::tink.core._Future.FutureObject<object>) (new global::tink.core._Future.SyncFuture<object>(((global::tink.core._Lazy.LazyObject<object>) (new global::tink.core._Lazy.LazyConst<object>(((object) (global::tink.core.Outcome.Success(global::haxe.ds.Option.None)) ))) ))) );
		}
	}
	
	
	public global::hxbk.storage.Book book;
	
}



#pragma warning disable 109, 114, 219, 429, 168, 162
public class MainSuite_test_dump_102__Fun : global::haxe.lang.Function {
	
	public MainSuite_test_dump_102__Fun(global::tink.core._Lazy.LazyObject<object> p) : base(1, 0) {
		this.p = p;
	}
	
	
	public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
		global::haxe.lang.Function cb = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float1) )) )) : (((global::haxe.lang.Function) (__fn_dyn1) )) );
		((global::tink.core._Future.FutureObject<object>) (global::tink.core._Future.FutureObject__Statics_.__hx_cast<object>(((global::tink.core._Future.FutureObject) (((global::tink.core._Lazy.LazyObject<object>) (this.p) ).@get()) ))) ).handle(cb);
		return null;
	}
	
	
	public global::tink.core._Lazy.LazyObject<object> p;
	
}


