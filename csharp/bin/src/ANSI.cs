// Generated by Haxe 4.0.0-rc.2+77068e10c

#pragma warning disable 109, 114, 219, 429, 168, 162
public class Attribute : global::haxe.lang.Enum {
	
	protected Attribute(int index) : base(index) {
	}
	
	
	public static readonly global::Attribute Off = new global::Attribute_Off();
	
	public static readonly global::Attribute Bold = new global::Attribute_Bold();
	
	public static readonly global::Attribute Underline = new global::Attribute_Underline();
	
	public static readonly global::Attribute Blink = new global::Attribute_Blink();
	
	public static readonly global::Attribute ReverseVideo = new global::Attribute_ReverseVideo();
	
	public static readonly global::Attribute Concealed = new global::Attribute_Concealed();
	
	public static readonly global::Attribute BoldOff = new global::Attribute_BoldOff();
	
	public static readonly global::Attribute UnderlineOff = new global::Attribute_UnderlineOff();
	
	public static readonly global::Attribute BlinkOff = new global::Attribute_BlinkOff();
	
	public static readonly global::Attribute NormalVideo = new global::Attribute_NormalVideo();
	
	public static readonly global::Attribute ConcealedOff = new global::Attribute_ConcealedOff();
	
	public static readonly global::Attribute Black = new global::Attribute_Black();
	
	public static readonly global::Attribute Red = new global::Attribute_Red();
	
	public static readonly global::Attribute Green = new global::Attribute_Green();
	
	public static readonly global::Attribute Yellow = new global::Attribute_Yellow();
	
	public static readonly global::Attribute Blue = new global::Attribute_Blue();
	
	public static readonly global::Attribute Magenta = new global::Attribute_Magenta();
	
	public static readonly global::Attribute Cyan = new global::Attribute_Cyan();
	
	public static readonly global::Attribute White = new global::Attribute_White();
	
	public static readonly global::Attribute DefaultForeground = new global::Attribute_DefaultForeground();
	
	public static readonly global::Attribute BlackBack = new global::Attribute_BlackBack();
	
	public static readonly global::Attribute RedBack = new global::Attribute_RedBack();
	
	public static readonly global::Attribute GreenBack = new global::Attribute_GreenBack();
	
	public static readonly global::Attribute YellowBack = new global::Attribute_YellowBack();
	
	public static readonly global::Attribute BlueBack = new global::Attribute_BlueBack();
	
	public static readonly global::Attribute MagentaBack = new global::Attribute_MagentaBack();
	
	public static readonly global::Attribute CyanBack = new global::Attribute_CyanBack();
	
	public static readonly global::Attribute WhiteBack = new global::Attribute_WhiteBack();
	
	public static readonly global::Attribute DefaultBackground = new global::Attribute_DefaultBackground();
	
	protected static readonly string[] __hx_constructs = new string[]{"Off", "Bold", "Underline", "Blink", "ReverseVideo", "Concealed", "BoldOff", "UnderlineOff", "BlinkOff", "NormalVideo", "ConcealedOff", "Black", "Red", "Green", "Yellow", "Blue", "Magenta", "Cyan", "White", "DefaultForeground", "BlackBack", "RedBack", "GreenBack", "YellowBack", "BlueBack", "MagentaBack", "CyanBack", "WhiteBack", "DefaultBackground"};
	
}



#pragma warning disable 109, 114, 219, 429, 168, 162
public sealed class Attribute_Off : global::Attribute {
	
	public Attribute_Off() : base(0) {
	}
	
	
	public override string getTag() {
		return "Off";
	}
	
	
}



#pragma warning disable 109, 114, 219, 429, 168, 162
public sealed class Attribute_Bold : global::Attribute {
	
	public Attribute_Bold() : base(1) {
	}
	
	
	public override string getTag() {
		return "Bold";
	}
	
	
}



#pragma warning disable 109, 114, 219, 429, 168, 162
public sealed class Attribute_Underline : global::Attribute {
	
	public Attribute_Underline() : base(2) {
	}
	
	
	public override string getTag() {
		return "Underline";
	}
	
	
}



#pragma warning disable 109, 114, 219, 429, 168, 162
public sealed class Attribute_Blink : global::Attribute {
	
	public Attribute_Blink() : base(3) {
	}
	
	
	public override string getTag() {
		return "Blink";
	}
	
	
}



#pragma warning disable 109, 114, 219, 429, 168, 162
public sealed class Attribute_ReverseVideo : global::Attribute {
	
	public Attribute_ReverseVideo() : base(4) {
	}
	
	
	public override string getTag() {
		return "ReverseVideo";
	}
	
	
}



#pragma warning disable 109, 114, 219, 429, 168, 162
public sealed class Attribute_Concealed : global::Attribute {
	
	public Attribute_Concealed() : base(5) {
	}
	
	
	public override string getTag() {
		return "Concealed";
	}
	
	
}



#pragma warning disable 109, 114, 219, 429, 168, 162
public sealed class Attribute_BoldOff : global::Attribute {
	
	public Attribute_BoldOff() : base(6) {
	}
	
	
	public override string getTag() {
		return "BoldOff";
	}
	
	
}



#pragma warning disable 109, 114, 219, 429, 168, 162
public sealed class Attribute_UnderlineOff : global::Attribute {
	
	public Attribute_UnderlineOff() : base(7) {
	}
	
	
	public override string getTag() {
		return "UnderlineOff";
	}
	
	
}



#pragma warning disable 109, 114, 219, 429, 168, 162
public sealed class Attribute_BlinkOff : global::Attribute {
	
	public Attribute_BlinkOff() : base(8) {
	}
	
	
	public override string getTag() {
		return "BlinkOff";
	}
	
	
}



#pragma warning disable 109, 114, 219, 429, 168, 162
public sealed class Attribute_NormalVideo : global::Attribute {
	
	public Attribute_NormalVideo() : base(9) {
	}
	
	
	public override string getTag() {
		return "NormalVideo";
	}
	
	
}



#pragma warning disable 109, 114, 219, 429, 168, 162
public sealed class Attribute_ConcealedOff : global::Attribute {
	
	public Attribute_ConcealedOff() : base(10) {
	}
	
	
	public override string getTag() {
		return "ConcealedOff";
	}
	
	
}



#pragma warning disable 109, 114, 219, 429, 168, 162
public sealed class Attribute_Black : global::Attribute {
	
	public Attribute_Black() : base(11) {
	}
	
	
	public override string getTag() {
		return "Black";
	}
	
	
}



#pragma warning disable 109, 114, 219, 429, 168, 162
public sealed class Attribute_Red : global::Attribute {
	
	public Attribute_Red() : base(12) {
	}
	
	
	public override string getTag() {
		return "Red";
	}
	
	
}



#pragma warning disable 109, 114, 219, 429, 168, 162
public sealed class Attribute_Green : global::Attribute {
	
	public Attribute_Green() : base(13) {
	}
	
	
	public override string getTag() {
		return "Green";
	}
	
	
}



#pragma warning disable 109, 114, 219, 429, 168, 162
public sealed class Attribute_Yellow : global::Attribute {
	
	public Attribute_Yellow() : base(14) {
	}
	
	
	public override string getTag() {
		return "Yellow";
	}
	
	
}



#pragma warning disable 109, 114, 219, 429, 168, 162
public sealed class Attribute_Blue : global::Attribute {
	
	public Attribute_Blue() : base(15) {
	}
	
	
	public override string getTag() {
		return "Blue";
	}
	
	
}



#pragma warning disable 109, 114, 219, 429, 168, 162
public sealed class Attribute_Magenta : global::Attribute {
	
	public Attribute_Magenta() : base(16) {
	}
	
	
	public override string getTag() {
		return "Magenta";
	}
	
	
}



#pragma warning disable 109, 114, 219, 429, 168, 162
public sealed class Attribute_Cyan : global::Attribute {
	
	public Attribute_Cyan() : base(17) {
	}
	
	
	public override string getTag() {
		return "Cyan";
	}
	
	
}



#pragma warning disable 109, 114, 219, 429, 168, 162
public sealed class Attribute_White : global::Attribute {
	
	public Attribute_White() : base(18) {
	}
	
	
	public override string getTag() {
		return "White";
	}
	
	
}



#pragma warning disable 109, 114, 219, 429, 168, 162
public sealed class Attribute_DefaultForeground : global::Attribute {
	
	public Attribute_DefaultForeground() : base(19) {
	}
	
	
	public override string getTag() {
		return "DefaultForeground";
	}
	
	
}



#pragma warning disable 109, 114, 219, 429, 168, 162
public sealed class Attribute_BlackBack : global::Attribute {
	
	public Attribute_BlackBack() : base(20) {
	}
	
	
	public override string getTag() {
		return "BlackBack";
	}
	
	
}



#pragma warning disable 109, 114, 219, 429, 168, 162
public sealed class Attribute_RedBack : global::Attribute {
	
	public Attribute_RedBack() : base(21) {
	}
	
	
	public override string getTag() {
		return "RedBack";
	}
	
	
}



#pragma warning disable 109, 114, 219, 429, 168, 162
public sealed class Attribute_GreenBack : global::Attribute {
	
	public Attribute_GreenBack() : base(22) {
	}
	
	
	public override string getTag() {
		return "GreenBack";
	}
	
	
}



#pragma warning disable 109, 114, 219, 429, 168, 162
public sealed class Attribute_YellowBack : global::Attribute {
	
	public Attribute_YellowBack() : base(23) {
	}
	
	
	public override string getTag() {
		return "YellowBack";
	}
	
	
}



#pragma warning disable 109, 114, 219, 429, 168, 162
public sealed class Attribute_BlueBack : global::Attribute {
	
	public Attribute_BlueBack() : base(24) {
	}
	
	
	public override string getTag() {
		return "BlueBack";
	}
	
	
}



#pragma warning disable 109, 114, 219, 429, 168, 162
public sealed class Attribute_MagentaBack : global::Attribute {
	
	public Attribute_MagentaBack() : base(25) {
	}
	
	
	public override string getTag() {
		return "MagentaBack";
	}
	
	
}



#pragma warning disable 109, 114, 219, 429, 168, 162
public sealed class Attribute_CyanBack : global::Attribute {
	
	public Attribute_CyanBack() : base(26) {
	}
	
	
	public override string getTag() {
		return "CyanBack";
	}
	
	
}



#pragma warning disable 109, 114, 219, 429, 168, 162
public sealed class Attribute_WhiteBack : global::Attribute {
	
	public Attribute_WhiteBack() : base(27) {
	}
	
	
	public override string getTag() {
		return "WhiteBack";
	}
	
	
}



#pragma warning disable 109, 114, 219, 429, 168, 162
public sealed class Attribute_DefaultBackground : global::Attribute {
	
	public Attribute_DefaultBackground() : base(28) {
	}
	
	
	public override string getTag() {
		return "DefaultBackground";
	}
	
	
}



#pragma warning disable 109, 114, 219, 429, 168, 162
public class ANSI : global::haxe.lang.HxObject {
	
	static ANSI() {
		unchecked {
			global::ANSI.ESCAPE = "\u001b";
			global::ANSI.BELL = "\u0007";
			global::ANSI.CSI = global::haxe.lang.Runtime.concat("\u001b", "[");
			global::ANSI.attr = typeof(global::Attribute);
			object __temp_stmt34 = null;
			{
				global::haxe.ds.EnumValueMap<object, int> _g = new global::haxe.ds.EnumValueMap<object, int>();
				_g.@set(global::Attribute.Off, 0);
				_g.@set(global::Attribute.Bold, 1);
				_g.@set(global::Attribute.Underline, 4);
				_g.@set(global::Attribute.Blink, 5);
				_g.@set(global::Attribute.ReverseVideo, 7);
				_g.@set(global::Attribute.Concealed, 8);
				_g.@set(global::Attribute.BoldOff, 22);
				_g.@set(global::Attribute.UnderlineOff, 24);
				_g.@set(global::Attribute.BlinkOff, 25);
				_g.@set(global::Attribute.NormalVideo, 27);
				_g.@set(global::Attribute.ConcealedOff, 28);
				_g.@set(global::Attribute.Black, 30);
				_g.@set(global::Attribute.Red, 31);
				_g.@set(global::Attribute.Green, 32);
				_g.@set(global::Attribute.Yellow, 33);
				_g.@set(global::Attribute.Blue, 34);
				_g.@set(global::Attribute.Magenta, 35);
				_g.@set(global::Attribute.Cyan, 36);
				_g.@set(global::Attribute.White, 37);
				_g.@set(global::Attribute.DefaultForeground, 39);
				_g.@set(global::Attribute.BlackBack, 40);
				_g.@set(global::Attribute.RedBack, 41);
				_g.@set(global::Attribute.GreenBack, 42);
				_g.@set(global::Attribute.YellowBack, 43);
				_g.@set(global::Attribute.BlueBack, 44);
				_g.@set(global::Attribute.MagentaBack, 45);
				_g.@set(global::Attribute.CyanBack, 46);
				_g.@set(global::Attribute.WhiteBack, 47);
				_g.@set(global::Attribute.DefaultBackground, 49);
				__temp_stmt34 = _g;
			}
			
			object __temp_stmt33 = global::haxe.ds.EnumValueMap<object, object>.__hx_cast<object, int>(((global::haxe.ds.EnumValueMap) (__temp_stmt34) ));
			global::ANSI.values = ((global::haxe.ds.EnumValueMap<object, int>) (__temp_stmt33) );
			global::ANSI.@set = global::Reflect.makeVarArgs(((global::haxe.lang.Function) (new global::haxe.lang.Closure(typeof(global::ANSI), "aset", 1081429473)) ));
			global::ANSI.available = global::ANSI.detectSupport();
			global::ANSI.strip = false;
			global::ANSI.stripIfUnavailable = true;
			object __temp_stmt36 = null;
			{
				global::haxe.ds.StringMap<object> _g = new global::haxe.ds.StringMap<object>();
				object __temp_stmt37 = null;
				{
					string __temp_odecl1 = global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("\u001b", "["), "J");
					__temp_stmt37 = new global::haxe.lang.DynamicObject(new int[]{4997752, 5889761}, new object[]{"Erase from cursor to the end of display.", __temp_odecl1}, new int[]{}, new double[]{});
				}
				
				_g.@set("eraseDisplayToEnd", __temp_stmt37);
				object __temp_stmt38 = null;
				{
					string __temp_odecl2 = global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("\u001b", "["), "1J");
					__temp_stmt38 = new global::haxe.lang.DynamicObject(new int[]{4997752, 5889761}, new object[]{"Erase from the start of diplay to cursor (inclusive).", __temp_odecl2}, new int[]{}, new double[]{});
				}
				
				_g.@set("eraseDisplayToCursor", __temp_stmt38);
				object __temp_stmt39 = null;
				{
					string __temp_odecl3 = global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("\u001b", "["), "2J");
					__temp_stmt39 = new global::haxe.lang.DynamicObject(new int[]{4997752, 5889761}, new object[]{"Erase display and move cursor to the top-left.", __temp_odecl3}, new int[]{}, new double[]{});
				}
				
				_g.@set("eraseDisplay", __temp_stmt39);
				object __temp_stmt40 = null;
				{
					string __temp_odecl4 = global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("\u001b", "["), "K");
					__temp_stmt40 = new global::haxe.lang.DynamicObject(new int[]{4997752, 5889761}, new object[]{"Erase from cursor to the end of line.", __temp_odecl4}, new int[]{}, new double[]{});
				}
				
				_g.@set("eraseLineToEnd", __temp_stmt40);
				object __temp_stmt41 = null;
				{
					string __temp_odecl5 = global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("\u001b", "["), "1K");
					__temp_stmt41 = new global::haxe.lang.DynamicObject(new int[]{4997752, 5889761}, new object[]{"Erase from the start of line to cursor (inclusive).", __temp_odecl5}, new int[]{}, new double[]{});
				}
				
				_g.@set("eraseLineToCursor", __temp_stmt41);
				object __temp_stmt42 = null;
				{
					string __temp_odecl6 = global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("\u001b", "["), "2K");
					__temp_stmt42 = new global::haxe.lang.DynamicObject(new int[]{4997752, 5889761}, new object[]{"Erase line.", __temp_odecl6}, new int[]{}, new double[]{});
				}
				
				_g.@set("eraseLine", __temp_stmt42);
				object __temp_stmt43 = null;
				{
					string __temp_odecl7 = global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("\u001b", "["), "X");
					__temp_stmt43 = new global::haxe.lang.DynamicObject(new int[]{4997752, 5889761}, new object[]{"Erase one character.", __temp_odecl7}, new int[]{}, new double[]{});
				}
				
				_g.@set("eraseChar", __temp_stmt43);
				object __temp_stmt44 = null;
				{
					string __temp_odecl8 = global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("\u001b", "["), "#X");
					__temp_stmt44 = new global::haxe.lang.DynamicObject(new int[]{4997752, 5889761}, new object[]{"Erase # characters.", __temp_odecl8}, new int[]{}, new double[]{});
				}
				
				_g.@set("eraseChars", __temp_stmt44);
				object __temp_stmt45 = null;
				{
					string __temp_odecl9 = global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("\u001b", "["), "L");
					__temp_stmt45 = new global::haxe.lang.DynamicObject(new int[]{4997752, 5889761}, new object[]{"Insert one blank line.", __temp_odecl9}, new int[]{}, new double[]{});
				}
				
				_g.@set("insertLine", __temp_stmt45);
				object __temp_stmt46 = null;
				{
					string __temp_odecl10 = global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("\u001b", "["), "#L");
					__temp_stmt46 = new global::haxe.lang.DynamicObject(new int[]{4997752, 5889761}, new object[]{"Insert # blank lines.", __temp_odecl10}, new int[]{}, new double[]{});
				}
				
				_g.@set("insertLines", __temp_stmt46);
				object __temp_stmt47 = null;
				{
					string __temp_odecl11 = global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("\u001b", "["), "M");
					__temp_stmt47 = new global::haxe.lang.DynamicObject(new int[]{4997752, 5889761}, new object[]{"Delete one line.", __temp_odecl11}, new int[]{}, new double[]{});
				}
				
				_g.@set("deleteLine", __temp_stmt47);
				object __temp_stmt48 = null;
				{
					string __temp_odecl12 = global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("\u001b", "["), "#M");
					__temp_stmt48 = new global::haxe.lang.DynamicObject(new int[]{4997752, 5889761}, new object[]{"Delete # lines.", __temp_odecl12}, new int[]{}, new double[]{});
				}
				
				_g.@set("deleteLines", __temp_stmt48);
				object __temp_stmt49 = null;
				{
					string __temp_odecl13 = global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("\u001b", "["), "P");
					__temp_stmt49 = new global::haxe.lang.DynamicObject(new int[]{4997752, 5889761}, new object[]{"Delete one character.", __temp_odecl13}, new int[]{}, new double[]{});
				}
				
				_g.@set("deleteChar", __temp_stmt49);
				object __temp_stmt50 = null;
				{
					string __temp_odecl14 = global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("\u001b", "["), "#P");
					__temp_stmt50 = new global::haxe.lang.DynamicObject(new int[]{4997752, 5889761}, new object[]{"Delete # characters.", __temp_odecl14}, new int[]{}, new double[]{});
				}
				
				_g.@set("deleteChars", __temp_stmt50);
				object __temp_stmt51 = null;
				{
					string __temp_odecl15 = global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("\u001b", "["), "@");
					__temp_stmt51 = new global::haxe.lang.DynamicObject(new int[]{4997752, 5889761}, new object[]{"Insert one blank character.", __temp_odecl15}, new int[]{}, new double[]{});
				}
				
				_g.@set("insertChar", __temp_stmt51);
				object __temp_stmt52 = null;
				{
					string __temp_odecl16 = global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("\u001b", "["), "#@");
					__temp_stmt52 = new global::haxe.lang.DynamicObject(new int[]{4997752, 5889761}, new object[]{"Insert # blank characters.", __temp_odecl16}, new int[]{}, new double[]{});
				}
				
				_g.@set("insertChars", __temp_stmt52);
				object __temp_stmt53 = null;
				{
					string __temp_odecl17 = global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("\u001b", "["), "#A");
					__temp_stmt53 = new global::haxe.lang.DynamicObject(new int[]{4997752, 5889761}, new object[]{"Move cursor up # lines.", __temp_odecl17}, new int[]{}, new double[]{});
				}
				
				_g.@set("moveUp", __temp_stmt53);
				object __temp_stmt54 = null;
				{
					string __temp_odecl18 = global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("\u001b", "["), "#B");
					__temp_stmt54 = new global::haxe.lang.DynamicObject(new int[]{4997752, 5889761}, new object[]{"Move cursor down # lines.", __temp_odecl18}, new int[]{}, new double[]{});
				}
				
				_g.@set("moveDown", __temp_stmt54);
				object __temp_stmt55 = null;
				{
					string __temp_odecl19 = global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("\u001b", "["), "#C");
					__temp_stmt55 = new global::haxe.lang.DynamicObject(new int[]{4997752, 5889761}, new object[]{"Move cursor right # characters.", __temp_odecl19}, new int[]{}, new double[]{});
				}
				
				_g.@set("moveRight", __temp_stmt55);
				object __temp_stmt56 = null;
				{
					string __temp_odecl20 = global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("\u001b", "["), "#D");
					__temp_stmt56 = new global::haxe.lang.DynamicObject(new int[]{4997752, 5889761}, new object[]{"Move cursor left # characters.", __temp_odecl20}, new int[]{}, new double[]{});
				}
				
				_g.@set("moveLeft", __temp_stmt56);
				object __temp_stmt57 = null;
				{
					string __temp_odecl21 = global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("\u001b", "["), "#E");
					__temp_stmt57 = new global::haxe.lang.DynamicObject(new int[]{4997752, 5889761}, new object[]{"Move cursor down # lines and to first column.", __temp_odecl21}, new int[]{}, new double[]{});
				}
				
				_g.@set("moveDownReset", __temp_stmt57);
				object __temp_stmt58 = null;
				{
					string __temp_odecl22 = global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("\u001b", "["), "#F");
					__temp_stmt58 = new global::haxe.lang.DynamicObject(new int[]{4997752, 5889761}, new object[]{"Move cursor up # lines and to first column.", __temp_odecl22}, new int[]{}, new double[]{});
				}
				
				_g.@set("moveUpReset", __temp_stmt58);
				object __temp_stmt59 = null;
				{
					string __temp_odecl23 = global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("\u001b", "["), "#G");
					__temp_stmt59 = new global::haxe.lang.DynamicObject(new int[]{4997752, 5889761}, new object[]{"Move cursor to column #.", __temp_odecl23}, new int[]{}, new double[]{});
				}
				
				_g.@set("setX", __temp_stmt59);
				object __temp_stmt60 = null;
				{
					string __temp_odecl24 = global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("\u001b", "["), "#d");
					__temp_stmt60 = new global::haxe.lang.DynamicObject(new int[]{4997752, 5889761}, new object[]{"Move cursor to line #.", __temp_odecl24}, new int[]{}, new double[]{});
				}
				
				_g.@set("setY", __temp_stmt60);
				object __temp_stmt61 = null;
				{
					string __temp_odecl25 = global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("\u001b", "["), "H");
					__temp_stmt61 = new global::haxe.lang.DynamicObject(new int[]{4997752, 5889761}, new object[]{"Move cursor to top-left.", __temp_odecl25}, new int[]{}, new double[]{});
				}
				
				_g.@set("reset", __temp_stmt61);
				object __temp_stmt62 = null;
				{
					string __temp_odecl26 = global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("\u001b", "["), "#H");
					__temp_stmt62 = new global::haxe.lang.DynamicObject(new int[]{4997752, 5889761}, new object[]{"Move cursor to line # and first column.", __temp_odecl26}, new int[]{}, new double[]{});
				}
				
				_g.@set("resetY", __temp_stmt62);
				object __temp_stmt63 = null;
				{
					string __temp_odecl27 = global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("\u001b", "["), "#;#H");
					global::Array<object> __temp_odecl28 = new global::Array<object>(new object[]{new global::haxe.lang.DynamicObject(new int[]{1224700491}, new object[]{"column"}, new int[]{1041537810}, new double[]{((double) (1) )}), new global::haxe.lang.DynamicObject(new int[]{1224700491}, new object[]{"line"}, new int[]{1041537810}, new double[]{((double) (0) )})});
					__temp_stmt63 = new global::haxe.lang.DynamicObject(new int[]{4997752, 5889761, 1836776262}, new object[]{"Move cursor to line #, column #.", __temp_odecl27, __temp_odecl28}, new int[]{}, new double[]{});
				}
				
				_g.@set("setXY", __temp_stmt63);
				object __temp_stmt64 = null;
				{
					string __temp_odecl29 = global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("\u001b", "["), "s");
					__temp_stmt64 = new global::haxe.lang.DynamicObject(new int[]{4997752, 5889761}, new object[]{"Save cursor position.", __temp_odecl29}, new int[]{}, new double[]{});
				}
				
				_g.@set("saveCursor", __temp_stmt64);
				object __temp_stmt65 = null;
				{
					string __temp_odecl30 = global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("\u001b", "["), "u");
					__temp_stmt65 = new global::haxe.lang.DynamicObject(new int[]{4997752, 5889761}, new object[]{"Move cursor to saved position.", __temp_odecl30}, new int[]{}, new double[]{});
				}
				
				_g.@set("loadCursor", __temp_stmt65);
				object __temp_stmt66 = null;
				{
					string __temp_odecl31 = global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("\u001b", "["), "?25h");
					__temp_stmt66 = new global::haxe.lang.DynamicObject(new int[]{4997752, 5889761}, new object[]{"Show cursor.", __temp_odecl31}, new int[]{}, new double[]{});
				}
				
				_g.@set("showCursor", __temp_stmt66);
				object __temp_stmt67 = null;
				{
					string __temp_odecl32 = global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("\u001b", "["), "?25l");
					__temp_stmt67 = new global::haxe.lang.DynamicObject(new int[]{4997752, 5889761}, new object[]{"Hide cursor.", __temp_odecl32}, new int[]{}, new double[]{});
				}
				
				_g.@set("hideCursor", __temp_stmt67);
				__temp_stmt36 = _g;
			}
			
			object __temp_stmt35 = global::haxe.ds.StringMap<object>.__hx_cast<object>(((global::haxe.ds.StringMap) (__temp_stmt36) ));
			global::ANSI.sequences = ((global::haxe.ds.StringMap<object>) (__temp_stmt35) );
		}
	}
	
	
	public ANSI(global::haxe.lang.EmptyObject empty) {
	}
	
	
	public ANSI() {
		global::ANSI.__hx_ctor__ANSI(this);
	}
	
	
	protected static void __hx_ctor__ANSI(global::ANSI __hx_this) {
	}
	
	
	public static string ESCAPE;
	
	public static string BELL;
	
	public static string CSI;
	
	public static System.Type attr;
	
	public static global::haxe.ds.EnumValueMap<object, int> values;
	
	public static object @set;
	
	public static bool available;
	
	public static bool strip;
	
	public static bool stripIfUnavailable;
	
	public static string aset(global::Array attributes) {
		if (( global::ANSI.strip || ( global::ANSI.stripIfUnavailable &&  ! (global::ANSI.available)  ) )) {
			return "";
		}
		
		string tmp = global::haxe.lang.Runtime.concat("\u001b", "[");
		global::Array<object> _g = new global::Array<object>(new object[]{});
		{
			int _g1 = 0;
			while (( _g1 < ((int) (global::haxe.lang.Runtime.getField_f(attributes, "length", 520590566, true)) ) )) {
				object arg = attributes[_g1];
				 ++ _g1;
				if ( ! (( arg is global::Attribute )) ) {
					throw global::haxe.lang.HaxeException.wrap(global::haxe.lang.Runtime.concat("Set argument is not an Attribute: ", global::Std.@string(arg)));
				}
				
				_g.push((((global::haxe.ds.EnumValueMap<object, int>) (global::haxe.ds.EnumValueMap<object, object>.__hx_cast<object, int>(((global::haxe.ds.EnumValueMap) (((global::haxe.IMap<object, int>) (global::ANSI.values) )) ))) ).@get(((global::Attribute) (arg) ))).toDynamic());
			}
			
		}
		
		return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(tmp, _g.@join(";")), "m");
	}
	
	
	public static bool detectSupport() {
		unchecked {
			if (( global::haxe.lang.StringExt.indexOf(global::Sys.systemName().ToLowerInvariant(), "window", default(global::haxe.lang.Null<int>)) == -1 )) {
				int result = -1;
				try {
					global::sys.io.Process process = new global::sys.io.Process("tput", new global::Array<object>(new object[]{"colors"}), default(global::haxe.lang.Null<bool>));
					result = (process.exitCode(default(global::haxe.lang.Null<bool>))).@value;
					process.close();
				}
				catch (global::System.Exception catchallException){
					global::haxe.lang.Exceptions.exception = catchallException;
					object e = ( (( catchallException is global::haxe.lang.HaxeException )) ? (((global::haxe.lang.HaxeException) (catchallException) ).obj) : ((object) (catchallException) ) );
				}
				
				
				return ( result == 0 );
			}
			else {
				return ( global::System.Environment.GetEnvironmentVariable(((string) ("ANSICON") )) != null );
			}
			
		}
	}
	
	
	public static string title(string str) {
		if (( global::ANSI.strip || ( global::ANSI.stripIfUnavailable &&  ! (global::ANSI.available)  ) )) {
			return "";
		}
		
		return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("\u001b", "]0;"), str), "\u0007");
	}
	
	
	public static global::haxe.ds.StringMap<object> sequences;
	
	public static string showCursor() {
		if (( global::ANSI.strip || ( global::ANSI.stripIfUnavailable &&  ! (global::ANSI.available)  ) )) {
			return "";
		}
		
		return "\u001b[?25h";
	}
	
	
	public static string setY(global::haxe.lang.Null<int> num) {
		unchecked {
			int num1 = ( ( ! (num.hasValue) ) ? (1) : ((num).@value) );
			if (( global::ANSI.strip || ( global::ANSI.stripIfUnavailable &&  ! (global::ANSI.available)  ) )) {
				return "";
			}
			
			return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("\u001b[", global::haxe.lang.Runtime.toString(num1)), "d");
		}
	}
	
	
	public static string setXY(int column, int line) {
		if (( global::ANSI.strip || ( global::ANSI.stripIfUnavailable &&  ! (global::ANSI.available)  ) )) {
			return "";
		}
		
		return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("\u001b[", global::haxe.lang.Runtime.toString(line)), ";"), global::haxe.lang.Runtime.toString(column)), "H");
	}
	
	
	public static string setX(global::haxe.lang.Null<int> num) {
		unchecked {
			int num1 = ( ( ! (num.hasValue) ) ? (1) : ((num).@value) );
			if (( global::ANSI.strip || ( global::ANSI.stripIfUnavailable &&  ! (global::ANSI.available)  ) )) {
				return "";
			}
			
			return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("\u001b[", global::haxe.lang.Runtime.toString(num1)), "G");
		}
	}
	
	
	public static string saveCursor() {
		if (( global::ANSI.strip || ( global::ANSI.stripIfUnavailable &&  ! (global::ANSI.available)  ) )) {
			return "";
		}
		
		return "\u001b[s";
	}
	
	
	public static string resetY(global::haxe.lang.Null<int> num) {
		unchecked {
			int num1 = ( ( ! (num.hasValue) ) ? (1) : ((num).@value) );
			if (( global::ANSI.strip || ( global::ANSI.stripIfUnavailable &&  ! (global::ANSI.available)  ) )) {
				return "";
			}
			
			return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("\u001b[", global::haxe.lang.Runtime.toString(num1)), "H");
		}
	}
	
	
	public static string reset() {
		if (( global::ANSI.strip || ( global::ANSI.stripIfUnavailable &&  ! (global::ANSI.available)  ) )) {
			return "";
		}
		
		return "\u001b[H";
	}
	
	
	public static string moveUpReset(global::haxe.lang.Null<int> num) {
		unchecked {
			int num1 = ( ( ! (num.hasValue) ) ? (1) : ((num).@value) );
			if (( global::ANSI.strip || ( global::ANSI.stripIfUnavailable &&  ! (global::ANSI.available)  ) )) {
				return "";
			}
			
			return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("\u001b[", global::haxe.lang.Runtime.toString(num1)), "F");
		}
	}
	
	
	public static string moveUp(global::haxe.lang.Null<int> num) {
		unchecked {
			int num1 = ( ( ! (num.hasValue) ) ? (1) : ((num).@value) );
			if (( global::ANSI.strip || ( global::ANSI.stripIfUnavailable &&  ! (global::ANSI.available)  ) )) {
				return "";
			}
			
			return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("\u001b[", global::haxe.lang.Runtime.toString(num1)), "A");
		}
	}
	
	
	public static string moveRight(global::haxe.lang.Null<int> num) {
		unchecked {
			int num1 = ( ( ! (num.hasValue) ) ? (1) : ((num).@value) );
			if (( global::ANSI.strip || ( global::ANSI.stripIfUnavailable &&  ! (global::ANSI.available)  ) )) {
				return "";
			}
			
			return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("\u001b[", global::haxe.lang.Runtime.toString(num1)), "C");
		}
	}
	
	
	public static string moveLeft(global::haxe.lang.Null<int> num) {
		unchecked {
			int num1 = ( ( ! (num.hasValue) ) ? (1) : ((num).@value) );
			if (( global::ANSI.strip || ( global::ANSI.stripIfUnavailable &&  ! (global::ANSI.available)  ) )) {
				return "";
			}
			
			return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("\u001b[", global::haxe.lang.Runtime.toString(num1)), "D");
		}
	}
	
	
	public static string moveDownReset(global::haxe.lang.Null<int> num) {
		unchecked {
			int num1 = ( ( ! (num.hasValue) ) ? (1) : ((num).@value) );
			if (( global::ANSI.strip || ( global::ANSI.stripIfUnavailable &&  ! (global::ANSI.available)  ) )) {
				return "";
			}
			
			return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("\u001b[", global::haxe.lang.Runtime.toString(num1)), "E");
		}
	}
	
	
	public static string moveDown(global::haxe.lang.Null<int> num) {
		unchecked {
			int num1 = ( ( ! (num.hasValue) ) ? (1) : ((num).@value) );
			if (( global::ANSI.strip || ( global::ANSI.stripIfUnavailable &&  ! (global::ANSI.available)  ) )) {
				return "";
			}
			
			return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("\u001b[", global::haxe.lang.Runtime.toString(num1)), "B");
		}
	}
	
	
	public static string loadCursor() {
		if (( global::ANSI.strip || ( global::ANSI.stripIfUnavailable &&  ! (global::ANSI.available)  ) )) {
			return "";
		}
		
		return "\u001b[u";
	}
	
	
	public static string insertLines(global::haxe.lang.Null<int> num) {
		unchecked {
			int num1 = ( ( ! (num.hasValue) ) ? (1) : ((num).@value) );
			if (( global::ANSI.strip || ( global::ANSI.stripIfUnavailable &&  ! (global::ANSI.available)  ) )) {
				return "";
			}
			
			return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("\u001b[", global::haxe.lang.Runtime.toString(num1)), "L");
		}
	}
	
	
	public static string insertLine() {
		if (( global::ANSI.strip || ( global::ANSI.stripIfUnavailable &&  ! (global::ANSI.available)  ) )) {
			return "";
		}
		
		return "\u001b[L";
	}
	
	
	public static string insertChars(global::haxe.lang.Null<int> num) {
		unchecked {
			int num1 = ( ( ! (num.hasValue) ) ? (1) : ((num).@value) );
			if (( global::ANSI.strip || ( global::ANSI.stripIfUnavailable &&  ! (global::ANSI.available)  ) )) {
				return "";
			}
			
			return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("\u001b[", global::haxe.lang.Runtime.toString(num1)), "@");
		}
	}
	
	
	public static string insertChar() {
		if (( global::ANSI.strip || ( global::ANSI.stripIfUnavailable &&  ! (global::ANSI.available)  ) )) {
			return "";
		}
		
		return "\u001b[@";
	}
	
	
	public static string hideCursor() {
		if (( global::ANSI.strip || ( global::ANSI.stripIfUnavailable &&  ! (global::ANSI.available)  ) )) {
			return "";
		}
		
		return "\u001b[?25l";
	}
	
	
	public static string eraseLineToEnd() {
		if (( global::ANSI.strip || ( global::ANSI.stripIfUnavailable &&  ! (global::ANSI.available)  ) )) {
			return "";
		}
		
		return "\u001b[K";
	}
	
	
	public static string eraseLineToCursor() {
		if (( global::ANSI.strip || ( global::ANSI.stripIfUnavailable &&  ! (global::ANSI.available)  ) )) {
			return "";
		}
		
		return "\u001b[1K";
	}
	
	
	public static string eraseLine() {
		if (( global::ANSI.strip || ( global::ANSI.stripIfUnavailable &&  ! (global::ANSI.available)  ) )) {
			return "";
		}
		
		return "\u001b[2K";
	}
	
	
	public static string eraseDisplayToEnd() {
		if (( global::ANSI.strip || ( global::ANSI.stripIfUnavailable &&  ! (global::ANSI.available)  ) )) {
			return "";
		}
		
		return "\u001b[J";
	}
	
	
	public static string eraseDisplayToCursor() {
		if (( global::ANSI.strip || ( global::ANSI.stripIfUnavailable &&  ! (global::ANSI.available)  ) )) {
			return "";
		}
		
		return "\u001b[1J";
	}
	
	
	public static string eraseDisplay() {
		if (( global::ANSI.strip || ( global::ANSI.stripIfUnavailable &&  ! (global::ANSI.available)  ) )) {
			return "";
		}
		
		return "\u001b[2J";
	}
	
	
	public static string eraseChars(global::haxe.lang.Null<int> num) {
		unchecked {
			int num1 = ( ( ! (num.hasValue) ) ? (1) : ((num).@value) );
			if (( global::ANSI.strip || ( global::ANSI.stripIfUnavailable &&  ! (global::ANSI.available)  ) )) {
				return "";
			}
			
			return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("\u001b[", global::haxe.lang.Runtime.toString(num1)), "X");
		}
	}
	
	
	public static string eraseChar() {
		if (( global::ANSI.strip || ( global::ANSI.stripIfUnavailable &&  ! (global::ANSI.available)  ) )) {
			return "";
		}
		
		return "\u001b[X";
	}
	
	
	public static string deleteLines(global::haxe.lang.Null<int> num) {
		unchecked {
			int num1 = ( ( ! (num.hasValue) ) ? (1) : ((num).@value) );
			if (( global::ANSI.strip || ( global::ANSI.stripIfUnavailable &&  ! (global::ANSI.available)  ) )) {
				return "";
			}
			
			return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("\u001b[", global::haxe.lang.Runtime.toString(num1)), "M");
		}
	}
	
	
	public static string deleteLine() {
		if (( global::ANSI.strip || ( global::ANSI.stripIfUnavailable &&  ! (global::ANSI.available)  ) )) {
			return "";
		}
		
		return "\u001b[M";
	}
	
	
	public static string deleteChars(global::haxe.lang.Null<int> num) {
		unchecked {
			int num1 = ( ( ! (num.hasValue) ) ? (1) : ((num).@value) );
			if (( global::ANSI.strip || ( global::ANSI.stripIfUnavailable &&  ! (global::ANSI.available)  ) )) {
				return "";
			}
			
			return global::haxe.lang.Runtime.concat(global::haxe.lang.Runtime.concat("\u001b[", global::haxe.lang.Runtime.toString(num1)), "P");
		}
	}
	
	
	public static string deleteChar() {
		if (( global::ANSI.strip || ( global::ANSI.stripIfUnavailable &&  ! (global::ANSI.available)  ) )) {
			return "";
		}
		
		return "\u001b[P";
	}
	
	
}


