// Generated by Haxe 4.0.0-rc.2+77068e10c

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.testrunner._Batch {
	public sealed class Batch_Impl_ {
		
		
		
		[global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
		public static global::Array<object> _new(global::Array<object> suites) {
			global::Array<object> this1 = suites;
			return ((global::Array<object>) (this1) );
		}
		
		
		public static global::Array<object> ofSuites<T>(global::Array<T> suites) {
			global::Array<object> this1 = ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (suites) ))) );
			return ((global::Array<object>) (this1) );
		}
		
		
		public static global::Array<object> ofSuite(global::tink.testrunner.SuiteObject suite) {
			global::Array<object> this1 = ((global::Array<object>) (new global::Array<object>(new object[]{suite})) );
			return ((global::Array<object>) (this1) );
		}
		
		
		public static global::Array<object> ofCases<T>(global::Array<T> cases, object pos) {
			unchecked {
				global::Array<object> _g = new global::Array<object>(new object[]{});
				{
					int _g1 = 0;
					while (( _g1 < cases.length )) {
						T c = cases[_g1];
						 ++ _g1;
						global::System.Type _g11 = global::Type.getClass<T>(global::haxe.lang.Runtime.genericCast<T>(c));
						string suite = null;
						if (global::haxe.lang.Runtime.typeEq(_g11, null)) {
							suite = null;
						}
						else {
							global::System.Type c1 = _g11;
							suite = global::Type.getClassName(c1);
						}
						
						_g.push(suite);
					}
					
				}
				
				object __temp_stmt3 = null;
				{
					string __temp_odecl1 = _g.@join(", ");
					__temp_stmt3 = new global::haxe.lang.DynamicObject(new int[]{5594516, 1224700491}, new object[]{pos, __temp_odecl1}, new int[]{}, new double[]{});
				}
				
				global::Array<object> __temp_stmt4 = ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (cases) ))) );
				object __temp_stmt5 = new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"ofCases", "tink.testrunner._Suite.Suite_Impl_", "tink/testrunner/Suite.hx"}, new int[]{1981972957}, new double[]{((double) (36) )});
				global::tink.testrunner.BasicSuite __temp_stmt2 = new global::tink.testrunner.BasicSuite(__temp_stmt3, __temp_stmt4, __temp_stmt5);
				global::Array<object> this1 = ((global::Array<object>) (new global::Array<object>(new object[]{((global::tink.testrunner.SuiteObject) (__temp_stmt2) )})) );
				return ((global::Array<object>) (this1) );
			}
		}
		
		
		public static global::Array<object> ofCase(global::tink.testrunner.CaseObject caze, object pos) {
			unchecked {
				global::Array<object> cases = new global::Array<object>(new object[]{caze});
				global::Array<object> _g = new global::Array<object>(new object[]{});
				{
					int _g1 = 0;
					while (( _g1 < cases.length )) {
						global::tink.testrunner.CaseObject c = ((global::tink.testrunner.CaseObject) (cases[_g1]) );
						 ++ _g1;
						global::System.Type _g11 = global::Type.getClass<object>(((object) (c) ));
						string suite = null;
						if (global::haxe.lang.Runtime.typeEq(_g11, null)) {
							suite = null;
						}
						else {
							global::System.Type c1 = _g11;
							suite = global::Type.getClassName(c1);
						}
						
						_g.push(suite);
					}
					
				}
				
				object __temp_stmt3 = null;
				{
					string __temp_odecl1 = _g.@join(", ");
					__temp_stmt3 = new global::haxe.lang.DynamicObject(new int[]{5594516, 1224700491}, new object[]{pos, __temp_odecl1}, new int[]{}, new double[]{});
				}
				
				global::Array<object> __temp_stmt4 = ((global::Array<object>) (cases) );
				object __temp_stmt5 = new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"ofCases", "tink.testrunner._Suite.Suite_Impl_", "tink/testrunner/Suite.hx"}, new int[]{1981972957}, new double[]{((double) (36) )});
				global::tink.testrunner.BasicSuite __temp_stmt2 = new global::tink.testrunner.BasicSuite(__temp_stmt3, __temp_stmt4, __temp_stmt5);
				global::Array<object> this1 = ((global::Array<object>) (new global::Array<object>(new object[]{((global::tink.testrunner.SuiteObject) (__temp_stmt2) )})) );
				return ((global::Array<object>) (this1) );
			}
		}
		
		
		public static global::Array<object> get_suites(global::Array<object> this1) {
			return this1;
		}
		
		
	}
}


