// Generated by Haxe 4.0.0-rc.2+77068e10c

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.testrunner._Suite {
	public sealed class Suite_Impl_ {
		
		public static global::tink.testrunner.SuiteObject ofCases<T>(global::Array<T> cases, object pos) {
			unchecked {
				global::Array<object> _g = new global::Array<object>(new object[]{});
				{
					int _g1 = 0;
					while (( _g1 < cases.length )) {
						T c = cases[_g1];
						 ++ _g1;
						global::System.Type _g11 = global::Type.getClass<T>(global::haxe.lang.Runtime.genericCast<T>(c));
						string tmp = null;
						if (global::haxe.lang.Runtime.typeEq(_g11, null)) {
							tmp = null;
						}
						else {
							global::System.Type c1 = _g11;
							tmp = global::Type.getClassName(c1);
						}
						
						_g.push(tmp);
					}
					
				}
				
				object __temp_stmt2 = null;
				{
					string __temp_odecl1 = _g.@join(", ");
					__temp_stmt2 = new global::haxe.lang.DynamicObject(new int[]{5594516, 1224700491}, new object[]{pos, __temp_odecl1}, new int[]{}, new double[]{});
				}
				
				global::Array<object> __temp_stmt3 = ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (cases) ))) );
				object __temp_stmt4 = new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"ofCases", "tink.testrunner._Suite.Suite_Impl_", "tink/testrunner/Suite.hx"}, new int[]{1981972957}, new double[]{((double) (36) )});
				return new global::tink.testrunner.BasicSuite(__temp_stmt2, __temp_stmt3, __temp_stmt4);
			}
		}
		
		
		public static global::tink.testrunner.SuiteObject ofCase(global::tink.testrunner.CaseObject caze, object pos) {
			unchecked {
				global::Array<object> cases = new global::Array<object>(new object[]{caze});
				global::Array<object> _g = new global::Array<object>(new object[]{});
				{
					int _g1 = 0;
					while (( _g1 < cases.length )) {
						global::tink.testrunner.CaseObject c = ((global::tink.testrunner.CaseObject) (cases[_g1]) );
						 ++ _g1;
						global::System.Type _g11 = global::Type.getClass<object>(((object) (c) ));
						string tmp = null;
						if (global::haxe.lang.Runtime.typeEq(_g11, null)) {
							tmp = null;
						}
						else {
							global::System.Type c1 = _g11;
							tmp = global::Type.getClassName(c1);
						}
						
						_g.push(tmp);
					}
					
				}
				
				object __temp_stmt2 = null;
				{
					string __temp_odecl1 = _g.@join(", ");
					__temp_stmt2 = new global::haxe.lang.DynamicObject(new int[]{5594516, 1224700491}, new object[]{pos, __temp_odecl1}, new int[]{}, new double[]{});
				}
				
				global::Array<object> __temp_stmt3 = ((global::Array<object>) (cases) );
				object __temp_stmt4 = new global::haxe.lang.DynamicObject(new int[]{302979532, 1547539107, 1648581351}, new object[]{"ofCases", "tink.testrunner._Suite.Suite_Impl_", "tink/testrunner/Suite.hx"}, new int[]{1981972957}, new double[]{((double) (36) )});
				return new global::tink.testrunner.BasicSuite(__temp_stmt2, __temp_stmt3, __temp_stmt4);
			}
		}
		
		
		public static global::Array<object> getCasesToBeRun(global::tink.testrunner.SuiteObject this1, bool includeMode) {
			return ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (global::haxe.lang.Runtime.getField(this1, "cases", 1092664259, true)) ))) ).filter(new global::tink.testrunner._Suite.Suite_Impl__getCasesToBeRun_48__Fun(includeMode));
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.testrunner._Suite {
	public class Suite_Impl__getCasesToBeRun_48__Fun : global::haxe.lang.Function {
		
		public Suite_Impl__getCasesToBeRun_48__Fun(bool includeMode) : base(1, 0) {
			this.includeMode = includeMode;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::tink.testrunner.CaseObject c = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::tink.testrunner.CaseObject) (((object) (__fn_float1) )) )) : (((global::tink.testrunner.CaseObject) (__fn_dyn1) )) );
			return global::tink.testrunner._Case.Case_Impl_.shouldRun(c, this.includeMode);
		}
		
		
		public bool includeMode;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.testrunner {
	public interface SuiteObject : global::haxe.lang.IHxObject {
		
		global::tink.core._Future.FutureObject<object> setup();
		
		global::tink.core._Future.FutureObject<object> before();
		
		global::tink.core._Future.FutureObject<object> after();
		
		global::tink.core._Future.FutureObject<object> teardown();
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.testrunner {
	public class BasicSuite : global::haxe.lang.HxObject, global::tink.testrunner.SuiteObject {
		
		public BasicSuite(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public BasicSuite(object info, global::Array<object> cases, object pos) {
			global::tink.testrunner.BasicSuite.__hx_ctor_tink_testrunner_BasicSuite(this, info, cases, pos);
		}
		
		
		protected static void __hx_ctor_tink_testrunner_BasicSuite(global::tink.testrunner.BasicSuite __hx_this, object info, global::Array<object> cases, object pos) {
			__hx_this.info = info;
			__hx_this.cases = cases;
			if (( global::haxe.lang.Runtime.getField(info, "pos", 5594516, true) == null )) {
				global::haxe.lang.Runtime.setField(info, "pos", 5594516, pos);
			}
			
			{
				int _g = 0;
				while (( _g < cases.length )) {
					global::tink.testrunner.CaseObject c = ((global::tink.testrunner.CaseObject) (cases[_g]) );
					 ++ _g;
					global::tink.testrunner.SuiteObject __temp_expr1 = ((global::tink.testrunner.SuiteObject) (global::haxe.lang.Runtime.setField(c, "suite", 79347384, __hx_this)) );
				}
				
			}
			
		}
		
		
		public object info;
		
		public global::Array<object> cases;
		
		public virtual global::tink.core._Future.FutureObject<object> setup() {
			return global::tink.core._Promise.Promise_Impl_.NOISE;
		}
		
		
		public virtual global::tink.core._Future.FutureObject<object> before() {
			return global::tink.core._Promise.Promise_Impl_.NOISE;
		}
		
		
		public virtual global::tink.core._Future.FutureObject<object> after() {
			return global::tink.core._Promise.Promise_Impl_.NOISE;
		}
		
		
		public virtual global::tink.core._Future.FutureObject<object> teardown() {
			return global::tink.core._Promise.Promise_Impl_.NOISE;
		}
		
		
		public override double __hx_setField_f(string field, int hash, double @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1169897582:
					{
						this.info = ((object) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField_f(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1092664259:
					{
						this.cases = ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (@value) ))) );
						return @value;
					}
					
					
					case 1169897582:
					{
						this.info = ((object) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 26061316:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "teardown", 26061316)) );
					}
					
					
					case 497182236:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "after", 497182236)) );
					}
					
					
					case 439506047:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "before", 439506047)) );
					}
					
					
					case 2049945213:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "setup", 2049945213)) );
					}
					
					
					case 1092664259:
					{
						return this.cases;
					}
					
					
					case 1169897582:
					{
						return this.info;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override double __hx_getField_f(string field, int hash, bool throwErrors, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1169897582:
					{
						return ((double) (global::haxe.lang.Runtime.toDouble(this.info)) );
					}
					
					
					default:
					{
						return base.__hx_getField_f(field, hash, throwErrors, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, object[] dynargs) {
			unchecked {
				switch (hash) {
					case 26061316:
					{
						return this.teardown();
					}
					
					
					case 497182236:
					{
						return this.after();
					}
					
					
					case 439506047:
					{
						return this.before();
					}
					
					
					case 2049945213:
					{
						return this.setup();
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
			}
		}
		
		
		public override void __hx_getFields(global::Array<object> baseArr) {
			baseArr.push("cases");
			baseArr.push("info");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}


