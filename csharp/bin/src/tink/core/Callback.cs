// Generated by Haxe 4.0.0-rc.2+77068e10c

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Callback {
	public sealed class Callback_Impl_ {
		
		static Callback_Impl_() {
			unchecked {
				global::tink.core._Callback.Callback_Impl_.depth = 0;
				global::tink.core._Callback.Callback_Impl_.MAX_DEPTH = 1000;
			}
		}
		
		
		[global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
		public static global::haxe.lang.Function _new<T>(global::haxe.lang.Function f) {
			global::haxe.lang.Function this1 = f;
			return ((global::haxe.lang.Function) (this1) );
		}
		
		
		public static global::haxe.lang.Function toFunction<T>(global::haxe.lang.Function this1) {
			return this1;
		}
		
		
		public static int depth;
		
		public static int MAX_DEPTH;
		
		public static void invoke<T>(global::haxe.lang.Function this1, T data) {
			unchecked {
				if (( global::tink.core._Callback.Callback_Impl_.depth < 1000 )) {
					global::tink.core._Callback.Callback_Impl_.depth++;
					this1.__hx_invoke1_o(default(double), data);
					global::tink.core._Callback.Callback_Impl_.depth--;
				}
				else {
					global::haxe.lang.Function _e = this1;
					global::haxe.lang.Function f = new global::tink.core._Callback.Callback_Impl__invoke_19__Fun_0<T>(_e);
					T data2 = data;
					global::tink.core._Callback.Callback_Impl_.defer(new global::tink.core._Callback.Callback_Impl__invoke_19__Fun<T>(f, data2));
				}
				
			}
		}
		
		
		public static global::haxe.lang.Function ignore<T>(global::haxe.lang.Function cb) {
			return new global::tink.core._Callback.Callback_Impl__ignore_24__Fun<T>(cb);
		}
		
		
		public static global::haxe.lang.Function fromNiladic<A>(global::haxe.lang.Function f) {
			return new global::tink.core._Callback.Callback_Impl__fromNiladic_27__Fun<A>(f);
		}
		
		
		public static global::haxe.lang.Function fromMany<A>(global::Array<object> callbacks) {
			return new global::tink.core._Callback.Callback_Impl__fromMany_31__Fun<A>(callbacks);
		}
		
		
		public static void defer(global::haxe.lang.Function f) {
			global::tink.RunLoop.current.work(global::tink.runloop._Task.Task_Impl_.ofFunction(f));
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Callback {
	public class Callback_Impl__invoke_19__Fun_0<T> : global::haxe.lang.Function {
		
		public Callback_Impl__invoke_19__Fun_0(global::haxe.lang.Function _e) : base(1, 0) {
			this._e = _e;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			T data1 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T>(__fn_dyn1)) );
			global::tink.core._Callback.Callback_Impl_.invoke<T>(((global::haxe.lang.Function) (this._e) ), global::haxe.lang.Runtime.genericCast<T>(data1));
			return null;
		}
		
		
		public global::haxe.lang.Function _e;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Callback {
	public class Callback_Impl__invoke_19__Fun<T> : global::haxe.lang.Function {
		
		public Callback_Impl__invoke_19__Fun(global::haxe.lang.Function f, T data2) : base(0, 0) {
			this.f = f;
			this.data2 = data2;
		}
		
		
		public override object __hx_invoke0_o() {
			this.f.__hx_invoke1_o(default(double), this.data2);
			return null;
		}
		
		
		public global::haxe.lang.Function f;
		
		public T data2;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Callback {
	public class Callback_Impl__ignore_24__Fun<T> : global::haxe.lang.Function {
		
		public Callback_Impl__ignore_24__Fun(global::haxe.lang.Function cb) : base(1, 0) {
			this.cb = cb;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			T _ = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T>(__fn_dyn1)) );
			global::tink.core._Callback.Callback_Impl_.invoke<object>(((global::haxe.lang.Function) (this.cb) ), ((object) (global::tink.core.TinkNoise.Noise) ));
			return null;
		}
		
		
		public global::haxe.lang.Function cb;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Callback {
	public class Callback_Impl__fromNiladic_27__Fun<A> : global::haxe.lang.Function {
		
		public Callback_Impl__fromNiladic_27__Fun(global::haxe.lang.Function f) : base(1, 0) {
			this.f = f;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			A _ = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<A>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<A>(__fn_dyn1)) );
			this.f.__hx_invoke0_o();
			return null;
		}
		
		
		public global::haxe.lang.Function f;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Callback {
	public class Callback_Impl__fromMany_31__Fun<A> : global::haxe.lang.Function {
		
		public Callback_Impl__fromMany_31__Fun(global::Array<object> callbacks) : base(1, 0) {
			this.callbacks = callbacks;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			A v = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<A>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<A>(__fn_dyn1)) );
			int _g = 0;
			while (( _g < this.callbacks.length )) {
				global::haxe.lang.Function callback = ((global::haxe.lang.Function) (this.callbacks[_g]) );
				 ++ _g;
				global::tink.core._Callback.Callback_Impl_.invoke<A>(((global::haxe.lang.Function) (callback) ), global::haxe.lang.Runtime.genericCast<A>(v));
			}
			
			return null;
		}
		
		
		public global::Array<object> callbacks;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Callback {
	public interface LinkObject : global::haxe.lang.IHxObject {
		
		void cancel();
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Callback {
	public sealed class CallbackLink_Impl_ {
		
		[global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
		public static global::tink.core._Callback.LinkObject _new(global::haxe.lang.Function link) {
			global::tink.core._Callback.LinkObject this1 = new global::tink.core._Callback.SimpleLink(((global::haxe.lang.Function) (link) ));
			return ((global::tink.core._Callback.LinkObject) (this1) );
		}
		
		
		public static void cancel(global::tink.core._Callback.LinkObject this1) {
			if (( this1 != null )) {
				this1.cancel();
			}
			
		}
		
		
		public static void dissolve(global::tink.core._Callback.LinkObject this1) {
			if (( ((global::tink.core._Callback.LinkObject) (this1) ) != null )) {
				((global::tink.core._Callback.LinkObject) (this1) ).cancel();
			}
			
		}
		
		
		public static void noop() {
		}
		
		
		public static global::haxe.lang.Function toFunction(global::tink.core._Callback.LinkObject this1) {
			if (( this1 == null )) {
				return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(typeof(global::tink.core._Callback.CallbackLink_Impl_), "noop", 1225397154)) );
			}
			else {
				return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this1, "cancel", 942927226)) );
			}
			
		}
		
		
		public static global::haxe.lang.Function toCallback<A>(global::tink.core._Callback.LinkObject this1) {
			return new global::tink.core._Callback.CallbackLink_Impl__toCallback_77__Fun<A>(this1);
		}
		
		
		public static global::tink.core._Callback.LinkObject fromFunction(global::haxe.lang.Function f) {
			global::tink.core._Callback.LinkObject this1 = new global::tink.core._Callback.SimpleLink(((global::haxe.lang.Function) (f) ));
			return ((global::tink.core._Callback.LinkObject) (this1) );
		}
		
		
		public static global::tink.core._Callback.LinkObject @join(global::tink.core._Callback.LinkObject a, global::tink.core._Callback.LinkObject b) {
			return new global::tink.core._Callback.LinkPair(a, b);
		}
		
		
		public static global::tink.core._Callback.LinkObject fromMany(global::Array<object> callbacks) {
			global::tink.core._Callback.LinkObject this1 = new global::tink.core._Callback.SimpleLink(((global::haxe.lang.Function) (new global::tink.core._Callback.CallbackLink_Impl__fromMany_86__Fun(callbacks)) ));
			return ((global::tink.core._Callback.LinkObject) (this1) );
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Callback {
	public class CallbackLink_Impl__toCallback_77__Fun<A> : global::haxe.lang.Function {
		
		public CallbackLink_Impl__toCallback_77__Fun(global::tink.core._Callback.LinkObject this1) : base(1, 0) {
			this.this1 = this1;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			A _ = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<A>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<A>(__fn_dyn1)) );
			this.this1.cancel();
			return null;
		}
		
		
		public global::tink.core._Callback.LinkObject this1;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Callback {
	public class CallbackLink_Impl__fromMany_86__Fun : global::haxe.lang.Function {
		
		public CallbackLink_Impl__fromMany_86__Fun(global::Array<object> callbacks) : base(0, 0) {
			this.callbacks = callbacks;
		}
		
		
		public override object __hx_invoke0_o() {
			int _g = 0;
			while (( _g < this.callbacks.length )) {
				global::tink.core._Callback.LinkObject cb = ((global::tink.core._Callback.LinkObject) (this.callbacks[_g]) );
				 ++ _g;
				if (( ((global::tink.core._Callback.LinkObject) (cb) ) != null )) {
					((global::tink.core._Callback.LinkObject) (cb) ).cancel();
				}
				
			}
			
			return null;
		}
		
		
		public global::Array<object> callbacks;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Callback {
	public class SimpleLink : global::haxe.lang.HxObject, global::tink.core._Callback.LinkObject {
		
		public SimpleLink(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public SimpleLink(global::haxe.lang.Function f) {
			global::tink.core._Callback.SimpleLink.__hx_ctor_tink_core__Callback_SimpleLink(this, f);
		}
		
		
		protected static void __hx_ctor_tink_core__Callback_SimpleLink(global::tink.core._Callback.SimpleLink __hx_this, global::haxe.lang.Function f) {
			__hx_this.f = f;
		}
		
		
		public global::haxe.lang.Function f;
		
		public void cancel() {
			if (( this.f != null )) {
				this.f.__hx_invoke0_o();
				this.f = null;
			}
			
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 102:
					{
						this.f = ((global::haxe.lang.Function) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 942927226:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "cancel", 942927226)) );
					}
					
					
					case 102:
					{
						return this.f;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, object[] dynargs) {
			unchecked {
				switch (hash) {
					case 942927226:
					{
						this.cancel();
						break;
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
		public override void __hx_getFields(global::Array<object> baseArr) {
			baseArr.push("f");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Callback {
	public class LinkPair : global::haxe.lang.HxObject, global::tink.core._Callback.LinkObject {
		
		public LinkPair(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public LinkPair(global::tink.core._Callback.LinkObject a, global::tink.core._Callback.LinkObject b) {
			global::tink.core._Callback.LinkPair.__hx_ctor_tink_core__Callback_LinkPair(this, a, b);
		}
		
		
		protected static void __hx_ctor_tink_core__Callback_LinkPair(global::tink.core._Callback.LinkPair __hx_this, global::tink.core._Callback.LinkObject a, global::tink.core._Callback.LinkObject b) {
			__hx_this.dissolved = false;
			{
				__hx_this.a = a;
				__hx_this.b = b;
			}
			
		}
		
		
		public global::tink.core._Callback.LinkObject a;
		
		public global::tink.core._Callback.LinkObject b;
		
		public bool dissolved;
		
		public virtual void cancel() {
			if ( ! (this.dissolved) ) {
				this.dissolved = true;
				{
					global::tink.core._Callback.LinkObject this1 = this.a;
					if (( ((global::tink.core._Callback.LinkObject) (this1) ) != null )) {
						((global::tink.core._Callback.LinkObject) (this1) ).cancel();
					}
					
				}
				
				{
					global::tink.core._Callback.LinkObject this2 = this.b;
					if (( ((global::tink.core._Callback.LinkObject) (this2) ) != null )) {
						((global::tink.core._Callback.LinkObject) (this2) ).cancel();
					}
					
				}
				
				this.a = null;
				this.b = null;
			}
			
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 912522195:
					{
						this.dissolved = global::haxe.lang.Runtime.toBool(@value);
						return @value;
					}
					
					
					case 98:
					{
						this.b = ((global::tink.core._Callback.LinkObject) (@value) );
						return @value;
					}
					
					
					case 97:
					{
						this.a = ((global::tink.core._Callback.LinkObject) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 942927226:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "cancel", 942927226)) );
					}
					
					
					case 912522195:
					{
						return this.dissolved;
					}
					
					
					case 98:
					{
						return this.b;
					}
					
					
					case 97:
					{
						return this.a;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, object[] dynargs) {
			unchecked {
				switch (hash) {
					case 942927226:
					{
						this.cancel();
						break;
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
		public override void __hx_getFields(global::Array<object> baseArr) {
			baseArr.push("dissolved");
			baseArr.push("b");
			baseArr.push("a");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Callback {
	public class ListCell<T> : global::haxe.lang.HxObject, global::tink.core._Callback.ListCell, global::tink.core._Callback.LinkObject {
		
		public ListCell(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public ListCell(global::haxe.lang.Function cb, global::Array<object> list) {
			global::tink.core._Callback.ListCell<object>.__hx_ctor_tink_core__Callback_ListCell<T>(((global::tink.core._Callback.ListCell<T>) (this) ), ((global::haxe.lang.Function) (cb) ), ((global::Array<object>) (list) ));
		}
		
		
		protected static void __hx_ctor_tink_core__Callback_ListCell<T_c>(global::tink.core._Callback.ListCell<T_c> __hx_this, global::haxe.lang.Function cb, global::Array<object> list) {
			if (( cb == null )) {
				throw global::haxe.lang.HaxeException.wrap("callback expected but null received");
			}
			
			__hx_this.cb = cb;
			__hx_this.list = list;
		}
		
		
		public static object __hx_cast<T_c_c>(global::tink.core._Callback.ListCell me) {
			return ( (( me != null )) ? (me.tink_core__Callback_ListCell_cast<T_c_c>()) : default(object) );
		}
		
		
		public virtual object tink_core__Callback_ListCell_cast<T_c>() {
			if (global::haxe.lang.Runtime.eq(typeof(T), typeof(T_c))) {
				return this;
			}
			
			global::tink.core._Callback.ListCell<T_c> new_me = new global::tink.core._Callback.ListCell<T_c>(global::haxe.lang.EmptyObject.EMPTY);
			global::Array<object> fields = global::Reflect.fields(this);
			int i = 0;
			while (( i < fields.length )) {
				string field = global::haxe.lang.Runtime.toString(fields[i++]);
				global::Reflect.setField(new_me, field, global::Reflect.field(this, field));
			}
			
			return new_me;
		}
		
		
		public global::Array<object> list;
		
		public global::haxe.lang.Function cb;
		
		public void invoke(T data) {
			if (( this.cb != null )) {
				global::tink.core._Callback.Callback_Impl_.invoke<T>(((global::haxe.lang.Function) (this.cb) ), global::haxe.lang.Runtime.genericCast<T>(data));
			}
			
		}
		
		
		public virtual void clear() {
			this.list = null;
			this.cb = null;
		}
		
		
		public virtual void cancel() {
			global::Array<object> _g = this.list;
			if (( _g == null )) {
			}
			else {
				global::Array<object> v = _g;
				{
					this.clear();
					v.@remove(this);
				}
				
			}
			
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 22175:
					{
						this.cb = ((global::haxe.lang.Function) (@value) );
						return @value;
					}
					
					
					case 1202920542:
					{
						this.list = ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (@value) ))) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 942927226:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "cancel", 942927226)) );
					}
					
					
					case 1213952397:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "clear", 1213952397)) );
					}
					
					
					case 534804344:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "invoke", 534804344)) );
					}
					
					
					case 22175:
					{
						return this.cb;
					}
					
					
					case 1202920542:
					{
						return this.list;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, object[] dynargs) {
			unchecked {
				switch (hash) {
					case 942927226:
					{
						this.cancel();
						break;
					}
					
					
					case 1213952397:
					{
						this.clear();
						break;
					}
					
					
					case 534804344:
					{
						this.invoke(global::haxe.lang.Runtime.genericCast<T>(dynargs[0]));
						break;
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
		public override void __hx_getFields(global::Array<object> baseArr) {
			baseArr.push("cb");
			baseArr.push("list");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Callback {
	[global::haxe.lang.GenericInterface(typeof(global::tink.core._Callback.ListCell<object>))]
	public interface ListCell : global::haxe.lang.IHxObject, global::haxe.lang.IGenericObject {
		
		object tink_core__Callback_ListCell_cast<T_c>();
		
		void clear();
		
		void cancel();
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Callback {
	public sealed class CallbackList_Impl_ {
		
		
		
		[global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
		public static global::Array<object> _new<T>() {
			global::Array<object> this1 = new global::Array<object>(new object[]{});
			return ((global::Array<object>) (this1) );
		}
		
		
		public static int get_length<T>(global::Array<object> this1) {
			return this1.length;
		}
		
		
		public static global::tink.core._Callback.LinkObject @add<T>(global::Array<object> this1, global::haxe.lang.Function cb) {
			global::tink.core._Callback.ListCell<T> node = new global::tink.core._Callback.ListCell<T>(cb, this1);
			this1.push(node);
			return node;
		}
		
		
		public static void invoke<T>(global::Array<object> this1, T data) {
			int _g = 0;
			global::Array<object> _g1 = this1.copy();
			while (( _g < _g1.length )) {
				global::tink.core._Callback.ListCell<T> cell = ((global::tink.core._Callback.ListCell<T>) (global::tink.core._Callback.ListCell<object>.__hx_cast<T>(((global::tink.core._Callback.ListCell) (_g1[_g]) ))) );
				 ++ _g;
				if (( cell.cb != null )) {
					global::tink.core._Callback.Callback_Impl_.invoke<T>(((global::haxe.lang.Function) (cell.cb) ), global::haxe.lang.Runtime.genericCast<T>(data));
				}
				
			}
			
		}
		
		
		public static void clear<T>(global::Array<object> this1) {
			int _g = 0;
			global::Array<object> _g1 = this1.splice(0, this1.length);
			while (( _g < _g1.length )) {
				global::tink.core._Callback.ListCell<T> cell = ((global::tink.core._Callback.ListCell<T>) (global::tink.core._Callback.ListCell<object>.__hx_cast<T>(((global::tink.core._Callback.ListCell) (_g1[_g]) ))) );
				 ++ _g;
				cell.clear();
			}
			
		}
		
		
		public static void invokeAndClear<T>(global::Array<object> this1, T data) {
			int _g = 0;
			global::Array<object> _g1 = this1.splice(0, this1.length);
			while (( _g < _g1.length )) {
				global::tink.core._Callback.ListCell<T> cell = ((global::tink.core._Callback.ListCell<T>) (global::tink.core._Callback.ListCell<object>.__hx_cast<T>(((global::tink.core._Callback.ListCell) (_g1[_g]) ))) );
				 ++ _g;
				if (( cell.cb != null )) {
					global::tink.core._Callback.Callback_Impl_.invoke<T>(((global::haxe.lang.Function) (cell.cb) ), global::haxe.lang.Runtime.genericCast<T>(data));
				}
				
			}
			
		}
		
		
	}
}


