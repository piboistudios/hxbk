// Generated by Haxe 4.0.0-rc.2+77068e10c

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Signal {
	public sealed class Signal_Impl_ {
		
		[global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
		public static global::tink.core.SignalObject<T> _new<T>(global::haxe.lang.Function f) {
			global::tink.core.SignalObject<T> this1 = new global::tink.core._Signal.SimpleSignal<T>(((global::haxe.lang.Function) (f) ));
			return ((global::tink.core.SignalObject<T>) (this1) );
		}
		
		
		public static global::tink.core.SignalObject<A> map<A, T>(global::tink.core.SignalObject<T> this1, global::haxe.lang.Function f, global::haxe.lang.Null<bool> gather) {
			global::haxe.lang.Null<bool> gather1 = ( ( ! (gather.hasValue) ) ? (new global::haxe.lang.Null<bool>(true, true)) : (gather) );
			global::tink.core.SignalObject<A> this2 = new global::tink.core._Signal.SimpleSignal<A>(((global::haxe.lang.Function) (new global::tink.core._Signal.Signal_Impl__map_16__Fun<T, A>(((global::tink.core.SignalObject<T>) (global::tink.core.SignalObject__Statics_.__hx_cast<T>(((global::tink.core.SignalObject) (this1) ))) ), f)) ));
			global::tink.core.SignalObject<A> ret = ((global::tink.core.SignalObject<A>) (this2) );
			if (((gather1)).@value) {
				return global::tink.core._Signal.Signal_Impl_.gather<A>(((global::tink.core.SignalObject<A>) (ret) ));
			}
			else {
				return ret;
			}
			
		}
		
		
		public static global::tink.core.SignalObject<A> flatMap<A, T>(global::tink.core.SignalObject<T> this1, global::haxe.lang.Function f, global::haxe.lang.Null<bool> gather) {
			global::haxe.lang.Null<bool> gather1 = ( ( ! (gather.hasValue) ) ? (new global::haxe.lang.Null<bool>(true, true)) : (gather) );
			global::tink.core.SignalObject<A> this2 = new global::tink.core._Signal.SimpleSignal<A>(((global::haxe.lang.Function) (new global::tink.core._Signal.Signal_Impl__flatMap_27__Fun<T, A>(((global::tink.core.SignalObject<T>) (global::tink.core.SignalObject__Statics_.__hx_cast<T>(((global::tink.core.SignalObject) (this1) ))) ), f)) ));
			global::tink.core.SignalObject<A> ret = ((global::tink.core.SignalObject<A>) (this2) );
			if (((gather1)).@value) {
				return global::tink.core._Signal.Signal_Impl_.gather<A>(((global::tink.core.SignalObject<A>) (ret) ));
			}
			else {
				return ret;
			}
			
		}
		
		
		public static global::tink.core.SignalObject<T> filter<T>(global::tink.core.SignalObject<T> this1, global::haxe.lang.Function f, global::haxe.lang.Null<bool> gather) {
			global::haxe.lang.Null<bool> gather1 = ( ( ! (gather.hasValue) ) ? (new global::haxe.lang.Null<bool>(true, true)) : (gather) );
			global::tink.core.SignalObject<T> this2 = new global::tink.core._Signal.SimpleSignal<T>(((global::haxe.lang.Function) (new global::tink.core._Signal.Signal_Impl__filter_37__Fun<T>(this1, f)) ));
			global::tink.core.SignalObject<T> ret = ((global::tink.core.SignalObject<T>) (this2) );
			if (((gather1)).@value) {
				return global::tink.core._Signal.Signal_Impl_.gather<T>(((global::tink.core.SignalObject<T>) (ret) ));
			}
			else {
				return ret;
			}
			
		}
		
		
		public static global::tink.core.SignalObject<R> @select<R, T>(global::tink.core.SignalObject<T> this1, global::haxe.lang.Function selector, global::haxe.lang.Null<bool> gather) {
			global::haxe.lang.Null<bool> gather1 = ( ( ! (gather.hasValue) ) ? (new global::haxe.lang.Null<bool>(true, true)) : (gather) );
			global::tink.core.SignalObject<R> this2 = new global::tink.core._Signal.SimpleSignal<R>(((global::haxe.lang.Function) (new global::tink.core._Signal.Signal_Impl__select_44__Fun<T, R>(((global::tink.core.SignalObject<T>) (global::tink.core.SignalObject__Statics_.__hx_cast<T>(((global::tink.core.SignalObject) (this1) ))) ), selector)) ));
			global::tink.core.SignalObject<R> ret = ((global::tink.core.SignalObject<R>) (this2) );
			if (((gather1)).@value) {
				return global::tink.core._Signal.Signal_Impl_.gather<R>(((global::tink.core.SignalObject<R>) (ret) ));
			}
			else {
				return ret;
			}
			
		}
		
		
		public static global::tink.core.SignalObject<T> @join<T>(global::tink.core.SignalObject<T> this1, global::tink.core.SignalObject<T> other, global::haxe.lang.Null<bool> gather) {
			global::haxe.lang.Null<bool> gather1 = ( ( ! (gather.hasValue) ) ? (new global::haxe.lang.Null<bool>(true, true)) : (gather) );
			global::tink.core.SignalObject<T> this2 = new global::tink.core._Signal.SimpleSignal<T>(((global::haxe.lang.Function) (new global::tink.core._Signal.Signal_Impl__join_59__Fun<T>(this1, other)) ));
			global::tink.core.SignalObject<T> ret = ((global::tink.core.SignalObject<T>) (this2) );
			if (((gather1)).@value) {
				return global::tink.core._Signal.Signal_Impl_.gather<T>(((global::tink.core.SignalObject<T>) (ret) ));
			}
			else {
				return ret;
			}
			
		}
		
		
		public static global::tink.core._Future.FutureObject<T> nextTime<T>(global::tink.core.SignalObject<T> this1, global::haxe.lang.Function condition) {
			global::tink.core.FutureTrigger<T> ret = new global::tink.core.FutureTrigger<T>();
			global::tink.core._Callback.LinkObject[] link = new global::tink.core._Callback.LinkObject[]{null};
			bool[] immediate = new bool[]{false};
			global::tink.core._Callback.LinkObject tmp = this1.handle(new global::tink.core._Signal.Signal_Impl__nextTime_75__Fun<T>(ret, link, immediate, condition));
			link[0] = tmp;
			if (immediate[0]) {
				if (( ((global::tink.core._Callback.LinkObject) (link[0]) ) != null )) {
					((global::tink.core._Callback.LinkObject) (link[0]) ).cancel();
				}
				
			}
			
			return ((global::tink.core._Future.FutureObject<T>) (ret) );
		}
		
		
		public static global::tink.core.SignalObject<T> until<X, T>(global::tink.core.SignalObject<T> this1, global::tink.core._Future.FutureObject<X> end) {
			global::tink.core._Signal.Suspendable<T> ret = new global::tink.core._Signal.Suspendable<T>(((global::haxe.lang.Function) (new global::tink.core._Signal.Signal_Impl__until_89__Fun<T>(this1)) ));
			end.handle(global::tink.core._Callback.Callback_Impl_.fromNiladic<object>(((global::haxe.lang.Function) (new global::haxe.lang.Closure(ret, "kill", 1191829406)) )));
			return ret;
		}
		
		
		public static global::tink.core._Future.FutureObject<T> next<T>(global::tink.core.SignalObject<T> this1, global::haxe.lang.Function condition) {
			return global::tink.core._Signal.Signal_Impl_.nextTime<T>(((global::tink.core.SignalObject<T>) (this1) ), ((global::haxe.lang.Function) (condition) ));
		}
		
		
		public static global::tink.core.SignalObject<object> noise<T>(global::tink.core.SignalObject<T> this1) {
			return global::tink.core._Signal.Signal_Impl_.map<object, T>(((global::tink.core.SignalObject<T>) (this1) ), ((global::haxe.lang.Function) (new global::tink.core._Signal.Signal_Impl__noise_103__Fun<T>()) ), default(global::haxe.lang.Null<bool>));
		}
		
		
		public static global::tink.core.SignalObject<T> gather<T>(global::tink.core.SignalObject<T> this1) {
			global::tink.core.SignalTrigger<T> ret = global::tink.core._Signal.Signal_Impl_.trigger<T>();
			this1.handle(new global::tink.core._Signal.Signal_Impl__gather_112__Fun<T>(ret));
			return ((global::tink.core.SignalObject<T>) (ret) );
		}
		
		
		public static global::tink.core.SignalObject<T> generate<T>(global::haxe.lang.Function generator) {
			global::tink.core.SignalTrigger<T> ret = global::tink.core._Signal.Signal_Impl_.trigger<T>();
			generator.__hx_invoke1_o(default(double), ((global::haxe.lang.Function) (new global::haxe.lang.Closure(ret, "trigger", 635393336)) ));
			return ret;
		}
		
		
		public static global::tink.core.SignalTrigger<T> trigger<T>() {
			return new global::tink.core.SignalTrigger<T>();
		}
		
		
		public static global::tink.core.SignalObject<T> create<T>(global::haxe.lang.Function create) {
			return new global::tink.core._Signal.Suspendable<T>(((global::haxe.lang.Function) (create) ));
		}
		
		
		public static global::tink.core.SignalObject<A> ofClassical<A>(global::haxe.lang.Function @add, global::haxe.lang.Function @remove, global::haxe.lang.Null<bool> gather) {
			global::haxe.lang.Null<bool> gather1 = ( ( ! (gather.hasValue) ) ? (new global::haxe.lang.Null<bool>(true, true)) : (gather) );
			global::tink.core.SignalObject<A> this1 = new global::tink.core._Signal.SimpleSignal<A>(((global::haxe.lang.Function) (new global::tink.core._Signal.Signal_Impl__ofClassical_136__Fun<A>(@remove, @add)) ));
			global::tink.core.SignalObject<A> ret = ((global::tink.core.SignalObject<A>) (this1) );
			if (((gather1)).@value) {
				return global::tink.core._Signal.Signal_Impl_.gather<A>(((global::tink.core.SignalObject<A>) (ret) ));
			}
			else {
				return ret;
			}
			
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Signal {
	public class Signal_Impl__map_16__Fun_0<T, A> : global::haxe.lang.Function {
		
		public Signal_Impl__map_16__Fun_0(global::haxe.lang.Function f, global::haxe.lang.Function cb) : base(1, 0) {
			this.f = f;
			this.cb = cb;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			T result = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T>(__fn_dyn1)) );
			A this3 = global::haxe.lang.Runtime.genericCast<A>(this.f.__hx_invoke1_o(default(double), result));
			global::tink.core._Callback.Callback_Impl_.invoke<A>(((global::haxe.lang.Function) (this.cb) ), global::haxe.lang.Runtime.genericCast<A>(this3));
			return null;
		}
		
		
		public global::haxe.lang.Function f;
		
		public global::haxe.lang.Function cb;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Signal {
	public class Signal_Impl__map_16__Fun<T, A> : global::haxe.lang.Function {
		
		public Signal_Impl__map_16__Fun(global::tink.core.SignalObject<T> this1, global::haxe.lang.Function f) : base(1, 0) {
			this.this1 = this1;
			this.f = f;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::haxe.lang.Function cb = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float1) )) )) : (((global::haxe.lang.Function) (__fn_dyn1) )) );
			return this.this1.handle(new global::tink.core._Signal.Signal_Impl__map_16__Fun_0<T, A>(this.f, cb));
		}
		
		
		public global::tink.core.SignalObject<T> this1;
		
		public global::haxe.lang.Function f;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Signal {
	public class Signal_Impl__flatMap_27__Fun_0<T, A> : global::haxe.lang.Function {
		
		public Signal_Impl__flatMap_27__Fun_0(global::haxe.lang.Function f, global::haxe.lang.Function cb) : base(1, 0) {
			this.f = f;
			this.cb = cb;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			T result = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T>(__fn_dyn1)) );
			((global::tink.core._Future.FutureObject<A>) (global::tink.core._Future.FutureObject__Statics_.__hx_cast<A>(((global::tink.core._Future.FutureObject) (this.f.__hx_invoke1_o(default(double), result)) ))) ).handle(this.cb);
			return null;
		}
		
		
		public global::haxe.lang.Function f;
		
		public global::haxe.lang.Function cb;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Signal {
	public class Signal_Impl__flatMap_27__Fun<T, A> : global::haxe.lang.Function {
		
		public Signal_Impl__flatMap_27__Fun(global::tink.core.SignalObject<T> this1, global::haxe.lang.Function f) : base(1, 0) {
			this.this1 = this1;
			this.f = f;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::haxe.lang.Function cb = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float1) )) )) : (((global::haxe.lang.Function) (__fn_dyn1) )) );
			return this.this1.handle(new global::tink.core._Signal.Signal_Impl__flatMap_27__Fun_0<T, A>(this.f, cb));
		}
		
		
		public global::tink.core.SignalObject<T> this1;
		
		public global::haxe.lang.Function f;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Signal {
	public class Signal_Impl__filter_37__Fun_0<T> : global::haxe.lang.Function {
		
		public Signal_Impl__filter_37__Fun_0(global::haxe.lang.Function f, global::haxe.lang.Function cb) : base(1, 0) {
			this.f = f;
			this.cb = cb;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			T result = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T>(__fn_dyn1)) );
			if (global::haxe.lang.Runtime.toBool(this.f.__hx_invoke1_o(default(double), result))) {
				global::tink.core._Callback.Callback_Impl_.invoke<T>(((global::haxe.lang.Function) (this.cb) ), global::haxe.lang.Runtime.genericCast<T>(result));
			}
			
			return null;
		}
		
		
		public global::haxe.lang.Function f;
		
		public global::haxe.lang.Function cb;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Signal {
	public class Signal_Impl__filter_37__Fun<T> : global::haxe.lang.Function {
		
		public Signal_Impl__filter_37__Fun(global::tink.core.SignalObject<T> this1, global::haxe.lang.Function f) : base(1, 0) {
			this.this1 = this1;
			this.f = f;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::haxe.lang.Function cb = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float1) )) )) : (((global::haxe.lang.Function) (__fn_dyn1) )) );
			return this.this1.handle(new global::tink.core._Signal.Signal_Impl__filter_37__Fun_0<T>(this.f, cb));
		}
		
		
		public global::tink.core.SignalObject<T> this1;
		
		public global::haxe.lang.Function f;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Signal {
	public class Signal_Impl__select_44__Fun_0<T, R> : global::haxe.lang.Function {
		
		public Signal_Impl__select_44__Fun_0(global::haxe.lang.Function selector, global::haxe.lang.Function cb) : base(1, 0) {
			this.selector = selector;
			this.cb = cb;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				T result = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T>(__fn_dyn1)) );
				global::haxe.ds.Option _g = ((global::haxe.ds.Option) (this.selector.__hx_invoke1_o(default(double), result)) );
				switch (_g._hx_index) {
					case 0:
					{
						R v = global::haxe.lang.Runtime.genericCast<R>(( _g as global::haxe.ds.Option_Some ).v);
						global::tink.core._Callback.Callback_Impl_.invoke<R>(((global::haxe.lang.Function) (this.cb) ), global::haxe.lang.Runtime.genericCast<R>(v));
						break;
					}
					
					
					case 1:
					{
						break;
					}
					
					
				}
				
				return null;
			}
		}
		
		
		public global::haxe.lang.Function selector;
		
		public global::haxe.lang.Function cb;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Signal {
	public class Signal_Impl__select_44__Fun<T, R> : global::haxe.lang.Function {
		
		public Signal_Impl__select_44__Fun(global::tink.core.SignalObject<T> this1, global::haxe.lang.Function selector) : base(1, 0) {
			this.this1 = this1;
			this.selector = selector;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::haxe.lang.Function cb = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float1) )) )) : (((global::haxe.lang.Function) (__fn_dyn1) )) );
			return this.this1.handle(new global::tink.core._Signal.Signal_Impl__select_44__Fun_0<T, R>(this.selector, cb));
		}
		
		
		public global::tink.core.SignalObject<T> this1;
		
		public global::haxe.lang.Function selector;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Signal {
	public class Signal_Impl__join_59__Fun<T> : global::haxe.lang.Function {
		
		public Signal_Impl__join_59__Fun(global::tink.core.SignalObject<T> this1, global::tink.core.SignalObject<T> other) : base(1, 0) {
			this.this1 = this1;
			this.other = other;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::haxe.lang.Function cb = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float1) )) )) : (((global::haxe.lang.Function) (__fn_dyn1) )) );
			return new global::tink.core._Callback.LinkPair(this.this1.handle(cb), this.other.handle(cb));
		}
		
		
		public global::tink.core.SignalObject<T> this1;
		
		public global::tink.core.SignalObject<T> other;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Signal {
	public class Signal_Impl__nextTime_75__Fun<T> : global::haxe.lang.Function {
		
		public Signal_Impl__nextTime_75__Fun(global::tink.core.FutureTrigger<T> ret, global::tink.core._Callback.LinkObject[] link, bool[] immediate, global::haxe.lang.Function condition) : base(1, 0) {
			this.ret = ret;
			this.link = link;
			this.immediate = immediate;
			this.condition = condition;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			T v = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T>(__fn_dyn1)) );
			if (( ( this.condition == null ) || global::haxe.lang.Runtime.toBool(((global::haxe.lang.Function) (this.condition) ).__hx_invoke1_o(default(double), v)) )) {
				this.ret.trigger(v);
				if (( this.link[0] == null )) {
					this.immediate[0] = true;
				}
				else if (( ((global::tink.core._Callback.LinkObject) (this.link[0]) ) != null )) {
					((global::tink.core._Callback.LinkObject) (this.link[0]) ).cancel();
				}
				
			}
			
			return null;
		}
		
		
		public global::tink.core.FutureTrigger<T> ret;
		
		public global::tink.core._Callback.LinkObject[] link;
		
		public bool[] immediate;
		
		public global::haxe.lang.Function condition;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Signal {
	public class Signal_Impl__until_89__Fun<T> : global::haxe.lang.Function {
		
		public Signal_Impl__until_89__Fun(global::tink.core.SignalObject<T> this1) : base(1, 0) {
			this.this1 = this1;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::haxe.lang.Function @yield = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float1) )) )) : (((global::haxe.lang.Function) (__fn_dyn1) )) );
			global::tink.core._Callback.LinkObject this2 = this.this1.handle(@yield);
			if (( ((global::tink.core._Callback.LinkObject) (this2) ) == null )) {
				return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(typeof(global::tink.core._Callback.CallbackLink_Impl_), "noop", 1225397154)) );
			}
			else {
				return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(((global::tink.core._Callback.LinkObject) (this2) ), "cancel", 942927226)) );
			}
			
		}
		
		
		public global::tink.core.SignalObject<T> this1;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Signal {
	public class Signal_Impl__noise_103__Fun<T> : global::haxe.lang.Function {
		
		public Signal_Impl__noise_103__Fun() : base(1, 0) {
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			T _ = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T>(__fn_dyn1)) );
			return global::tink.core.TinkNoise.Noise;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Signal {
	public class Signal_Impl__gather_112__Fun<T> : global::haxe.lang.Function {
		
		public Signal_Impl__gather_112__Fun(global::tink.core.SignalTrigger<T> ret) : base(1, 0) {
			this.ret = ret;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			T x = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T>(__fn_dyn1)) );
			global::tink.core._Callback.CallbackList_Impl_.invoke<T>(((global::Array<object>) (this.ret.handlers) ), global::haxe.lang.Runtime.genericCast<T>(x));
			return null;
		}
		
		
		public global::tink.core.SignalTrigger<T> ret;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Signal {
	public class Signal_Impl__ofClassical_137__Fun<A> : global::haxe.lang.Function {
		
		public Signal_Impl__ofClassical_137__Fun(global::haxe.lang.Function cb) : base(1, 0) {
			this.cb = cb;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			A a = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<A>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<A>(__fn_dyn1)) );
			global::tink.core._Callback.Callback_Impl_.invoke<A>(((global::haxe.lang.Function) (this.cb) ), global::haxe.lang.Runtime.genericCast<A>(a));
			return null;
		}
		
		
		public global::haxe.lang.Function cb;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Signal {
	public class Signal_Impl__ofClassical_139__Fun<A> : global::haxe.lang.Function {
		
		public Signal_Impl__ofClassical_139__Fun(global::haxe.lang.Function f1, global::haxe.lang.Function a1) : base(0, 0) {
			this.f1 = f1;
			this.a1 = a1;
		}
		
		
		public override object __hx_invoke0_o() {
			this.f1.__hx_invoke1_o(default(double), this.a1);
			return null;
		}
		
		
		public global::haxe.lang.Function f1;
		
		public global::haxe.lang.Function a1;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Signal {
	public class Signal_Impl__ofClassical_136__Fun<A> : global::haxe.lang.Function {
		
		public Signal_Impl__ofClassical_136__Fun(global::haxe.lang.Function @remove, global::haxe.lang.Function @add) : base(1, 0) {
			this.@remove = @remove;
			this.@add = @add;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::haxe.lang.Function cb = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float1) )) )) : (((global::haxe.lang.Function) (__fn_dyn1) )) );
			global::haxe.lang.Function f = new global::tink.core._Signal.Signal_Impl__ofClassical_137__Fun<A>(cb);
			this.@add.__hx_invoke1_o(default(double), f);
			global::haxe.lang.Function f1 = this.@remove;
			global::haxe.lang.Function a1 = f;
			global::tink.core._Callback.LinkObject this2 = new global::tink.core._Callback.SimpleLink(((global::haxe.lang.Function) (new global::tink.core._Signal.Signal_Impl__ofClassical_139__Fun<A>(f1, a1)) ));
			return ((global::tink.core._Callback.LinkObject) (this2) );
		}
		
		
		public global::haxe.lang.Function @remove;
		
		public global::haxe.lang.Function @add;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core {
	public interface SignalObject<T> : global::haxe.lang.IHxObject, global::tink.core.SignalObject {
		
		global::tink.core._Callback.LinkObject handle(global::haxe.lang.Function handler);
		
	}
	public class SignalObject__Statics_{
		public static object __hx_cast<T_c_c>(global::tink.core.SignalObject me) {
			return ( (( me != null )) ? (me.tink_core_SignalObject_cast<T_c_c>()) : default(object) );
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core {
	[global::haxe.lang.GenericInterface(typeof(global::tink.core.SignalObject<object>))]
	public interface SignalObject : global::haxe.lang.IHxObject, global::haxe.lang.IGenericObject {
		
		object tink_core_SignalObject_cast<T_c>();
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core {
	public class SignalTrigger<T> : global::haxe.lang.HxObject, global::tink.core.SignalTrigger, global::tink.core.SignalObject<T> {
		
		public SignalTrigger(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public SignalTrigger() {
			global::tink.core.SignalTrigger<object>.__hx_ctor_tink_core_SignalTrigger<T>(((global::tink.core.SignalTrigger<T>) (this) ));
		}
		
		
		protected static void __hx_ctor_tink_core_SignalTrigger<T_c>(global::tink.core.SignalTrigger<T_c> __hx_this) {
			__hx_this.handlers = ((global::Array<object>) (new global::Array<object>(new object[]{})) );
			{
			}
			
		}
		
		
		public static object __hx_cast<T_c_c>(global::tink.core.SignalTrigger me) {
			return ( (( me != null )) ? (me.tink_core_SignalTrigger_cast<T_c_c>()) : default(object) );
		}
		
		
		public virtual object tink_core_SignalTrigger_cast<T_c>() {
			if (global::haxe.lang.Runtime.eq(typeof(T), typeof(T_c))) {
				return this;
			}
			
			global::tink.core.SignalTrigger<T_c> new_me = new global::tink.core.SignalTrigger<T_c>(global::haxe.lang.EmptyObject.EMPTY);
			global::Array<object> fields = global::Reflect.fields(this);
			int i = 0;
			while (( i < fields.length )) {
				string field = global::haxe.lang.Runtime.toString(fields[i++]);
				global::Reflect.setField(new_me, field, global::Reflect.field(this, field));
			}
			
			return new_me;
		}
		
		
		public virtual object tink_core_SignalObject_cast<T_c>() {
			return this.tink_core_SignalTrigger_cast<T>();
		}
		
		
		public global::Array<object> handlers;
		
		public void trigger(T @event) {
			global::tink.core._Callback.CallbackList_Impl_.invoke<T>(((global::Array<object>) (this.handlers) ), global::haxe.lang.Runtime.genericCast<T>(@event));
		}
		
		
		public int getLength() {
			return ((global::Array<object>) (this.handlers) ).length;
		}
		
		
		public global::tink.core._Callback.LinkObject handle(global::haxe.lang.Function cb) {
			return global::tink.core._Callback.CallbackList_Impl_.@add<T>(((global::Array<object>) (this.handlers) ), ((global::haxe.lang.Function) (cb) ));
		}
		
		
		public void clear() {
			global::tink.core._Callback.CallbackList_Impl_.clear<T>(((global::Array<object>) (this.handlers) ));
		}
		
		
		public global::tink.core.SignalObject<T> asSignal() {
			return this;
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1428431209:
					{
						this.handlers = ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (@value) ))) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1130117370:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "asSignal", 1130117370)) );
					}
					
					
					case 1213952397:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "clear", 1213952397)) );
					}
					
					
					case 939361192:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "handle", 939361192)) );
					}
					
					
					case 459152924:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "getLength", 459152924)) );
					}
					
					
					case 635393336:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "trigger", 635393336)) );
					}
					
					
					case 1428431209:
					{
						return this.handlers;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, object[] dynargs) {
			unchecked {
				switch (hash) {
					case 1130117370:
					{
						return this.asSignal();
					}
					
					
					case 1213952397:
					{
						this.clear();
						break;
					}
					
					
					case 939361192:
					{
						return this.handle(((global::haxe.lang.Function) (dynargs[0]) ));
					}
					
					
					case 459152924:
					{
						return this.getLength();
					}
					
					
					case 635393336:
					{
						this.trigger(global::haxe.lang.Runtime.genericCast<T>(dynargs[0]));
						break;
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
		public override void __hx_getFields(global::Array<object> baseArr) {
			baseArr.push("handlers");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core {
	[global::haxe.lang.GenericInterface(typeof(global::tink.core.SignalTrigger<object>))]
	public interface SignalTrigger : global::haxe.lang.IHxObject, global::haxe.lang.IGenericObject {
		
		object tink_core_SignalTrigger_cast<T_c>();
		
		object tink_core_SignalObject_cast<T_c>();
		
		int getLength();
		
		void clear();
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Signal {
	public class SimpleSignal<T> : global::haxe.lang.HxObject, global::tink.core._Signal.SimpleSignal, global::tink.core.SignalObject<T> {
		
		public SimpleSignal(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public SimpleSignal(global::haxe.lang.Function f) {
			global::tink.core._Signal.SimpleSignal<object>.__hx_ctor_tink_core__Signal_SimpleSignal<T>(((global::tink.core._Signal.SimpleSignal<T>) (this) ), ((global::haxe.lang.Function) (f) ));
		}
		
		
		protected static void __hx_ctor_tink_core__Signal_SimpleSignal<T_c>(global::tink.core._Signal.SimpleSignal<T_c> __hx_this, global::haxe.lang.Function f) {
			__hx_this.f = f;
		}
		
		
		public static object __hx_cast<T_c_c>(global::tink.core._Signal.SimpleSignal me) {
			return ( (( me != null )) ? (me.tink_core__Signal_SimpleSignal_cast<T_c_c>()) : default(object) );
		}
		
		
		public virtual object tink_core__Signal_SimpleSignal_cast<T_c>() {
			if (global::haxe.lang.Runtime.eq(typeof(T), typeof(T_c))) {
				return this;
			}
			
			global::tink.core._Signal.SimpleSignal<T_c> new_me = new global::tink.core._Signal.SimpleSignal<T_c>(((global::haxe.lang.EmptyObject) (global::haxe.lang.EmptyObject.EMPTY) ));
			global::Array<object> fields = global::Reflect.fields(this);
			int i = 0;
			while (( i < fields.length )) {
				string field = global::haxe.lang.Runtime.toString(fields[i++]);
				global::Reflect.setField(new_me, field, global::Reflect.field(this, field));
			}
			
			return new_me;
		}
		
		
		public virtual object tink_core_SignalObject_cast<T_c>() {
			return this.tink_core__Signal_SimpleSignal_cast<T>();
		}
		
		
		public global::haxe.lang.Function f;
		
		public global::tink.core._Callback.LinkObject handle(global::haxe.lang.Function cb) {
			return ((global::tink.core._Callback.LinkObject) (this.f.__hx_invoke1_o(default(double), cb)) );
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 102:
					{
						this.f = ((global::haxe.lang.Function) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 939361192:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "handle", 939361192)) );
					}
					
					
					case 102:
					{
						return this.f;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, object[] dynargs) {
			unchecked {
				switch (hash) {
					case 939361192:
					{
						return this.handle(((global::haxe.lang.Function) (dynargs[0]) ));
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
			}
		}
		
		
		public override void __hx_getFields(global::Array<object> baseArr) {
			baseArr.push("f");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Signal {
	[global::haxe.lang.GenericInterface(typeof(global::tink.core._Signal.SimpleSignal<object>))]
	public interface SimpleSignal : global::haxe.lang.IHxObject, global::haxe.lang.IGenericObject {
		
		object tink_core__Signal_SimpleSignal_cast<T_c>();
		
		object tink_core_SignalObject_cast<T_c>();
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Signal {
	public class Suspendable<T> : global::haxe.lang.HxObject, global::tink.core._Signal.Suspendable, global::tink.core.SignalObject<T> {
		
		public Suspendable(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public Suspendable(global::haxe.lang.Function activate) {
			global::tink.core._Signal.Suspendable<object>.__hx_ctor_tink_core__Signal_Suspendable<T>(((global::tink.core._Signal.Suspendable<T>) (this) ), ((global::haxe.lang.Function) (activate) ));
		}
		
		
		protected static void __hx_ctor_tink_core__Signal_Suspendable<T_c>(global::tink.core._Signal.Suspendable<T_c> __hx_this, global::haxe.lang.Function activate) {
			__hx_this.killed = false;
			__hx_this.trigger = new global::tink.core.SignalTrigger<T_c>();
			{
				__hx_this.activate = activate;
			}
			
		}
		
		
		public static object __hx_cast<T_c_c>(global::tink.core._Signal.Suspendable me) {
			return ( (( me != null )) ? (me.tink_core__Signal_Suspendable_cast<T_c_c>()) : default(object) );
		}
		
		
		public virtual object tink_core__Signal_Suspendable_cast<T_c>() {
			if (global::haxe.lang.Runtime.eq(typeof(T), typeof(T_c))) {
				return this;
			}
			
			global::tink.core._Signal.Suspendable<T_c> new_me = new global::tink.core._Signal.Suspendable<T_c>(((global::haxe.lang.EmptyObject) (global::haxe.lang.EmptyObject.EMPTY) ));
			global::Array<object> fields = global::Reflect.fields(this);
			int i = 0;
			while (( i < fields.length )) {
				string field = global::haxe.lang.Runtime.toString(fields[i++]);
				global::Reflect.setField(new_me, field, global::Reflect.field(this, field));
			}
			
			return new_me;
		}
		
		
		public virtual object tink_core_SignalObject_cast<T_c>() {
			return this.tink_core__Signal_Suspendable_cast<T>();
		}
		
		
		public global::tink.core.SignalTrigger<T> trigger;
		
		public global::haxe.lang.Function activate;
		
		public global::haxe.lang.Function suspend;
		
		public global::tink.core._Callback.LinkObject check;
		
		public bool killed;
		
		public virtual void kill() {
			if ( ! (this.killed) ) {
				this.killed = true;
				this.trigger = null;
			}
			
		}
		
		
		public virtual global::tink.core._Callback.LinkObject handle(global::haxe.lang.Function cb) {
			global::tink.core._Signal.Suspendable<T> _gthis = this;
			if (this.killed) {
				return null;
			}
			
			if (( ((global::Array<object>) (this.trigger.handlers) ).length == 0 )) {
				this.suspend = ((global::haxe.lang.Function) (this.activate.__hx_invoke1_o(default(double), ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this.trigger, "trigger", 635393336)) ))) );
			}
			
			global::tink.core._Callback.LinkObject a = global::tink.core._Callback.CallbackList_Impl_.@add<T>(((global::Array<object>) (this.trigger.handlers) ), ((global::haxe.lang.Function) (cb) ));
			global::tink.core._Callback.LinkObject this1 = new global::tink.core._Callback.SimpleLink(((global::haxe.lang.Function) (new global::tink.core._Signal.Suspendable_handle_179__Fun<T>(_gthis)) ));
			return new global::tink.core._Callback.LinkPair(a, ((global::tink.core._Callback.LinkObject) (this1) ));
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 83352445:
					{
						this.killed = global::haxe.lang.Runtime.toBool(@value);
						return @value;
					}
					
					
					case 1169594568:
					{
						this.check = ((global::tink.core._Callback.LinkObject) (@value) );
						return @value;
					}
					
					
					case 2001678204:
					{
						this.suspend = ((global::haxe.lang.Function) (@value) );
						return @value;
					}
					
					
					case 1705778099:
					{
						this.activate = ((global::haxe.lang.Function) (@value) );
						return @value;
					}
					
					
					case 635393336:
					{
						this.trigger = ((global::tink.core.SignalTrigger<T>) (global::tink.core.SignalTrigger<object>.__hx_cast<T>(((global::tink.core.SignalTrigger) (@value) ))) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 939361192:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "handle", 939361192)) );
					}
					
					
					case 1191829406:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "kill", 1191829406)) );
					}
					
					
					case 83352445:
					{
						return this.killed;
					}
					
					
					case 1169594568:
					{
						return this.check;
					}
					
					
					case 2001678204:
					{
						return this.suspend;
					}
					
					
					case 1705778099:
					{
						return this.activate;
					}
					
					
					case 635393336:
					{
						return this.trigger;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, object[] dynargs) {
			unchecked {
				switch (hash) {
					case 939361192:
					{
						return this.handle(((global::haxe.lang.Function) (dynargs[0]) ));
					}
					
					
					case 1191829406:
					{
						this.kill();
						break;
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				return null;
			}
		}
		
		
		public override void __hx_getFields(global::Array<object> baseArr) {
			baseArr.push("killed");
			baseArr.push("check");
			baseArr.push("suspend");
			baseArr.push("activate");
			baseArr.push("trigger");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Signal {
	public class Suspendable_handle_179__Fun<T> : global::haxe.lang.Function {
		
		public Suspendable_handle_179__Fun(global::tink.core._Signal.Suspendable<T> _gthis) : base(0, 0) {
			this._gthis = _gthis;
		}
		
		
		public override object __hx_invoke0_o() {
			if (( ((global::Array<object>) (this._gthis.trigger.handlers) ).length == 0 )) {
				this._gthis.suspend.__hx_invoke0_o();
				this._gthis.suspend = null;
			}
			
			return null;
		}
		
		
		public global::tink.core._Signal.Suspendable<T> _gthis;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Signal {
	[global::haxe.lang.GenericInterface(typeof(global::tink.core._Signal.Suspendable<object>))]
	public interface Suspendable : global::haxe.lang.IHxObject, global::haxe.lang.IGenericObject {
		
		object tink_core__Signal_Suspendable_cast<T_c>();
		
		object tink_core_SignalObject_cast<T_c>();
		
		void kill();
		
	}
}


