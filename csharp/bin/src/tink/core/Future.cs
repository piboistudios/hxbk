// Generated by Haxe 4.0.0-rc.2+77068e10c

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Future {
	public interface FutureObject<T> : global::haxe.lang.IHxObject, global::tink.core._Future.FutureObject {
		
		global::tink.core._Future.FutureObject<R> map<R>(global::haxe.lang.Function f);
		
		global::tink.core._Future.FutureObject<R> flatMap<R>(global::haxe.lang.Function f);
		
		global::tink.core._Callback.LinkObject handle(global::haxe.lang.Function callback);
		
		global::tink.core._Future.FutureObject<T> gather();
		
		global::tink.core._Future.FutureObject<T> eager();
		
	}
	public class FutureObject__Statics_{
		public static object __hx_cast<T_c_c>(global::tink.core._Future.FutureObject me) {
			return ( (( me != null )) ? (me.tink_core__Future_FutureObject_cast<T_c_c>()) : default(object) );
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Future {
	[global::haxe.lang.GenericInterface(typeof(global::tink.core._Future.FutureObject<object>))]
	public interface FutureObject : global::haxe.lang.IHxObject, global::haxe.lang.IGenericObject {
		
		object tink_core__Future_FutureObject_cast<T_c>();
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Future {
	public class NeverFuture<T> : global::haxe.lang.HxObject, global::tink.core._Future.NeverFuture, global::tink.core._Future.FutureObject<T> {
		
		static NeverFuture() {
			global::tink.core._Future.NeverFuture<object>.inst = new global::tink.core._Future.NeverFuture<object>();
		}
		
		
		public NeverFuture(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public NeverFuture() {
			global::tink.core._Future.NeverFuture<object>.__hx_ctor_tink_core__Future_NeverFuture<T>(((global::tink.core._Future.NeverFuture<T>) (this) ));
		}
		
		
		protected static void __hx_ctor_tink_core__Future_NeverFuture<T_c>(global::tink.core._Future.NeverFuture<T_c> __hx_this) {
		}
		
		
		public static object __hx_cast<T_c_c>(global::tink.core._Future.NeverFuture me) {
			return ( (( me != null )) ? (me.tink_core__Future_NeverFuture_cast<T_c_c>()) : default(object) );
		}
		
		
		public static global::tink.core._Future.NeverFuture inst;
		
		public virtual object tink_core__Future_NeverFuture_cast<T_c>() {
			if (global::haxe.lang.Runtime.eq(typeof(T), typeof(T_c))) {
				return this;
			}
			
			global::tink.core._Future.NeverFuture<T_c> new_me = new global::tink.core._Future.NeverFuture<T_c>(global::haxe.lang.EmptyObject.EMPTY);
			global::Array<object> fields = global::Reflect.fields(this);
			int i = 0;
			while (( i < fields.length )) {
				string field = global::haxe.lang.Runtime.toString(fields[i++]);
				global::Reflect.setField(new_me, field, global::Reflect.field(this, field));
			}
			
			return new_me;
		}
		
		
		public virtual object tink_core__Future_FutureObject_cast<T_c>() {
			return this.tink_core__Future_NeverFuture_cast<T>();
		}
		
		
		public virtual global::tink.core._Future.FutureObject<R> map<R>(global::haxe.lang.Function f) {
			return ((global::tink.core._Future.FutureObject<R>) (global::tink.core._Future.FutureObject__Statics_.__hx_cast<R>(((global::tink.core._Future.FutureObject) (((object) (global::tink.core._Future.NeverFuture<object>.inst) )) ))) );
		}
		
		
		public virtual global::tink.core._Future.FutureObject<R> flatMap<R>(global::haxe.lang.Function f) {
			return ((global::tink.core._Future.FutureObject<R>) (global::tink.core._Future.FutureObject__Statics_.__hx_cast<R>(((global::tink.core._Future.FutureObject) (((object) (global::tink.core._Future.NeverFuture<object>.inst) )) ))) );
		}
		
		
		public virtual global::tink.core._Callback.LinkObject handle(global::haxe.lang.Function callback) {
			return null;
		}
		
		
		public virtual global::tink.core._Future.FutureObject<T> gather() {
			return ((global::tink.core._Future.FutureObject<T>) (global::tink.core._Future.FutureObject__Statics_.__hx_cast<T>(((global::tink.core._Future.FutureObject) (((object) (global::tink.core._Future.NeverFuture<object>.inst) )) ))) );
		}
		
		
		public virtual global::tink.core._Future.FutureObject<T> eager() {
			return ((global::tink.core._Future.FutureObject<T>) (global::tink.core._Future.FutureObject__Statics_.__hx_cast<T>(((global::tink.core._Future.FutureObject) (((object) (global::tink.core._Future.NeverFuture<object>.inst) )) ))) );
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1743047096:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "eager", 1743047096)) );
					}
					
					
					case 1436316155:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "gather", 1436316155)) );
					}
					
					
					case 939361192:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "handle", 939361192)) );
					}
					
					
					case 1725829219:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "flatMap", 1725829219)) );
					}
					
					
					case 5442204:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "map", 5442204)) );
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, object[] dynargs) {
			unchecked {
				switch (hash) {
					case 1743047096:
					{
						return this.eager();
					}
					
					
					case 1436316155:
					{
						return this.gather();
					}
					
					
					case 939361192:
					{
						return this.handle(((global::haxe.lang.Function) (dynargs[0]) ));
					}
					
					
					case 1725829219:
					{
						return this.flatMap<object>(((global::haxe.lang.Function) (dynargs[0]) ));
					}
					
					
					case 5442204:
					{
						return this.map<object>(((global::haxe.lang.Function) (dynargs[0]) ));
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
			}
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Future {
	[global::haxe.lang.GenericInterface(typeof(global::tink.core._Future.NeverFuture<object>))]
	public interface NeverFuture : global::haxe.lang.IHxObject, global::haxe.lang.IGenericObject {
		
		object tink_core__Future_NeverFuture_cast<T_c>();
		
		object tink_core__Future_FutureObject_cast<T_c>();
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Future {
	public class SyncFuture<T> : global::haxe.lang.HxObject, global::tink.core._Future.SyncFuture, global::tink.core._Future.FutureObject<T> {
		
		public SyncFuture(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public SyncFuture(global::tink.core._Lazy.LazyObject<T> @value) {
			global::tink.core._Future.SyncFuture<object>.__hx_ctor_tink_core__Future_SyncFuture<T>(((global::tink.core._Future.SyncFuture<T>) (this) ), ((global::tink.core._Lazy.LazyObject<T>) (@value) ));
		}
		
		
		protected static void __hx_ctor_tink_core__Future_SyncFuture<T_c>(global::tink.core._Future.SyncFuture<T_c> __hx_this, global::tink.core._Lazy.LazyObject<T_c> @value) {
			__hx_this.@value = @value;
		}
		
		
		public static object __hx_cast<T_c_c>(global::tink.core._Future.SyncFuture me) {
			return ( (( me != null )) ? (me.tink_core__Future_SyncFuture_cast<T_c_c>()) : default(object) );
		}
		
		
		global::tink.core._Future.FutureObject<T> global::tink.core._Future.FutureObject<T>.eager() {
			return ((global::tink.core._Future.FutureObject<T>) (this.eager()) );
		}
		
		
		global::tink.core._Future.FutureObject<T> global::tink.core._Future.FutureObject<T>.gather() {
			return ((global::tink.core._Future.FutureObject<T>) (this.gather()) );
		}
		
		
		public virtual object tink_core__Future_SyncFuture_cast<T_c>() {
			if (global::haxe.lang.Runtime.eq(typeof(T), typeof(T_c))) {
				return this;
			}
			
			global::tink.core._Future.SyncFuture<T_c> new_me = new global::tink.core._Future.SyncFuture<T_c>(((global::haxe.lang.EmptyObject) (global::haxe.lang.EmptyObject.EMPTY) ));
			global::Array<object> fields = global::Reflect.fields(this);
			int i = 0;
			while (( i < fields.length )) {
				string field = global::haxe.lang.Runtime.toString(fields[i++]);
				global::Reflect.setField(new_me, field, global::Reflect.field(this, field));
			}
			
			return new_me;
		}
		
		
		public virtual object tink_core__Future_FutureObject_cast<T_c>() {
			return this.tink_core__Future_SyncFuture_cast<T>();
		}
		
		
		public global::tink.core._Lazy.LazyObject<T> @value;
		
		public global::tink.core._Future.FutureObject<R> map<R>(global::haxe.lang.Function f) {
			return new global::tink.core._Future.SyncFuture<R>(((global::tink.core._Lazy.LazyObject<R>) (((global::tink.core._Lazy.LazyObject<T>) (this.@value) ).map<R>(((global::haxe.lang.Function) (f) ))) ));
		}
		
		
		public global::tink.core._Future.FutureObject<R> flatMap<R>(global::haxe.lang.Function f) {
			global::tink.core._Lazy.LazyObject<object> l = ((global::tink.core._Lazy.LazyObject<T>) (this.@value) ).map<object>(((global::haxe.lang.Function) (f) ));
			return new global::tink.core._Future.SimpleFuture<R>(((global::haxe.lang.Function) (new global::tink.core._Future.SyncFuture_flatMap_239__Fun<R>(l)) ));
		}
		
		
		public virtual global::tink.core._Callback.LinkObject handle(global::haxe.lang.Function cb) {
			global::tink.core._Callback.Callback_Impl_.invoke<T>(((global::haxe.lang.Function) (cb) ), global::haxe.lang.Runtime.genericCast<T>(((global::tink.core._Lazy.LazyObject<T>) (this.@value) ).@get()));
			return null;
		}
		
		
		public virtual global::tink.core._Future.SyncFuture<T> eager() {
			return this;
		}
		
		
		public virtual global::tink.core._Future.SyncFuture<T> gather() {
			return this;
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 834174833:
					{
						this.@value = ((global::tink.core._Lazy.LazyObject<T>) (global::tink.core._Lazy.LazyObject__Statics_.__hx_cast<T>(((global::tink.core._Lazy.LazyObject) (@value) ))) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1436316155:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "gather", 1436316155)) );
					}
					
					
					case 1743047096:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "eager", 1743047096)) );
					}
					
					
					case 939361192:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "handle", 939361192)) );
					}
					
					
					case 1725829219:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "flatMap", 1725829219)) );
					}
					
					
					case 5442204:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "map", 5442204)) );
					}
					
					
					case 834174833:
					{
						return this.@value;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, object[] dynargs) {
			unchecked {
				switch (hash) {
					case 1436316155:
					{
						return this.gather();
					}
					
					
					case 1743047096:
					{
						return this.eager();
					}
					
					
					case 939361192:
					{
						return this.handle(((global::haxe.lang.Function) (dynargs[0]) ));
					}
					
					
					case 1725829219:
					{
						return this.flatMap<object>(((global::haxe.lang.Function) (dynargs[0]) ));
					}
					
					
					case 5442204:
					{
						return this.map<object>(((global::haxe.lang.Function) (dynargs[0]) ));
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
			}
		}
		
		
		public override void __hx_getFields(global::Array<object> baseArr) {
			baseArr.push("value");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Future {
	public class SyncFuture_flatMap_239__Fun<R> : global::haxe.lang.Function {
		
		public SyncFuture_flatMap_239__Fun(global::tink.core._Lazy.LazyObject<object> l) : base(1, 0) {
			this.l = l;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::haxe.lang.Function cb = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float1) )) )) : (((global::haxe.lang.Function) (__fn_dyn1) )) );
			return ((global::tink.core._Future.FutureObject<R>) (global::tink.core._Future.FutureObject__Statics_.__hx_cast<R>(((global::tink.core._Future.FutureObject) (((global::tink.core._Lazy.LazyObject<object>) (this.l) ).@get()) ))) ).handle(cb);
		}
		
		
		public global::tink.core._Lazy.LazyObject<object> l;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Future {
	[global::haxe.lang.GenericInterface(typeof(global::tink.core._Future.SyncFuture<object>))]
	public interface SyncFuture : global::haxe.lang.IHxObject, global::haxe.lang.IGenericObject {
		
		object tink_core__Future_SyncFuture_cast<T_c>();
		
		object tink_core__Future_FutureObject_cast<T_c>();
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Future {
	public sealed class Future_Impl_ {
		
		static Future_Impl_() {
			global::tink.core._Future.Future_Impl_.NULL = ((global::tink.core._Future.FutureObject) (((object) (new global::tink.core._Future.SyncFuture<object>(((global::tink.core._Lazy.LazyObject<object>) (global::tink.core._Lazy.LazyObject__Statics_.__hx_cast<object>(((global::tink.core._Lazy.LazyObject) (((global::tink.core._Lazy.LazyObject) (((object) (new global::tink.core._Lazy.LazyConst<object>(default(object))) )) )) ))) ))) )) );
			global::tink.core._Future.Future_Impl_.NOISE = ((global::tink.core._Future.FutureObject<object>) (new global::tink.core._Future.SyncFuture<object>(((global::tink.core._Lazy.LazyObject<object>) (new global::tink.core._Lazy.LazyConst<object>(((object) (global::tink.core.TinkNoise.Noise) ))) ))) );
			global::tink.core._Future.Future_Impl_.NEVER = ((global::tink.core._Future.FutureObject<object>) (new global::tink.core._Future.SyncFuture<object>(((global::tink.core._Lazy.LazyObject<object>) (new global::tink.core._Lazy.LazyConst<object>(((object) (global::tink.core._Future.NeverFuture<object>.inst) ))) ))) );
		}
		
		
		public static global::tink.core._Future.FutureObject NULL;
		
		public static global::tink.core._Future.FutureObject<object> NOISE;
		
		public static global::tink.core._Future.FutureObject NEVER;
		
		[global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
		public static global::tink.core._Future.FutureObject<T> _new<T>(global::haxe.lang.Function f) {
			global::tink.core._Future.FutureObject<T> this1 = new global::tink.core._Future.SimpleFuture<T>(((global::haxe.lang.Function) (f) ));
			return ((global::tink.core._Future.FutureObject<T>) (this1) );
		}
		
		
		public static global::tink.core._Future.FutureObject<T> first<T>(global::tink.core._Future.FutureObject<T> this1, global::tink.core._Future.FutureObject<T> other) {
			global::tink.core.FutureTrigger<T> ret = new global::tink.core.FutureTrigger<T>();
			global::tink.core._Callback.LinkObject l1 = this1.handle(((global::haxe.lang.Function) (new global::haxe.lang.Closure(ret, "trigger", 635393336)) ));
			global::tink.core._Callback.LinkObject l2 = other.handle(((global::haxe.lang.Function) (new global::haxe.lang.Closure(ret, "trigger", 635393336)) ));
			global::tink.core._Future.FutureObject<T> ret1 = ((global::tink.core._Future.FutureObject<T>) (ret) );
			if (( l1 != null )) {
				global::tink.core._Callback.LinkObject this2 = l1;
				ret1.handle(((global::haxe.lang.Function) (new global::tink.core._Future.Future_Impl__first_24__Fun<T>(this2)) ));
			}
			
			if (( l2 != null )) {
				global::tink.core._Callback.LinkObject this3 = l2;
				ret1.handle(((global::haxe.lang.Function) (new global::tink.core._Future.Future_Impl__first_26__Fun<T>(this3)) ));
			}
			
			return ret1;
		}
		
		
		public static global::tink.core._Future.FutureObject<A> map<A, T>(global::tink.core._Future.FutureObject<T> this1, global::haxe.lang.Function f, global::haxe.lang.Null<bool> gather) {
			global::haxe.lang.Null<bool> gather1 = ( ( ! (gather.hasValue) ) ? (new global::haxe.lang.Null<bool>(true, true)) : (gather) );
			global::tink.core._Future.FutureObject<A> ret = this1.map<A>(((global::haxe.lang.Function) (f) ));
			if (((gather1)).@value) {
				return ret.gather();
			}
			else {
				return ret;
			}
			
		}
		
		
		public static global::tink.core._Future.FutureObject<A> flatMap<A, T>(global::tink.core._Future.FutureObject<T> this1, global::haxe.lang.Function next, global::haxe.lang.Null<bool> gather) {
			global::haxe.lang.Null<bool> gather1 = ( ( ! (gather.hasValue) ) ? (new global::haxe.lang.Null<bool>(true, true)) : (gather) );
			global::tink.core._Future.FutureObject<A> ret = this1.flatMap<A>(((global::haxe.lang.Function) (next) ));
			if (((gather1)).@value) {
				return ret.gather();
			}
			else {
				return ret;
			}
			
		}
		
		
		public static global::tink.core._Future.FutureObject<object> next<R, T>(global::tink.core._Future.FutureObject<T> this1, global::haxe.lang.Function n) {
			return this1.flatMap<object>(((global::haxe.lang.Function) (new global::tink.core._Future.Future_Impl__next_57__Fun<R, T>(n)) ));
		}
		
		
		public static global::tink.core._Future.FutureObject<R> merge<A, R, T>(global::tink.core._Future.FutureObject<T> this1, global::tink.core._Future.FutureObject<A> other, global::haxe.lang.Function merger, global::haxe.lang.Null<bool> gather) {
			global::haxe.lang.Null<bool> gather1 = ( ( ! (gather.hasValue) ) ? (new global::haxe.lang.Null<bool>(true, true)) : (gather) );
			global::tink.core._Future.FutureObject<R> ret = ((global::tink.core._Future.FutureObject<T>) (this1) ).flatMap<R>(((global::haxe.lang.Function) (new global::tink.core._Future.Future_Impl__merge_63__Fun<A, R, T>(other, merger)) ));
			if (((gather1)).@value) {
				return ret.gather();
			}
			else {
				return ret;
			}
			
		}
		
		
		public static global::tink.core._Future.FutureObject<A> flatten<A>(global::tink.core._Future.FutureObject<object> f) {
			return new global::tink.core._Future.NestedFuture<A>(((global::tink.core._Future.FutureObject<object>) (f) ));
		}
		
		
		public static global::tink.core._Future.FutureObject<T> ofAny<T>(T v) {
			return ((global::tink.core._Future.FutureObject<T>) (new global::tink.core._Future.SyncFuture<T>(((global::tink.core._Lazy.LazyObject<T>) (new global::tink.core._Lazy.LazyConst<T>(global::haxe.lang.Runtime.genericCast<T>(v))) ))) );
		}
		
		
		public static global::tink.core._Future.FutureObject<object> asPromise<T>(global::tink.core._Future.FutureObject<object> s) {
			return s;
		}
		
		
		public static global::tink.core._Future.FutureObject<object> ofMany<A>(global::Array<object> futures, global::haxe.lang.Null<bool> gather) {
			global::haxe.lang.Null<bool> gather1 = ( ( ! (gather.hasValue) ) ? (new global::haxe.lang.Null<bool>(true, true)) : (gather) );
			global::tink.core._Future.FutureObject<object> ret = ((global::tink.core._Future.FutureObject<object>) (new global::tink.core._Future.SyncFuture<object>(((global::tink.core._Lazy.LazyObject<object>) (new global::tink.core._Lazy.LazyConst<object>(((object) (new global::Array<A>(new A[]{})) ))) ))) );
			{
				int _g = 0;
				while (( _g < futures.length )) {
					global::tink.core._Future.FutureObject<A> f = ((global::tink.core._Future.FutureObject<A>) (global::tink.core._Future.FutureObject__Statics_.__hx_cast<A>(((global::tink.core._Future.FutureObject) (futures[_g]) ))) );
					 ++ _g;
					global::tink.core._Future.FutureObject<object> ret1 = ((global::tink.core._Future.FutureObject<object>) (ret) ).flatMap<object>(((global::haxe.lang.Function) (new global::tink.core._Future.Future_Impl__ofMany_97__Fun<A>(f)) ));
					ret = ret1;
				}
				
			}
			
			if (((gather1)).@value) {
				return ret.gather();
			}
			else {
				return ret;
			}
			
		}
		
		
		public static global::tink.core._Future.FutureObject<object> fromMany<A>(global::Array<object> futures) {
			return global::tink.core._Future.Future_Impl_.ofMany<A>(((global::Array<object>) (futures) ), default(global::haxe.lang.Null<bool>));
		}
		
		
		public static global::tink.core._Future.FutureObject<A> lazy<A>(global::tink.core._Lazy.LazyObject<A> l) {
			return new global::tink.core._Future.SyncFuture<A>(((global::tink.core._Lazy.LazyObject<A>) (l) ));
		}
		
		
		public static global::tink.core._Future.FutureObject<A> sync<A>(A v) {
			return new global::tink.core._Future.SyncFuture<A>(((global::tink.core._Lazy.LazyObject<A>) (new global::tink.core._Lazy.LazyConst<A>(global::haxe.lang.Runtime.genericCast<A>(v))) ));
		}
		
		
		public static global::tink.core._Future.FutureObject<A> async<A>(global::haxe.lang.Function f, global::haxe.lang.Null<bool> lazy) {
			global::haxe.lang.Null<bool> lazy1 = ( ( ! (lazy.hasValue) ) ? (new global::haxe.lang.Null<bool>(false, true)) : (lazy) );
			if (((lazy1)).@value) {
				return new global::tink.core._Future.LazyTrigger<A>(((global::haxe.lang.Function) (f) ));
			}
			else {
				global::tink.core.FutureTrigger<A> op = new global::tink.core.FutureTrigger<A>();
				global::haxe.lang.Function wrapped = f;
				global::tink.core._Callback.Callback_Impl_.invoke<object>(((global::haxe.lang.Function) (wrapped) ), ((global::haxe.lang.Function) (new global::haxe.lang.Closure(op, "trigger", 635393336)) ));
				return op;
			}
			
		}
		
		
		[global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
		public static global::tink.core._Future.FutureObject<A> or<A>(global::tink.core._Future.FutureObject<A> a, global::tink.core._Future.FutureObject<A> b) {
			return global::tink.core._Future.Future_Impl_.first<A>(((global::tink.core._Future.FutureObject<A>) (a) ), ((global::tink.core._Future.FutureObject<A>) (b) ));
		}
		
		
		[global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
		public static global::tink.core._Future.FutureObject<object> either<A, B>(global::tink.core._Future.FutureObject<A> a, global::tink.core._Future.FutureObject<B> b) {
			global::tink.core._Future.FutureObject<object> ret = ((global::tink.core._Future.FutureObject<A>) (a) ).map<object>(((global::haxe.lang.Function) (new global::haxe.lang.Closure(typeof(global::haxe.ds.Either), "Left", 847852583)) ));
			global::tink.core._Future.FutureObject<object> ret1 = ((global::tink.core._Future.FutureObject<B>) (b) ).map<object>(((global::haxe.lang.Function) (new global::haxe.lang.Closure(typeof(global::haxe.ds.Either), "Right", 2089909180)) ));
			return global::tink.core._Future.Future_Impl_.first<object>(((global::tink.core._Future.FutureObject<object>) (ret) ), ((global::tink.core._Future.FutureObject<object>) (ret1) ));
		}
		
		
		[global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
		public static global::tink.core._Future.FutureObject<object> and<A, B>(global::tink.core._Future.FutureObject<A> a, global::tink.core._Future.FutureObject<B> b) {
			return global::tink.core._Future.Future_Impl_.merge<object, object, A>(((global::tink.core._Future.FutureObject<A>) (a) ), ((global::tink.core._Future.FutureObject<object>) (global::tink.core._Future.FutureObject__Statics_.__hx_cast<object>(((global::tink.core._Future.FutureObject) (b) ))) ), ((global::haxe.lang.Function) (new global::tink.core._Future.Future_Impl__and_156__Fun<B, A>()) ), default(global::haxe.lang.Null<bool>));
		}
		
		
		[global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
		public static global::tink.core._Future.FutureObject<object> _tryFailingFlatMap<D, F, R>(global::tink.core._Future.FutureObject<object> f, global::haxe.lang.Function map) {
			global::tink.core._Future.FutureObject<object> ret = ((global::tink.core._Future.FutureObject<object>) (f) ).flatMap<object>(((global::haxe.lang.Function) (new global::tink.core._Future.Future_Impl___tryFailingFlatMap_159__Fun<R, F, D>(map)) ));
			return ret.gather();
		}
		
		
		[global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
		public static global::tink.core._Future.FutureObject<object> _tryFlatMap<D, F, R>(global::tink.core._Future.FutureObject<object> f, global::haxe.lang.Function map) {
			global::tink.core._Future.FutureObject<object> ret = ((global::tink.core._Future.FutureObject<object>) (f) ).flatMap<object>(((global::haxe.lang.Function) (new global::tink.core._Future.Future_Impl___tryFlatMap_165__Fun<R, F, D>(map)) ));
			return ret.gather();
		}
		
		
		[global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
		public static global::tink.core._Future.FutureObject<object> _tryFailingMap<D, F, R>(global::tink.core._Future.FutureObject<object> f, global::haxe.lang.Function map) {
			global::tink.core._Future.FutureObject<object> ret = ((global::tink.core._Future.FutureObject<object>) (f) ).map<object>(((global::haxe.lang.Function) (new global::tink.core._Future.Future_Impl___tryFailingMap_171__Fun<R, F, D>(map)) ));
			return ret.gather();
		}
		
		
		[global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
		public static global::tink.core._Future.FutureObject<object> _tryMap<D, F, R>(global::tink.core._Future.FutureObject<object> f, global::haxe.lang.Function map) {
			global::tink.core._Future.FutureObject<object> ret = ((global::tink.core._Future.FutureObject<object>) (f) ).map<object>(((global::haxe.lang.Function) (new global::tink.core._Future.Future_Impl___tryMap_174__Fun<R, F, D>(map)) ));
			return ret.gather();
		}
		
		
		[global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
		public static global::tink.core._Future.FutureObject<R> _flatMap<T, R>(global::tink.core._Future.FutureObject<T> f, global::haxe.lang.Function map) {
			global::tink.core._Future.FutureObject<R> ret = ((global::tink.core._Future.FutureObject<T>) (f) ).flatMap<R>(((global::haxe.lang.Function) (map) ));
			return ret.gather();
		}
		
		
		[global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
		public static global::tink.core._Future.FutureObject<R> _map<T, R>(global::tink.core._Future.FutureObject<T> f, global::haxe.lang.Function map) {
			global::tink.core._Future.FutureObject<R> ret = ((global::tink.core._Future.FutureObject<T>) (f) ).map<R>(((global::haxe.lang.Function) (map) ));
			return ret.gather();
		}
		
		
		public static global::tink.core.FutureTrigger<A> trigger<A>() {
			return new global::tink.core.FutureTrigger<A>();
		}
		
		
		public static global::tink.core._Future.FutureObject<T> delay<T>(int ms, global::tink.core._Lazy.LazyObject<T> @value) {
			return global::tink.core._Future.Future_Impl_.async<T>(((global::haxe.lang.Function) (new global::tink.core._Future.Future_Impl__delay_189__Fun<T>(@value, ms)) ), default(global::haxe.lang.Null<bool>));
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Future {
	public class Future_Impl__first_24__Fun<T> : global::haxe.lang.Function {
		
		public Future_Impl__first_24__Fun(global::tink.core._Callback.LinkObject this2) : base(1, 0) {
			this.this2 = this2;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			T _ = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T>(__fn_dyn1)) );
			((global::tink.core._Callback.LinkObject) (this.this2) ).cancel();
			return null;
		}
		
		
		public global::tink.core._Callback.LinkObject this2;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Future {
	public class Future_Impl__first_26__Fun<T> : global::haxe.lang.Function {
		
		public Future_Impl__first_26__Fun(global::tink.core._Callback.LinkObject this3) : base(1, 0) {
			this.this3 = this3;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			T _1 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T>(__fn_dyn1)) );
			((global::tink.core._Callback.LinkObject) (this.this3) ).cancel();
			return null;
		}
		
		
		public global::tink.core._Callback.LinkObject this3;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Future {
	public class Future_Impl__next_57__Fun<R, T> : global::haxe.lang.Function {
		
		public Future_Impl__next_57__Fun(global::haxe.lang.Function n) : base(1, 0) {
			this.n = n;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			T v = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T>(__fn_dyn1)) );
			return ((global::tink.core._Future.FutureObject<object>) (global::tink.core._Future.FutureObject__Statics_.__hx_cast<object>(((global::tink.core._Future.FutureObject) (this.n.__hx_invoke1_o(default(double), v)) ))) );
		}
		
		
		public global::haxe.lang.Function n;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Future {
	public class Future_Impl__merge_64__Fun<T, R, A> : global::haxe.lang.Function {
		
		public Future_Impl__merge_64__Fun(T t, global::haxe.lang.Function merger) : base(1, 0) {
			this.t = t;
			this.merger = merger;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			A a = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<A>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<A>(__fn_dyn1)) );
			return global::haxe.lang.Runtime.genericCast<R>(this.merger.__hx_invoke2_o(default(double), this.t, default(double), a));
		}
		
		
		public T t;
		
		public global::haxe.lang.Function merger;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Future {
	public class Future_Impl__merge_63__Fun<A, R, T> : global::haxe.lang.Function {
		
		public Future_Impl__merge_63__Fun(global::tink.core._Future.FutureObject<A> other, global::haxe.lang.Function merger) : base(1, 0) {
			this.other = other;
			this.merger = merger;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			T t = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T>(__fn_dyn1)) );
			global::tink.core._Future.FutureObject<R> ret1 = ((global::tink.core._Future.FutureObject<A>) (this.other) ).map<R>(((global::haxe.lang.Function) (new global::tink.core._Future.Future_Impl__merge_64__Fun<T, R, A>(global::haxe.lang.Runtime.genericCast<T>(((object) (t) )), this.merger)) ));
			return ret1;
		}
		
		
		public global::tink.core._Future.FutureObject<A> other;
		
		public global::haxe.lang.Function merger;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Future {
	public class Future_Impl__ofMany_99__Fun<A> : global::haxe.lang.Function {
		
		public Future_Impl__ofMany_99__Fun(global::Array<A> results) : base(1, 0) {
			this.results = results;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			A result = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<A>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<A>(__fn_dyn1)) );
			return this.results.concat(new global::Array<A>(new A[]{result}));
		}
		
		
		public global::Array<A> results;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Future {
	public class Future_Impl__ofMany_97__Fun<A> : global::haxe.lang.Function {
		
		public Future_Impl__ofMany_97__Fun(global::tink.core._Future.FutureObject<A> f) : base(1, 0) {
			this.f = f;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::Array<A> results = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::Array<A>) (global::Array<object>.__hx_cast<A>(((global::Array) (((object) (__fn_float1) )) ))) )) : (((global::Array<A>) (global::Array<object>.__hx_cast<A>(((global::Array) (__fn_dyn1) ))) )) );
			global::tink.core._Future.FutureObject<object> ret2 = ((global::tink.core._Future.FutureObject<A>) (this.f) ).map<object>(((global::haxe.lang.Function) (new global::tink.core._Future.Future_Impl__ofMany_99__Fun<A>(results)) ));
			return ret2;
		}
		
		
		public global::tink.core._Future.FutureObject<A> f;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Future {
	public class Future_Impl__and_156__Fun<B, A> : global::haxe.lang.Function {
		
		public Future_Impl__and_156__Fun() : base(2, 0) {
		}
		
		
		public override object __hx_invoke2_o(double __fn_float1, object __fn_dyn1, double __fn_float2, object __fn_dyn2) {
			B b1 = ( (( __fn_dyn2 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<B>(((object) (__fn_float2) ))) : (global::haxe.lang.Runtime.genericCast<B>(__fn_dyn2)) );
			A a1 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<A>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<A>(__fn_dyn1)) );
			global::tink.core.MPair<A, B> this1 = new global::tink.core.MPair<A, B>(a1, b1);
			return ((global::tink.core.MPair<A, B>) (this1) );
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Future {
	public class Future_Impl___tryFailingFlatMap_159__Fun<R, F, D> : global::haxe.lang.Function {
		
		public Future_Impl___tryFailingFlatMap_159__Fun(global::haxe.lang.Function map) : base(1, 0) {
			this.map = map;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				global::tink.core.Outcome o = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::tink.core.Outcome) (((object) (__fn_float1) )) )) : (((global::tink.core.Outcome) (__fn_dyn1) )) );
				switch (o._hx_index) {
					case 0:
					{
						D d = global::haxe.lang.Runtime.genericCast<D>(( o as global::tink.core.Outcome_Success ).data);
						return ((global::tink.core._Future.FutureObject<object>) (global::tink.core._Future.FutureObject__Statics_.__hx_cast<object>(((global::tink.core._Future.FutureObject) (this.map.__hx_invoke1_o(default(double), d)) ))) );
					}
					
					
					case 1:
					{
						F f1 = global::haxe.lang.Runtime.genericCast<F>(( o as global::tink.core.Outcome_Failure ).failure);
						return new global::tink.core._Future.SyncFuture<object>(((global::tink.core._Lazy.LazyObject<object>) (new global::tink.core._Lazy.LazyConst<object>(((object) (global::tink.core.Outcome.Failure(f1)) ))) ));
					}
					
					
				}
				
				return null;
			}
		}
		
		
		public global::haxe.lang.Function map;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Future {
	public class Future_Impl___tryFlatMap_165__Fun<R, F, D> : global::haxe.lang.Function {
		
		public Future_Impl___tryFlatMap_165__Fun(global::haxe.lang.Function map) : base(1, 0) {
			this.map = map;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				global::tink.core.Outcome o = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::tink.core.Outcome) (((object) (__fn_float1) )) )) : (((global::tink.core.Outcome) (__fn_dyn1) )) );
				switch (o._hx_index) {
					case 0:
					{
						D d = global::haxe.lang.Runtime.genericCast<D>(( o as global::tink.core.Outcome_Success ).data);
						global::tink.core._Future.FutureObject<object> ret1 = ((global::tink.core._Future.FutureObject<R>) (global::tink.core._Future.FutureObject__Statics_.__hx_cast<R>(((global::tink.core._Future.FutureObject) (this.map.__hx_invoke1_o(default(double), d)) ))) ).map<object>(((global::haxe.lang.Function) (new global::haxe.lang.Closure(typeof(global::tink.core.Outcome), "Success", 94326179)) ));
						return ret1.gather();
					}
					
					
					case 1:
					{
						F f1 = global::haxe.lang.Runtime.genericCast<F>(( o as global::tink.core.Outcome_Failure ).failure);
						return new global::tink.core._Future.SyncFuture<object>(((global::tink.core._Lazy.LazyObject<object>) (new global::tink.core._Lazy.LazyConst<object>(((object) (global::tink.core.Outcome.Failure(f1)) ))) ));
					}
					
					
				}
				
				return null;
			}
		}
		
		
		public global::haxe.lang.Function map;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Future {
	public class Future_Impl___tryFailingMap_171__Fun<R, F, D> : global::haxe.lang.Function {
		
		public Future_Impl___tryFailingMap_171__Fun(global::haxe.lang.Function map) : base(1, 0) {
			this.map = map;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::tink.core.Outcome o = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::tink.core.Outcome) (((object) (__fn_float1) )) )) : (((global::tink.core.Outcome) (__fn_dyn1) )) );
			return global::tink.core.OutcomeTools.flatMap<D, F, object, object>(((global::tink.core.Outcome) (o) ), ((object) (global::tink.core._Outcome.OutcomeMapper_Impl_.withSameError<object, object, object>(((global::haxe.lang.Function) (this.map) ))) ));
		}
		
		
		public global::haxe.lang.Function map;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Future {
	public class Future_Impl___tryMap_174__Fun<R, F, D> : global::haxe.lang.Function {
		
		public Future_Impl___tryMap_174__Fun(global::haxe.lang.Function map) : base(1, 0) {
			this.map = map;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::tink.core.Outcome o = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::tink.core.Outcome) (((object) (__fn_float1) )) )) : (((global::tink.core.Outcome) (__fn_dyn1) )) );
			return global::tink.core.OutcomeTools.map<D, object, F>(((global::tink.core.Outcome) (o) ), ((global::haxe.lang.Function) (this.map) ));
		}
		
		
		public global::haxe.lang.Function map;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Future {
	public class Future_Impl__delay_189__Fun_0<T> : global::haxe.lang.Function {
		
		public Future_Impl__delay_189__Fun_0(global::tink.core._Lazy.LazyObject<T> @value, global::haxe.lang.Function cb) : base(0, 0) {
			this.@value = @value;
			this.cb = cb;
		}
		
		
		public override object __hx_invoke0_o() {
			this.cb.__hx_invoke1_o(default(double), global::haxe.lang.Runtime.genericCast<T>(((global::tink.core._Lazy.LazyObject<T>) (this.@value) ).@get()));
			return null;
		}
		
		
		public global::tink.core._Lazy.LazyObject<T> @value;
		
		public global::haxe.lang.Function cb;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Future {
	public class Future_Impl__delay_189__Fun<T> : global::haxe.lang.Function {
		
		public Future_Impl__delay_189__Fun(global::tink.core._Lazy.LazyObject<T> @value, int ms) : base(1, 0) {
			this.@value = @value;
			this.ms = ms;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::haxe.lang.Function cb = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float1) )) )) : (((global::haxe.lang.Function) (__fn_dyn1) )) );
			global::haxe.Timer.delay(new global::tink.core._Future.Future_Impl__delay_189__Fun_0<T>(this.@value, cb), this.ms);
			return null;
		}
		
		
		public global::tink.core._Lazy.LazyObject<T> @value;
		
		public int ms;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Future {
	public class SimpleFuture<T> : global::haxe.lang.HxObject, global::tink.core._Future.SimpleFuture, global::tink.core._Future.FutureObject<T> {
		
		public SimpleFuture(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public SimpleFuture(global::haxe.lang.Function f) {
			global::tink.core._Future.SimpleFuture<object>.__hx_ctor_tink_core__Future_SimpleFuture<T>(((global::tink.core._Future.SimpleFuture<T>) (this) ), ((global::haxe.lang.Function) (f) ));
		}
		
		
		protected static void __hx_ctor_tink_core__Future_SimpleFuture<T_c>(global::tink.core._Future.SimpleFuture<T_c> __hx_this, global::haxe.lang.Function f) {
			__hx_this.f = f;
		}
		
		
		public static object __hx_cast<T_c_c>(global::tink.core._Future.SimpleFuture me) {
			return ( (( me != null )) ? (me.tink_core__Future_SimpleFuture_cast<T_c_c>()) : default(object) );
		}
		
		
		public virtual object tink_core__Future_SimpleFuture_cast<T_c>() {
			if (global::haxe.lang.Runtime.eq(typeof(T), typeof(T_c))) {
				return this;
			}
			
			global::tink.core._Future.SimpleFuture<T_c> new_me = new global::tink.core._Future.SimpleFuture<T_c>(((global::haxe.lang.EmptyObject) (global::haxe.lang.EmptyObject.EMPTY) ));
			global::Array<object> fields = global::Reflect.fields(this);
			int i = 0;
			while (( i < fields.length )) {
				string field = global::haxe.lang.Runtime.toString(fields[i++]);
				global::Reflect.setField(new_me, field, global::Reflect.field(this, field));
			}
			
			return new_me;
		}
		
		
		public virtual object tink_core__Future_FutureObject_cast<T_c>() {
			return this.tink_core__Future_SimpleFuture_cast<T>();
		}
		
		
		public global::haxe.lang.Function f;
		
		public global::tink.core._Future.FutureObject<T> gathered;
		
		public global::tink.core._Callback.LinkObject handle(global::haxe.lang.Function callback) {
			return ((global::tink.core._Callback.LinkObject) (this.f.__hx_invoke1_o(default(double), callback)) );
		}
		
		
		public global::tink.core._Future.FutureObject<R> map<R>(global::haxe.lang.Function f) {
			global::tink.core._Future.SimpleFuture<T> _gthis = this;
			return new global::tink.core._Future.SimpleFuture<R>(((global::haxe.lang.Function) (new global::tink.core._Future.SimpleFuture_map_266__Fun<T, R>(f, _gthis)) ));
		}
		
		
		public global::tink.core._Future.FutureObject<R> flatMap<R>(global::haxe.lang.Function f) {
			global::haxe.lang.Function f1 = f;
			global::tink.core._Future.SimpleFuture<T> _gthis = this;
			return global::tink.core._Future.Future_Impl_.flatten<R>(((global::tink.core._Future.FutureObject<object>) (new global::tink.core._Future.SimpleFuture<object>(((global::haxe.lang.Function) (new global::tink.core._Future.SimpleFuture_flatMap_271__Fun<T, R>(f1, _gthis)) ))) ));
		}
		
		
		public global::tink.core._Future.FutureObject<T> gather() {
			if (( this.gathered != null )) {
				return this.gathered;
			}
			else {
				return this.gathered = global::tink.core.FutureTrigger<object>.gatherFuture<T>(((global::tink.core._Future.FutureObject<T>) (this) ));
			}
			
		}
		
		
		public global::tink.core._Future.FutureObject<T> eager() {
			global::tink.core._Future.FutureObject<T> ret = ( (( this.gathered != null )) ? (this.gathered) : (this.gathered = global::tink.core.FutureTrigger<object>.gatherFuture<T>(((global::tink.core._Future.FutureObject<T>) (this) ))) );
			ret.handle(global::tink.core._Callback.Callback_Impl_.fromNiladic<object>(((global::haxe.lang.Function) (( (( global::tink.core._Future.SimpleFuture_eager_280__Fun.__hx_current != null )) ? (global::tink.core._Future.SimpleFuture_eager_280__Fun.__hx_current) : (global::tink.core._Future.SimpleFuture_eager_280__Fun.__hx_current = ((global::tink.core._Future.SimpleFuture_eager_280__Fun) (new global::tink.core._Future.SimpleFuture_eager_280__Fun()) )) )) )));
			return ret;
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1259962138:
					{
						this.gathered = ((global::tink.core._Future.FutureObject<T>) (global::tink.core._Future.FutureObject__Statics_.__hx_cast<T>(((global::tink.core._Future.FutureObject) (@value) ))) );
						return @value;
					}
					
					
					case 102:
					{
						this.f = ((global::haxe.lang.Function) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1743047096:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "eager", 1743047096)) );
					}
					
					
					case 1436316155:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "gather", 1436316155)) );
					}
					
					
					case 1725829219:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "flatMap", 1725829219)) );
					}
					
					
					case 5442204:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "map", 5442204)) );
					}
					
					
					case 939361192:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "handle", 939361192)) );
					}
					
					
					case 1259962138:
					{
						return this.gathered;
					}
					
					
					case 102:
					{
						return this.f;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, object[] dynargs) {
			unchecked {
				switch (hash) {
					case 1743047096:
					{
						return this.eager();
					}
					
					
					case 1436316155:
					{
						return this.gather();
					}
					
					
					case 1725829219:
					{
						return this.flatMap<object>(((global::haxe.lang.Function) (dynargs[0]) ));
					}
					
					
					case 5442204:
					{
						return this.map<object>(((global::haxe.lang.Function) (dynargs[0]) ));
					}
					
					
					case 939361192:
					{
						return this.handle(((global::haxe.lang.Function) (dynargs[0]) ));
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
			}
		}
		
		
		public override void __hx_getFields(global::Array<object> baseArr) {
			baseArr.push("gathered");
			baseArr.push("f");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Future {
	public class SimpleFuture_map_267__Fun<R, T> : global::haxe.lang.Function {
		
		public SimpleFuture_map_267__Fun(global::haxe.lang.Function f, global::haxe.lang.Function cb) : base(1, 0) {
			this.f = f;
			this.cb = cb;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			T v = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T>(__fn_dyn1)) );
			R tmp = global::haxe.lang.Runtime.genericCast<R>(this.f.__hx_invoke1_o(default(double), v));
			global::tink.core._Callback.Callback_Impl_.invoke<R>(((global::haxe.lang.Function) (this.cb) ), global::haxe.lang.Runtime.genericCast<R>(tmp));
			return null;
		}
		
		
		public global::haxe.lang.Function f;
		
		public global::haxe.lang.Function cb;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Future {
	public class SimpleFuture_map_266__Fun<T, R> : global::haxe.lang.Function {
		
		public SimpleFuture_map_266__Fun(global::haxe.lang.Function f, global::tink.core._Future.SimpleFuture<T> _gthis) : base(1, 0) {
			this.f = f;
			this._gthis = _gthis;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::haxe.lang.Function cb = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float1) )) )) : (((global::haxe.lang.Function) (__fn_dyn1) )) );
			return ((global::tink.core._Callback.LinkObject) (this._gthis.f.__hx_invoke1_o(default(double), new global::tink.core._Future.SimpleFuture_map_267__Fun<R, T>(this.f, cb))) );
		}
		
		
		public global::haxe.lang.Function f;
		
		public global::tink.core._Future.SimpleFuture<T> _gthis;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Future {
	public class SimpleFuture_flatMap_271__Fun_0<R, T> : global::haxe.lang.Function {
		
		public SimpleFuture_flatMap_271__Fun_0(global::haxe.lang.Function f1, global::haxe.lang.Function cb) : base(1, 0) {
			this.f1 = f1;
			this.cb = cb;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			T v = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T>(__fn_dyn1)) );
			global::tink.core._Future.FutureObject<R> tmp = ((global::tink.core._Future.FutureObject<R>) (global::tink.core._Future.FutureObject__Statics_.__hx_cast<R>(((global::tink.core._Future.FutureObject) (this.f1.__hx_invoke1_o(default(double), v)) ))) );
			global::tink.core._Callback.Callback_Impl_.invoke<object>(((global::haxe.lang.Function) (this.cb) ), ((object) (tmp) ));
			return null;
		}
		
		
		public global::haxe.lang.Function f1;
		
		public global::haxe.lang.Function cb;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Future {
	public class SimpleFuture_flatMap_271__Fun<T, R> : global::haxe.lang.Function {
		
		public SimpleFuture_flatMap_271__Fun(global::haxe.lang.Function f1, global::tink.core._Future.SimpleFuture<T> _gthis) : base(1, 0) {
			this.f1 = f1;
			this._gthis = _gthis;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::haxe.lang.Function cb = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float1) )) )) : (((global::haxe.lang.Function) (__fn_dyn1) )) );
			return ((global::tink.core._Callback.LinkObject) (this._gthis.f.__hx_invoke1_o(default(double), new global::tink.core._Future.SimpleFuture_flatMap_271__Fun_0<R, T>(this.f1, cb))) );
		}
		
		
		public global::haxe.lang.Function f1;
		
		public global::tink.core._Future.SimpleFuture<T> _gthis;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Future {
	public class SimpleFuture_eager_280__Fun : global::haxe.lang.Function {
		
		public SimpleFuture_eager_280__Fun() : base(0, 0) {
		}
		
		
		public static global::tink.core._Future.SimpleFuture_eager_280__Fun __hx_current;
		
		public override object __hx_invoke0_o() {
			return null;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Future {
	[global::haxe.lang.GenericInterface(typeof(global::tink.core._Future.SimpleFuture<object>))]
	public interface SimpleFuture : global::haxe.lang.IHxObject, global::haxe.lang.IGenericObject {
		
		object tink_core__Future_SimpleFuture_cast<T_c>();
		
		object tink_core__Future_FutureObject_cast<T_c>();
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Future {
	public class NestedFuture<T> : global::haxe.lang.HxObject, global::tink.core._Future.NestedFuture, global::tink.core._Future.FutureObject<T> {
		
		public NestedFuture(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public NestedFuture(global::tink.core._Future.FutureObject<object> outer) {
			global::tink.core._Future.NestedFuture<object>.__hx_ctor_tink_core__Future_NestedFuture<T>(((global::tink.core._Future.NestedFuture<T>) (this) ), ((global::tink.core._Future.FutureObject<object>) (outer) ));
		}
		
		
		protected static void __hx_ctor_tink_core__Future_NestedFuture<T_c>(global::tink.core._Future.NestedFuture<T_c> __hx_this, global::tink.core._Future.FutureObject<object> outer) {
			__hx_this.outer = outer;
		}
		
		
		public static object __hx_cast<T_c_c>(global::tink.core._Future.NestedFuture me) {
			return ( (( me != null )) ? (me.tink_core__Future_NestedFuture_cast<T_c_c>()) : default(object) );
		}
		
		
		public virtual object tink_core__Future_NestedFuture_cast<T_c>() {
			if (global::haxe.lang.Runtime.eq(typeof(T), typeof(T_c))) {
				return this;
			}
			
			global::tink.core._Future.NestedFuture<T_c> new_me = new global::tink.core._Future.NestedFuture<T_c>(((global::haxe.lang.EmptyObject) (global::haxe.lang.EmptyObject.EMPTY) ));
			global::Array<object> fields = global::Reflect.fields(this);
			int i = 0;
			while (( i < fields.length )) {
				string field = global::haxe.lang.Runtime.toString(fields[i++]);
				global::Reflect.setField(new_me, field, global::Reflect.field(this, field));
			}
			
			return new_me;
		}
		
		
		public virtual object tink_core__Future_FutureObject_cast<T_c>() {
			return this.tink_core__Future_NestedFuture_cast<T>();
		}
		
		
		public global::tink.core._Future.FutureObject<object> outer;
		
		public global::tink.core._Future.FutureObject<T> gathered;
		
		public global::tink.core._Future.FutureObject<R> map<R>(global::haxe.lang.Function f) {
			global::tink.core._Future.FutureObject<R> ret = ((global::tink.core._Future.FutureObject<object>) (this.outer) ).flatMap<R>(((global::haxe.lang.Function) (new global::tink.core._Future.NestedFuture_map_293__Fun<R, T>(f)) ));
			return ret.gather();
		}
		
		
		public global::tink.core._Future.FutureObject<R> flatMap<R>(global::haxe.lang.Function f) {
			global::tink.core._Future.FutureObject<R> ret = ((global::tink.core._Future.FutureObject<object>) (this.outer) ).flatMap<R>(((global::haxe.lang.Function) (new global::tink.core._Future.NestedFuture_flatMap_296__Fun<R, T>(f)) ));
			return ret.gather();
		}
		
		
		public global::tink.core._Future.FutureObject<T> gather() {
			if (( this.gathered != null )) {
				return this.gathered;
			}
			else {
				return this.gathered = global::tink.core.FutureTrigger<object>.gatherFuture<T>(((global::tink.core._Future.FutureObject<T>) (this) ));
			}
			
		}
		
		
		public global::tink.core._Future.FutureObject<T> eager() {
			global::tink.core._Future.FutureObject<T> ret = ( (( this.gathered != null )) ? (this.gathered) : (this.gathered = global::tink.core.FutureTrigger<object>.gatherFuture<T>(((global::tink.core._Future.FutureObject<T>) (this) ))) );
			ret.handle(global::tink.core._Callback.Callback_Impl_.fromNiladic<object>(((global::haxe.lang.Function) (( (( global::tink.core._Future.NestedFuture_eager_305__Fun.__hx_current != null )) ? (global::tink.core._Future.NestedFuture_eager_305__Fun.__hx_current) : (global::tink.core._Future.NestedFuture_eager_305__Fun.__hx_current = ((global::tink.core._Future.NestedFuture_eager_305__Fun) (new global::tink.core._Future.NestedFuture_eager_305__Fun()) )) )) )));
			return ret;
		}
		
		
		public virtual global::tink.core._Callback.LinkObject handle(global::haxe.lang.Function cb) {
			global::tink.core._Callback.LinkObject[] ret = new global::tink.core._Callback.LinkObject[]{null};
			global::tink.core._Callback.LinkObject tmp = this.outer.handle(new global::tink.core._Future.NestedFuture_handle_311__Fun<T>(ret, cb));
			ret[0] = tmp;
			return ret[0];
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1259962138:
					{
						this.gathered = ((global::tink.core._Future.FutureObject<T>) (global::tink.core._Future.FutureObject__Statics_.__hx_cast<T>(((global::tink.core._Future.FutureObject) (@value) ))) );
						return @value;
					}
					
					
					case 925415547:
					{
						this.outer = ((global::tink.core._Future.FutureObject<object>) (global::tink.core._Future.FutureObject__Statics_.__hx_cast<object>(((global::tink.core._Future.FutureObject) (@value) ))) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 939361192:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "handle", 939361192)) );
					}
					
					
					case 1743047096:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "eager", 1743047096)) );
					}
					
					
					case 1436316155:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "gather", 1436316155)) );
					}
					
					
					case 1725829219:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "flatMap", 1725829219)) );
					}
					
					
					case 5442204:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "map", 5442204)) );
					}
					
					
					case 1259962138:
					{
						return this.gathered;
					}
					
					
					case 925415547:
					{
						return this.outer;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, object[] dynargs) {
			unchecked {
				switch (hash) {
					case 939361192:
					{
						return this.handle(((global::haxe.lang.Function) (dynargs[0]) ));
					}
					
					
					case 1743047096:
					{
						return this.eager();
					}
					
					
					case 1436316155:
					{
						return this.gather();
					}
					
					
					case 1725829219:
					{
						return this.flatMap<object>(((global::haxe.lang.Function) (dynargs[0]) ));
					}
					
					
					case 5442204:
					{
						return this.map<object>(((global::haxe.lang.Function) (dynargs[0]) ));
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
			}
		}
		
		
		public override void __hx_getFields(global::Array<object> baseArr) {
			baseArr.push("gathered");
			baseArr.push("outer");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Future {
	public class NestedFuture_map_293__Fun<R, T> : global::haxe.lang.Function {
		
		public NestedFuture_map_293__Fun(global::haxe.lang.Function f) : base(1, 0) {
			this.f = f;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::tink.core._Future.FutureObject<T> inner = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::tink.core._Future.FutureObject<T>) (global::tink.core._Future.FutureObject__Statics_.__hx_cast<T>(((global::tink.core._Future.FutureObject) (((object) (__fn_float1) )) ))) )) : (((global::tink.core._Future.FutureObject<T>) (global::tink.core._Future.FutureObject__Statics_.__hx_cast<T>(((global::tink.core._Future.FutureObject) (__fn_dyn1) ))) )) );
			global::tink.core._Future.FutureObject<R> ret1 = ((global::tink.core._Future.FutureObject<T>) (inner) ).map<R>(((global::haxe.lang.Function) (this.f) ));
			return ret1.gather();
		}
		
		
		public global::haxe.lang.Function f;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Future {
	public class NestedFuture_flatMap_296__Fun<R, T> : global::haxe.lang.Function {
		
		public NestedFuture_flatMap_296__Fun(global::haxe.lang.Function f) : base(1, 0) {
			this.f = f;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::tink.core._Future.FutureObject<T> inner = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::tink.core._Future.FutureObject<T>) (global::tink.core._Future.FutureObject__Statics_.__hx_cast<T>(((global::tink.core._Future.FutureObject) (((object) (__fn_float1) )) ))) )) : (((global::tink.core._Future.FutureObject<T>) (global::tink.core._Future.FutureObject__Statics_.__hx_cast<T>(((global::tink.core._Future.FutureObject) (__fn_dyn1) ))) )) );
			global::tink.core._Future.FutureObject<R> ret1 = ((global::tink.core._Future.FutureObject<T>) (inner) ).flatMap<R>(((global::haxe.lang.Function) (this.f) ));
			return ret1.gather();
		}
		
		
		public global::haxe.lang.Function f;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Future {
	public class NestedFuture_eager_305__Fun : global::haxe.lang.Function {
		
		public NestedFuture_eager_305__Fun() : base(0, 0) {
		}
		
		
		public static global::tink.core._Future.NestedFuture_eager_305__Fun __hx_current;
		
		public override object __hx_invoke0_o() {
			return null;
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Future {
	public class NestedFuture_handle_312__Fun<T> : global::haxe.lang.Function {
		
		public NestedFuture_handle_312__Fun(global::haxe.lang.Function cb) : base(1, 0) {
			this.cb = cb;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			T result = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T>(__fn_dyn1)) );
			global::tink.core._Callback.Callback_Impl_.invoke<T>(((global::haxe.lang.Function) (this.cb) ), global::haxe.lang.Runtime.genericCast<T>(result));
			return null;
		}
		
		
		public global::haxe.lang.Function cb;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Future {
	public class NestedFuture_handle_311__Fun<T> : global::haxe.lang.Function {
		
		public NestedFuture_handle_311__Fun(global::tink.core._Callback.LinkObject[] ret, global::haxe.lang.Function cb) : base(1, 0) {
			this.ret = ret;
			this.cb = cb;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::tink.core._Future.FutureObject<T> inner = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::tink.core._Future.FutureObject<T>) (global::tink.core._Future.FutureObject__Statics_.__hx_cast<T>(((global::tink.core._Future.FutureObject) (((object) (__fn_float1) )) ))) )) : (((global::tink.core._Future.FutureObject<T>) (global::tink.core._Future.FutureObject__Statics_.__hx_cast<T>(((global::tink.core._Future.FutureObject) (__fn_dyn1) ))) )) );
			global::tink.core._Callback.LinkObject tmp1 = inner.handle(new global::tink.core._Future.NestedFuture_handle_312__Fun<T>(this.cb));
			this.ret[0] = tmp1;
			return null;
		}
		
		
		public global::tink.core._Callback.LinkObject[] ret;
		
		public global::haxe.lang.Function cb;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Future {
	[global::haxe.lang.GenericInterface(typeof(global::tink.core._Future.NestedFuture<object>))]
	public interface NestedFuture : global::haxe.lang.IHxObject, global::haxe.lang.IGenericObject {
		
		object tink_core__Future_NestedFuture_cast<T_c>();
		
		object tink_core__Future_FutureObject_cast<T_c>();
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core {
	public class FutureTrigger<T> : global::haxe.lang.HxObject, global::tink.core.FutureTrigger, global::tink.core._Future.FutureObject<T> {
		
		public FutureTrigger(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public FutureTrigger() {
			global::tink.core.FutureTrigger<object>.__hx_ctor_tink_core_FutureTrigger<T>(((global::tink.core.FutureTrigger<T>) (this) ));
		}
		
		
		protected static void __hx_ctor_tink_core_FutureTrigger<T_c>(global::tink.core.FutureTrigger<T_c> __hx_this) {
			global::Array<object> this1 = new global::Array<object>(new object[]{});
			__hx_this.list = ((global::Array<object>) (this1) );
		}
		
		
		public static object __hx_cast<T_c_c>(global::tink.core.FutureTrigger me) {
			return ( (( me != null )) ? (me.tink_core_FutureTrigger_cast<T_c_c>()) : default(object) );
		}
		
		
		public static global::tink.core._Future.FutureObject<T1> gatherFuture<T1>(global::tink.core._Future.FutureObject<T1> f) {
			global::tink.core._Future.FutureObject<T1>[] f1 = new global::tink.core._Future.FutureObject<T1>[]{f};
			global::tink.core.FutureTrigger<T1>[] op = new global::tink.core.FutureTrigger<T1>[]{null};
			global::tink.core._Future.FutureObject<T1> this1 = new global::tink.core._Future.SimpleFuture<T1>(((global::haxe.lang.Function) (new global::tink.core.FutureTrigger_gatherFuture_363__Fun<T1>(op, f1)) ));
			return ((global::tink.core._Future.FutureObject<T1>) (this1) );
		}
		
		
		global::tink.core._Future.FutureObject<T> global::tink.core._Future.FutureObject<T>.eager() {
			return ((global::tink.core._Future.FutureObject<T>) (this.eager()) );
		}
		
		
		global::tink.core._Future.FutureObject<T> global::tink.core._Future.FutureObject<T>.gather() {
			return ((global::tink.core._Future.FutureObject<T>) (this.gather()) );
		}
		
		
		public virtual object tink_core_FutureTrigger_cast<T_c>() {
			if (global::haxe.lang.Runtime.eq(typeof(T), typeof(T_c))) {
				return this;
			}
			
			global::tink.core.FutureTrigger<T_c> new_me = new global::tink.core.FutureTrigger<T_c>(global::haxe.lang.EmptyObject.EMPTY);
			global::Array<object> fields = global::Reflect.fields(this);
			int i = 0;
			while (( i < fields.length )) {
				string field = global::haxe.lang.Runtime.toString(fields[i++]);
				global::Reflect.setField(new_me, field, global::Reflect.field(this, field));
			}
			
			return new_me;
		}
		
		
		public virtual object tink_core__Future_FutureObject_cast<T_c>() {
			return this.tink_core_FutureTrigger_cast<T>();
		}
		
		
		public T result;
		
		public global::Array<object> list;
		
		public virtual global::tink.core._Callback.LinkObject handle(global::haxe.lang.Function callback) {
			global::Array<object> _g = this.list;
			if (( _g == null )) {
				global::tink.core._Callback.Callback_Impl_.invoke<T>(((global::haxe.lang.Function) (callback) ), global::haxe.lang.Runtime.genericCast<T>(this.result));
				return null;
			}
			else {
				global::Array<object> v = _g;
				return global::tink.core._Callback.CallbackList_Impl_.@add<T>(((global::Array<object>) (v) ), ((global::haxe.lang.Function) (callback) ));
			}
			
		}
		
		
		public virtual global::tink.core._Future.FutureObject<R> map<R>(global::haxe.lang.Function f) {
			global::Array<object> _g = this.list;
			if (( _g == null )) {
				return new global::tink.core._Future.SyncFuture<R>(((global::tink.core._Lazy.LazyObject<R>) (new global::tink.core._Lazy.LazyConst<R>(global::haxe.lang.Runtime.genericCast<R>(f.__hx_invoke1_o(default(double), this.result)))) ));
			}
			else {
				global::Array<object> v = _g;
				global::tink.core.FutureTrigger<R> ret = new global::tink.core.FutureTrigger<R>();
				global::tink.core._Callback.CallbackList_Impl_.@add<T>(((global::Array<object>) (this.list) ), ((global::haxe.lang.Function) (new global::tink.core.FutureTrigger_map_339__Fun<R, T>(ret, f)) ));
				return ret;
			}
			
		}
		
		
		public virtual global::tink.core._Future.FutureObject<R> flatMap<R>(global::haxe.lang.Function f) {
			global::Array<object> _g = this.list;
			if (( _g == null )) {
				return ((global::tink.core._Future.FutureObject<R>) (global::tink.core._Future.FutureObject__Statics_.__hx_cast<R>(((global::tink.core._Future.FutureObject) (f.__hx_invoke1_o(default(double), this.result)) ))) );
			}
			else {
				global::Array<object> v = _g;
				global::tink.core.FutureTrigger<R> ret = new global::tink.core.FutureTrigger<R>();
				global::tink.core._Callback.CallbackList_Impl_.@add<T>(((global::Array<object>) (this.list) ), ((global::haxe.lang.Function) (new global::tink.core.FutureTrigger_flatMap_348__Fun<R, T>(ret, f)) ));
				return ret;
			}
			
		}
		
		
		public global::tink.core.FutureTrigger<T> gather() {
			return this;
		}
		
		
		public virtual global::tink.core.FutureTrigger<T> eager() {
			return this;
		}
		
		
		public global::tink.core._Future.FutureObject<T> asFuture() {
			return this;
		}
		
		
		public virtual bool trigger(T result) {
			if (( this.list == null )) {
				return false;
			}
			else {
				global::Array<object> list = this.list;
				this.list = null;
				this.result = result;
				global::tink.core._Callback.CallbackList_Impl_.invoke<T>(((global::Array<object>) (list) ), global::haxe.lang.Runtime.genericCast<T>(result));
				global::tink.core._Callback.CallbackList_Impl_.clear<T>(((global::Array<object>) (list) ));
				return true;
			}
			
		}
		
		
		public override double __hx_setField_f(string field, int hash, double @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 142895325:
					{
						this.result = global::haxe.lang.Runtime.genericCast<T>(((object) (@value) ));
						return ((double) (global::haxe.lang.Runtime.toDouble(((object) (@value) ))) );
					}
					
					
					default:
					{
						return base.__hx_setField_f(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 1202920542:
					{
						this.list = ((global::Array<object>) (global::Array<object>.__hx_cast<object>(((global::Array) (@value) ))) );
						return @value;
					}
					
					
					case 142895325:
					{
						this.result = global::haxe.lang.Runtime.genericCast<T>(@value);
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 635393336:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "trigger", 635393336)) );
					}
					
					
					case 35955413:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "asFuture", 35955413)) );
					}
					
					
					case 1743047096:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "eager", 1743047096)) );
					}
					
					
					case 1436316155:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "gather", 1436316155)) );
					}
					
					
					case 1725829219:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "flatMap", 1725829219)) );
					}
					
					
					case 5442204:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "map", 5442204)) );
					}
					
					
					case 939361192:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "handle", 939361192)) );
					}
					
					
					case 1202920542:
					{
						return this.list;
					}
					
					
					case 142895325:
					{
						return this.result;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override double __hx_getField_f(string field, int hash, bool throwErrors, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 142895325:
					{
						return ((double) (global::haxe.lang.Runtime.toDouble(((object) (this.result) ))) );
					}
					
					
					default:
					{
						return base.__hx_getField_f(field, hash, throwErrors, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_invokeField(string field, int hash, object[] dynargs) {
			unchecked {
				switch (hash) {
					case 635393336:
					{
						return this.trigger(global::haxe.lang.Runtime.genericCast<T>(dynargs[0]));
					}
					
					
					case 35955413:
					{
						return this.asFuture();
					}
					
					
					case 1743047096:
					{
						return this.eager();
					}
					
					
					case 1436316155:
					{
						return this.gather();
					}
					
					
					case 1725829219:
					{
						return this.flatMap<object>(((global::haxe.lang.Function) (dynargs[0]) ));
					}
					
					
					case 5442204:
					{
						return this.map<object>(((global::haxe.lang.Function) (dynargs[0]) ));
					}
					
					
					case 939361192:
					{
						return this.handle(((global::haxe.lang.Function) (dynargs[0]) ));
					}
					
					
					default:
					{
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
			}
		}
		
		
		public override void __hx_getFields(global::Array<object> baseArr) {
			baseArr.push("list");
			baseArr.push("result");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core {
	public class FutureTrigger_map_339__Fun<R, T> : global::haxe.lang.Function {
		
		public FutureTrigger_map_339__Fun(global::tink.core.FutureTrigger<R> ret, global::haxe.lang.Function f) : base(1, 0) {
			this.ret = ret;
			this.f = f;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			T v1 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T>(__fn_dyn1)) );
			R tmp = global::haxe.lang.Runtime.genericCast<R>(this.f.__hx_invoke1_o(default(double), v1));
			this.ret.trigger(tmp);
			return null;
		}
		
		
		public global::tink.core.FutureTrigger<R> ret;
		
		public global::haxe.lang.Function f;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core {
	public class FutureTrigger_flatMap_348__Fun<R, T> : global::haxe.lang.Function {
		
		public FutureTrigger_flatMap_348__Fun(global::tink.core.FutureTrigger<R> ret, global::haxe.lang.Function f) : base(1, 0) {
			this.ret = ret;
			this.f = f;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			T v1 = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T>(__fn_dyn1)) );
			((global::tink.core._Future.FutureObject<R>) (global::tink.core._Future.FutureObject__Statics_.__hx_cast<R>(((global::tink.core._Future.FutureObject) (this.f.__hx_invoke1_o(default(double), v1)) ))) ).handle(((global::haxe.lang.Function) (new global::haxe.lang.Closure(this.ret, "trigger", 635393336)) ));
			return null;
		}
		
		
		public global::tink.core.FutureTrigger<R> ret;
		
		public global::haxe.lang.Function f;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core {
	public class FutureTrigger_gatherFuture_363__Fun<T1> : global::haxe.lang.Function {
		
		public FutureTrigger_gatherFuture_363__Fun(global::tink.core.FutureTrigger<T1>[] op, global::tink.core._Future.FutureObject<T1>[] f1) : base(1, 0) {
			this.op = op;
			this.f1 = f1;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::haxe.lang.Function cb = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float1) )) )) : (((global::haxe.lang.Function) (__fn_dyn1) )) );
			if (( this.op[0] == null )) {
				this.op[0] = new global::tink.core.FutureTrigger<T1>();
				this.f1[0].handle(((global::haxe.lang.Function) (new global::haxe.lang.Closure(this.op[0], "trigger", 635393336)) ));
				this.f1[0] = null;
			}
			
			return this.op[0].handle(cb);
		}
		
		
		public global::tink.core.FutureTrigger<T1>[] op;
		
		public global::tink.core._Future.FutureObject<T1>[] f1;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core {
	[global::haxe.lang.GenericInterface(typeof(global::tink.core.FutureTrigger<object>))]
	public interface FutureTrigger : global::haxe.lang.IHxObject, global::haxe.lang.IGenericObject {
		
		object tink_core_FutureTrigger_cast<T_c>();
		
		object tink_core__Future_FutureObject_cast<T_c>();
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Future {
	public class LazyTrigger<T> : global::tink.core.FutureTrigger<T>, global::tink.core._Future.LazyTrigger {
		
		public LazyTrigger(global::haxe.lang.EmptyObject empty) : base(((global::haxe.lang.EmptyObject) (global::haxe.lang.EmptyObject.EMPTY) )) {
		}
		
		
		public LazyTrigger(global::haxe.lang.Function op) : base(global::haxe.lang.EmptyObject.EMPTY) {
			global::tink.core._Future.LazyTrigger<object>.__hx_ctor_tink_core__Future_LazyTrigger<T>(((global::tink.core._Future.LazyTrigger<T>) (this) ), ((global::haxe.lang.Function) (op) ));
		}
		
		
		protected static void __hx_ctor_tink_core__Future_LazyTrigger<T_c>(global::tink.core._Future.LazyTrigger<T_c> __hx_this, global::haxe.lang.Function op) {
			__hx_this.op = op;
			global::tink.core.FutureTrigger<object>.__hx_ctor_tink_core_FutureTrigger<T_c>(((global::tink.core.FutureTrigger<T_c>) (__hx_this) ));
		}
		
		
		public static new object __hx_cast<T_c_c>(global::tink.core._Future.LazyTrigger me) {
			return ( (( me != null )) ? (me.tink_core__Future_LazyTrigger_cast<T_c_c>()) : default(object) );
		}
		
		
		public virtual object tink_core__Future_LazyTrigger_cast<T_c>() {
			if (global::haxe.lang.Runtime.eq(typeof(T), typeof(T_c))) {
				return this;
			}
			
			global::tink.core._Future.LazyTrigger<T_c> new_me = new global::tink.core._Future.LazyTrigger<T_c>(((global::haxe.lang.EmptyObject) (global::haxe.lang.EmptyObject.EMPTY) ));
			global::Array<object> fields = global::Reflect.fields(this);
			int i = 0;
			while (( i < fields.length )) {
				string field = global::haxe.lang.Runtime.toString(fields[i++]);
				global::Reflect.setField(new_me, field, global::Reflect.field(this, field));
			}
			
			return new_me;
		}
		
		
		public override object tink_core__Future_FutureObject_cast<T_c>() {
			return this.tink_core__Future_LazyTrigger_cast<T>();
		}
		
		
		public override object tink_core_FutureTrigger_cast<T_c>() {
			return this.tink_core__Future_LazyTrigger_cast<T>();
		}
		
		
		public global::haxe.lang.Function op;
		
		public override global::tink.core.FutureTrigger<T> eager() {
			if (( this.op != null )) {
				global::haxe.lang.Function op = this.op;
				this.op = null;
				global::tink.core._Callback.Callback_Impl_.invoke<object>(((global::haxe.lang.Function) (op) ), ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "trigger", 635393336)) ));
			}
			
			return this;
		}
		
		
		public override global::tink.core._Future.FutureObject<R> map<R>(global::haxe.lang.Function f) {
			global::tink.core._Future.LazyTrigger<T> _gthis = this;
			if (( this.op == null )) {
				return base.map<R>(((global::haxe.lang.Function) (f) ));
			}
			else {
				return global::tink.core._Future.Future_Impl_.async<R>(((global::haxe.lang.Function) (new global::tink.core._Future.LazyTrigger_map_412__Fun<T, R>(f, _gthis)) ), new global::haxe.lang.Null<bool>(true, true));
			}
			
		}
		
		
		public override global::tink.core._Future.FutureObject<R> flatMap<R>(global::haxe.lang.Function f) {
			global::tink.core._Future.LazyTrigger<T> _gthis = this;
			if (( this.op == null )) {
				return base.flatMap<R>(((global::haxe.lang.Function) (f) ));
			}
			else {
				return global::tink.core._Future.Future_Impl_.async<R>(((global::haxe.lang.Function) (new global::tink.core._Future.LazyTrigger_flatMap_419__Fun<T, R>(f, _gthis)) ), new global::haxe.lang.Null<bool>(true, true));
			}
			
		}
		
		
		public override global::tink.core._Callback.LinkObject handle(global::haxe.lang.Function cb) {
			global::tink.core._Future.LazyTrigger<T> __temp_expr1 = ((global::tink.core._Future.LazyTrigger<T>) (global::tink.core._Future.LazyTrigger<object>.__hx_cast<T>(((global::tink.core._Future.LazyTrigger) (this.eager()) ))) );
			return base.handle(cb);
		}
		
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 24865:
					{
						this.op = ((global::haxe.lang.Function) (@value) );
						return @value;
					}
					
					
					default:
					{
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				switch (hash) {
					case 939361192:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "handle", 939361192)) );
					}
					
					
					case 1725829219:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "flatMap", 1725829219)) );
					}
					
					
					case 5442204:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "map", 5442204)) );
					}
					
					
					case 1743047096:
					{
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "eager", 1743047096)) );
					}
					
					
					case 24865:
					{
						return this.op;
					}
					
					
					default:
					{
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
		}
		
		
		public override void __hx_getFields(global::Array<object> baseArr) {
			baseArr.push("op");
			base.__hx_getFields(baseArr);
		}
		
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Future {
	public class LazyTrigger_map_413__Fun<R, T> : global::haxe.lang.Function {
		
		public LazyTrigger_map_413__Fun(global::haxe.lang.Function f, global::haxe.lang.Function cb) : base(1, 0) {
			this.f = f;
			this.cb = cb;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			T v = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T>(__fn_dyn1)) );
			R tmp = global::haxe.lang.Runtime.genericCast<R>(this.f.__hx_invoke1_o(default(double), v));
			this.cb.__hx_invoke1_o(default(double), tmp);
			return null;
		}
		
		
		public global::haxe.lang.Function f;
		
		public global::haxe.lang.Function cb;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Future {
	public class LazyTrigger_map_412__Fun<T, R> : global::haxe.lang.Function {
		
		public LazyTrigger_map_412__Fun(global::haxe.lang.Function f, global::tink.core._Future.LazyTrigger<T> _gthis) : base(1, 0) {
			this.f = f;
			this._gthis = _gthis;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::haxe.lang.Function cb = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float1) )) )) : (((global::haxe.lang.Function) (__fn_dyn1) )) );
			this._gthis.handle(new global::tink.core._Future.LazyTrigger_map_413__Fun<R, T>(this.f, cb));
			return null;
		}
		
		
		public global::haxe.lang.Function f;
		
		public global::tink.core._Future.LazyTrigger<T> _gthis;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Future {
	public class LazyTrigger_flatMap_420__Fun<R, T> : global::haxe.lang.Function {
		
		public LazyTrigger_flatMap_420__Fun(global::haxe.lang.Function f, global::haxe.lang.Function cb) : base(1, 0) {
			this.f = f;
			this.cb = cb;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			T v = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (global::haxe.lang.Runtime.genericCast<T>(((object) (__fn_float1) ))) : (global::haxe.lang.Runtime.genericCast<T>(__fn_dyn1)) );
			((global::tink.core._Future.FutureObject<R>) (global::tink.core._Future.FutureObject__Statics_.__hx_cast<R>(((global::tink.core._Future.FutureObject) (this.f.__hx_invoke1_o(default(double), v)) ))) ).handle(this.cb);
			return null;
		}
		
		
		public global::haxe.lang.Function f;
		
		public global::haxe.lang.Function cb;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Future {
	public class LazyTrigger_flatMap_419__Fun<T, R> : global::haxe.lang.Function {
		
		public LazyTrigger_flatMap_419__Fun(global::haxe.lang.Function f, global::tink.core._Future.LazyTrigger<T> _gthis) : base(1, 0) {
			this.f = f;
			this._gthis = _gthis;
		}
		
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			global::haxe.lang.Function cb = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::haxe.lang.Function) (((object) (__fn_float1) )) )) : (((global::haxe.lang.Function) (__fn_dyn1) )) );
			this._gthis.handle(new global::tink.core._Future.LazyTrigger_flatMap_420__Fun<R, T>(this.f, cb));
			return null;
		}
		
		
		public global::haxe.lang.Function f;
		
		public global::tink.core._Future.LazyTrigger<T> _gthis;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace tink.core._Future {
	[global::haxe.lang.GenericInterface(typeof(global::tink.core._Future.LazyTrigger<object>))]
	public interface LazyTrigger : global::haxe.lang.IHxObject, global::tink.core.FutureTrigger, global::haxe.lang.IGenericObject {
		
		object tink_core__Future_LazyTrigger_cast<T_c>();
		
		object tink_core_FutureTrigger_cast<T_c>();
		
	}
}


